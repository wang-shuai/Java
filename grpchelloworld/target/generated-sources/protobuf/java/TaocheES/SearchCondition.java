// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: taochees.proto

package TaocheES;

/**
 * <pre>
 *车源检索条件实体(用于调用grpc 中查询京东车源，cpc车源，一般车时传入的参数)
 * </pre>
 *
 * Protobuf type {@code TaocheES.SearchCondition}
 */
public  final class SearchCondition extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:TaocheES.SearchCondition)
    SearchConditionOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SearchCondition.newBuilder() to construct.
  private SearchCondition(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SearchCondition() {
    commonFlag_ = 0;
    requestSource_ = 0;
    returnFieldArray_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    orderByFieldArray_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    orderByIsDESCArray_ = java.util.Collections.emptyList();
    sortBoostFlag_ = 0;
    pageSize_ = 0;
    pageIndex_ = 0;
    distanceKm_ = 0D;
    location_ = "";
    isCountSearch_ = false;
    requestParametersLog_ = "";
    aggrFieldList_ = java.util.Collections.emptyList();
    startNum_ = 0;
    ucarIdArray_ = java.util.Collections.emptyList();
    siteId_ = java.util.Collections.emptyList();
    ucarStatusArray_ = java.util.Collections.emptyList();
    noUcarIdArray_ = java.util.Collections.emptyList();
    isAuthenticated_ = 0;
    source_ = 0;
    userIdArray_ = java.util.Collections.emptyList();
    noUserIdArray_ = java.util.Collections.emptyList();
    ucarSerialNumberArray_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    keyWord_ = "";
    colorArray_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    carSource1L_ = 0;
    pictureCount_ = 0;
    bigAreaIdArray_ = java.util.Collections.emptyList();
    provinceIdArray_ = java.util.Collections.emptyList();
    cityIdArray_ = java.util.Collections.emptyList();
    noCityIdArray_ = java.util.Collections.emptyList();
    relateCityArray_ = java.util.Collections.emptyList();
    priceLowerArray_ = java.util.Collections.emptyList();
    priceHighArray_ = java.util.Collections.emptyList();
    cPriceLowerArray_ = java.util.Collections.emptyList();
    cPriceHighArray_ = java.util.Collections.emptyList();
    b2BPriceLowerArray_ = java.util.Collections.emptyList();
    b2BPriceHighArray_ = java.util.Collections.emptyList();
    carAgeLowerArray_ = java.util.Collections.emptyList();
    carAgeHighArray_ = java.util.Collections.emptyList();
    drivingMileageLowerArray_ = java.util.Collections.emptyList();
    drivingMileageHighArray_ = java.util.Collections.emptyList();
    superiorId_ = 0;
    userType_ = 0;
    isNeglect_ = 0;
    isVideo_ = 0;
    isFirstPicTrue_ = 0;
    isDealerRecommend_ = 0;
    carSourceTypeArray_ = java.util.Collections.emptyList();
    carTypeConfig_ = java.util.Collections.emptyList();
    isRecommendGL_ = 0;
    isWarranty_ = 0;
    warrantyTypeArray_ = java.util.Collections.emptyList();
    isTop_ = 0;
    isActivity_ = 0;
    isBangmai_ = 0;
    isBangmaiche_ = 0;
    isShowMr_ = 0;
    isCarId_ = 0;
    isB2B_ = 0;
    crmCustomerIdArray_ = java.util.Collections.emptyList();
    isCheckReportJson_ = 0;
    envirStandardArray_ = java.util.Collections.emptyList();
    consumptionLowerArray_ = java.util.Collections.emptyList();
    consumptionHighArray_ = java.util.Collections.emptyList();
    oilTypeArray_ = java.util.Collections.emptyList();
    engineLocationArray_ = java.util.Collections.emptyList();
    bodyDoorsLowerArray_ = java.util.Collections.emptyList();
    bodyDoorsHighArray_ = java.util.Collections.emptyList();
    seatNumLowerArray_ = java.util.Collections.emptyList();
    seatNumHighArray_ = java.util.Collections.emptyList();
    isWagon_ = 0;
    driveTypeArray_ = java.util.Collections.emptyList();
    csBodyFormArray_ = java.util.Collections.emptyList();
    carLevelArray_ = java.util.Collections.emptyList();
    carLevelSecondArray_ = java.util.Collections.emptyList();
    carYearArray_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    mainBrandArray_ = java.util.Collections.emptyList();
    brandArray_ = java.util.Collections.emptyList();
    carSerialArray_ = java.util.Collections.emptyList();
    carIDArray_ = java.util.Collections.emptyList();
    gearBoxTypeArray_ = java.util.Collections.emptyList();
    exhaustLevelLowerArray_ = java.util.Collections.emptyList();
    exhaustLevelHighArray_ = java.util.Collections.emptyList();
    exhaustLevelArray_ = java.util.Collections.emptyList();
    countryArray_ = java.util.Collections.emptyList();
    brandAttrArray_ = java.util.Collections.emptyList();
    adCity_ = 0;
    adCondition_ = 0;
    carBenefitRateLower_ = 0D;
    carBenefitRateHigh_ = 0D;
    callConnectRateLower_ = 0D;
    callConnectRateHigh_ = 0D;
    vinCodeArray_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    licenseProvinceIdArray_ = java.util.Collections.emptyList();
    licenseCityIdArray_ = java.util.Collections.emptyList();
    isLicensed_ = 0;
    noCrmCustomerIdArray_ = java.util.Collections.emptyList();
    carPvMin_ = 0;
    carPvMax_ = 0;
    noSuperiorIdArray_ = java.util.Collections.emptyList();
    isDealerAuthorized_ = 0;
    loanFirstPayLowerArray_ = java.util.Collections.emptyList();
    loanFirstPayHighArray_ = java.util.Collections.emptyList();
    loanDailyPayLowerArray_ = java.util.Collections.emptyList();
    loanDailyPayHighArray_ = java.util.Collections.emptyList();
    loanMonthPayLowerArray_ = java.util.Collections.emptyList();
    loanMonthPayHighArray_ = java.util.Collections.emptyList();
    districtIdArray_ = java.util.Collections.emptyList();
    inhaleTypeArray_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SearchCondition(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    int mutable_bitField1_ = 0;
    int mutable_bitField2_ = 0;
    int mutable_bitField3_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {

            commonFlag_ = input.readInt32();
            break;
          }
          case 16: {

            requestSource_ = input.readInt32();
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              returnFieldArray_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000004;
            }
            returnFieldArray_.add(s);
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              orderByFieldArray_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000008;
            }
            orderByFieldArray_.add(s);
            break;
          }
          case 40: {
            if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
              orderByIsDESCArray_ = new java.util.ArrayList<java.lang.Boolean>();
              mutable_bitField0_ |= 0x00000010;
            }
            orderByIsDESCArray_.add(input.readBool());
            break;
          }
          case 42: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
              orderByIsDESCArray_ = new java.util.ArrayList<java.lang.Boolean>();
              mutable_bitField0_ |= 0x00000010;
            }
            while (input.getBytesUntilLimit() > 0) {
              orderByIsDESCArray_.add(input.readBool());
            }
            input.popLimit(limit);
            break;
          }
          case 48: {

            sortBoostFlag_ = input.readInt32();
            break;
          }
          case 56: {

            pageSize_ = input.readInt32();
            break;
          }
          case 64: {

            pageIndex_ = input.readInt32();
            break;
          }
          case 73: {

            distanceKm_ = input.readDouble();
            break;
          }
          case 82: {
            java.lang.String s = input.readStringRequireUtf8();

            location_ = s;
            break;
          }
          case 88: {

            isCountSearch_ = input.readBool();
            break;
          }
          case 98: {
            java.lang.String s = input.readStringRequireUtf8();

            requestParametersLog_ = s;
            break;
          }
          case 106: {
            if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
              aggrFieldList_ = new java.util.ArrayList<TaocheES.AggrCondition>();
              mutable_bitField0_ |= 0x00001000;
            }
            aggrFieldList_.add(
                input.readMessage(TaocheES.AggrCondition.parser(), extensionRegistry));
            break;
          }
          case 112: {

            startNum_ = input.readInt32();
            break;
          }
          case 808: {
            if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
              ucarIdArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00004000;
            }
            ucarIdArray_.add(input.readInt32());
            break;
          }
          case 810: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00004000) == 0x00004000) && input.getBytesUntilLimit() > 0) {
              ucarIdArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00004000;
            }
            while (input.getBytesUntilLimit() > 0) {
              ucarIdArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 816: {
            if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
              siteId_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00008000;
            }
            siteId_.add(input.readInt32());
            break;
          }
          case 818: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00008000) == 0x00008000) && input.getBytesUntilLimit() > 0) {
              siteId_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00008000;
            }
            while (input.getBytesUntilLimit() > 0) {
              siteId_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 824: {
            if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
              ucarStatusArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00010000;
            }
            ucarStatusArray_.add(input.readInt32());
            break;
          }
          case 826: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00010000) == 0x00010000) && input.getBytesUntilLimit() > 0) {
              ucarStatusArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00010000;
            }
            while (input.getBytesUntilLimit() > 0) {
              ucarStatusArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 832: {
            if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
              noUcarIdArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00020000;
            }
            noUcarIdArray_.add(input.readInt32());
            break;
          }
          case 834: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00020000) == 0x00020000) && input.getBytesUntilLimit() > 0) {
              noUcarIdArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00020000;
            }
            while (input.getBytesUntilLimit() > 0) {
              noUcarIdArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 840: {

            isAuthenticated_ = input.readInt32();
            break;
          }
          case 848: {

            source_ = input.readInt32();
            break;
          }
          case 856: {
            if (!((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
              userIdArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00100000;
            }
            userIdArray_.add(input.readInt32());
            break;
          }
          case 858: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00100000) == 0x00100000) && input.getBytesUntilLimit() > 0) {
              userIdArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00100000;
            }
            while (input.getBytesUntilLimit() > 0) {
              userIdArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 864: {
            if (!((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
              noUserIdArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00200000;
            }
            noUserIdArray_.add(input.readInt32());
            break;
          }
          case 866: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00200000) == 0x00200000) && input.getBytesUntilLimit() > 0) {
              noUserIdArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00200000;
            }
            while (input.getBytesUntilLimit() > 0) {
              noUserIdArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 874: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00400000) == 0x00400000)) {
              ucarSerialNumberArray_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00400000;
            }
            ucarSerialNumberArray_.add(s);
            break;
          }
          case 882: {
            java.lang.String s = input.readStringRequireUtf8();

            keyWord_ = s;
            break;
          }
          case 890: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x01000000) == 0x01000000)) {
              colorArray_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x01000000;
            }
            colorArray_.add(s);
            break;
          }
          case 896: {

            carSource1L_ = input.readInt32();
            break;
          }
          case 904: {

            pictureCount_ = input.readInt32();
            break;
          }
          case 912: {
            if (!((mutable_bitField0_ & 0x08000000) == 0x08000000)) {
              bigAreaIdArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x08000000;
            }
            bigAreaIdArray_.add(input.readInt32());
            break;
          }
          case 914: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x08000000) == 0x08000000) && input.getBytesUntilLimit() > 0) {
              bigAreaIdArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x08000000;
            }
            while (input.getBytesUntilLimit() > 0) {
              bigAreaIdArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 920: {
            if (!((mutable_bitField0_ & 0x10000000) == 0x10000000)) {
              provinceIdArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x10000000;
            }
            provinceIdArray_.add(input.readInt32());
            break;
          }
          case 922: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x10000000) == 0x10000000) && input.getBytesUntilLimit() > 0) {
              provinceIdArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x10000000;
            }
            while (input.getBytesUntilLimit() > 0) {
              provinceIdArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 928: {
            if (!((mutable_bitField0_ & 0x20000000) == 0x20000000)) {
              cityIdArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x20000000;
            }
            cityIdArray_.add(input.readInt32());
            break;
          }
          case 930: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x20000000) == 0x20000000) && input.getBytesUntilLimit() > 0) {
              cityIdArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x20000000;
            }
            while (input.getBytesUntilLimit() > 0) {
              cityIdArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 936: {
            if (!((mutable_bitField0_ & 0x40000000) == 0x40000000)) {
              noCityIdArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x40000000;
            }
            noCityIdArray_.add(input.readInt32());
            break;
          }
          case 938: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x40000000) == 0x40000000) && input.getBytesUntilLimit() > 0) {
              noCityIdArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x40000000;
            }
            while (input.getBytesUntilLimit() > 0) {
              noCityIdArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 944: {
            if (!((mutable_bitField0_ & 0x80000000) == 0x80000000)) {
              relateCityArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x80000000;
            }
            relateCityArray_.add(input.readInt32());
            break;
          }
          case 946: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x80000000) == 0x80000000) && input.getBytesUntilLimit() > 0) {
              relateCityArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x80000000;
            }
            while (input.getBytesUntilLimit() > 0) {
              relateCityArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 953: {
            if (!((mutable_bitField1_ & 0x00000001) == 0x00000001)) {
              priceLowerArray_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField1_ |= 0x00000001;
            }
            priceLowerArray_.add(input.readDouble());
            break;
          }
          case 954: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField1_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
              priceLowerArray_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField1_ |= 0x00000001;
            }
            while (input.getBytesUntilLimit() > 0) {
              priceLowerArray_.add(input.readDouble());
            }
            input.popLimit(limit);
            break;
          }
          case 961: {
            if (!((mutable_bitField1_ & 0x00000002) == 0x00000002)) {
              priceHighArray_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField1_ |= 0x00000002;
            }
            priceHighArray_.add(input.readDouble());
            break;
          }
          case 962: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField1_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
              priceHighArray_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField1_ |= 0x00000002;
            }
            while (input.getBytesUntilLimit() > 0) {
              priceHighArray_.add(input.readDouble());
            }
            input.popLimit(limit);
            break;
          }
          case 969: {
            if (!((mutable_bitField1_ & 0x00000004) == 0x00000004)) {
              cPriceLowerArray_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField1_ |= 0x00000004;
            }
            cPriceLowerArray_.add(input.readDouble());
            break;
          }
          case 970: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField1_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
              cPriceLowerArray_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField1_ |= 0x00000004;
            }
            while (input.getBytesUntilLimit() > 0) {
              cPriceLowerArray_.add(input.readDouble());
            }
            input.popLimit(limit);
            break;
          }
          case 977: {
            if (!((mutable_bitField1_ & 0x00000008) == 0x00000008)) {
              cPriceHighArray_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField1_ |= 0x00000008;
            }
            cPriceHighArray_.add(input.readDouble());
            break;
          }
          case 978: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField1_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
              cPriceHighArray_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField1_ |= 0x00000008;
            }
            while (input.getBytesUntilLimit() > 0) {
              cPriceHighArray_.add(input.readDouble());
            }
            input.popLimit(limit);
            break;
          }
          case 985: {
            if (!((mutable_bitField1_ & 0x00000010) == 0x00000010)) {
              b2BPriceLowerArray_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField1_ |= 0x00000010;
            }
            b2BPriceLowerArray_.add(input.readDouble());
            break;
          }
          case 986: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField1_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
              b2BPriceLowerArray_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField1_ |= 0x00000010;
            }
            while (input.getBytesUntilLimit() > 0) {
              b2BPriceLowerArray_.add(input.readDouble());
            }
            input.popLimit(limit);
            break;
          }
          case 993: {
            if (!((mutable_bitField1_ & 0x00000020) == 0x00000020)) {
              b2BPriceHighArray_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField1_ |= 0x00000020;
            }
            b2BPriceHighArray_.add(input.readDouble());
            break;
          }
          case 994: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField1_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
              b2BPriceHighArray_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField1_ |= 0x00000020;
            }
            while (input.getBytesUntilLimit() > 0) {
              b2BPriceHighArray_.add(input.readDouble());
            }
            input.popLimit(limit);
            break;
          }
          case 1000: {
            if (!((mutable_bitField1_ & 0x00000040) == 0x00000040)) {
              carAgeLowerArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField1_ |= 0x00000040;
            }
            carAgeLowerArray_.add(input.readInt32());
            break;
          }
          case 1002: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField1_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
              carAgeLowerArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField1_ |= 0x00000040;
            }
            while (input.getBytesUntilLimit() > 0) {
              carAgeLowerArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 1008: {
            if (!((mutable_bitField1_ & 0x00000080) == 0x00000080)) {
              carAgeHighArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField1_ |= 0x00000080;
            }
            carAgeHighArray_.add(input.readInt32());
            break;
          }
          case 1010: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField1_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
              carAgeHighArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField1_ |= 0x00000080;
            }
            while (input.getBytesUntilLimit() > 0) {
              carAgeHighArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 1016: {
            if (!((mutable_bitField1_ & 0x00000100) == 0x00000100)) {
              drivingMileageLowerArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField1_ |= 0x00000100;
            }
            drivingMileageLowerArray_.add(input.readInt32());
            break;
          }
          case 1018: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField1_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
              drivingMileageLowerArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField1_ |= 0x00000100;
            }
            while (input.getBytesUntilLimit() > 0) {
              drivingMileageLowerArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 1024: {
            if (!((mutable_bitField1_ & 0x00000200) == 0x00000200)) {
              drivingMileageHighArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField1_ |= 0x00000200;
            }
            drivingMileageHighArray_.add(input.readInt32());
            break;
          }
          case 1026: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField1_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
              drivingMileageHighArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField1_ |= 0x00000200;
            }
            while (input.getBytesUntilLimit() > 0) {
              drivingMileageHighArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 1032: {

            superiorId_ = input.readInt32();
            break;
          }
          case 1040: {

            userType_ = input.readInt32();
            break;
          }
          case 1048: {

            isNeglect_ = input.readInt32();
            break;
          }
          case 1056: {

            isVideo_ = input.readInt32();
            break;
          }
          case 1064: {

            isFirstPicTrue_ = input.readInt32();
            break;
          }
          case 1072: {

            isDealerRecommend_ = input.readInt32();
            break;
          }
          case 1080: {
            if (!((mutable_bitField1_ & 0x00010000) == 0x00010000)) {
              carSourceTypeArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField1_ |= 0x00010000;
            }
            carSourceTypeArray_.add(input.readInt32());
            break;
          }
          case 1082: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField1_ & 0x00010000) == 0x00010000) && input.getBytesUntilLimit() > 0) {
              carSourceTypeArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField1_ |= 0x00010000;
            }
            while (input.getBytesUntilLimit() > 0) {
              carSourceTypeArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 1088: {
            if (!((mutable_bitField1_ & 0x00020000) == 0x00020000)) {
              carTypeConfig_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField1_ |= 0x00020000;
            }
            carTypeConfig_.add(input.readInt32());
            break;
          }
          case 1090: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField1_ & 0x00020000) == 0x00020000) && input.getBytesUntilLimit() > 0) {
              carTypeConfig_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField1_ |= 0x00020000;
            }
            while (input.getBytesUntilLimit() > 0) {
              carTypeConfig_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 1096: {

            isRecommendGL_ = input.readInt32();
            break;
          }
          case 1104: {

            isWarranty_ = input.readInt32();
            break;
          }
          case 1112: {
            if (!((mutable_bitField1_ & 0x00100000) == 0x00100000)) {
              warrantyTypeArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField1_ |= 0x00100000;
            }
            warrantyTypeArray_.add(input.readInt32());
            break;
          }
          case 1114: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField1_ & 0x00100000) == 0x00100000) && input.getBytesUntilLimit() > 0) {
              warrantyTypeArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField1_ |= 0x00100000;
            }
            while (input.getBytesUntilLimit() > 0) {
              warrantyTypeArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 1120: {

            isTop_ = input.readInt32();
            break;
          }
          case 1128: {

            isActivity_ = input.readInt32();
            break;
          }
          case 1136: {

            isBangmai_ = input.readInt32();
            break;
          }
          case 1144: {

            isBangmaiche_ = input.readInt32();
            break;
          }
          case 1152: {

            isShowMr_ = input.readInt32();
            break;
          }
          case 1160: {

            isCarId_ = input.readInt32();
            break;
          }
          case 1168: {

            isB2B_ = input.readInt32();
            break;
          }
          case 1176: {
            if (!((mutable_bitField1_ & 0x10000000) == 0x10000000)) {
              crmCustomerIdArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField1_ |= 0x10000000;
            }
            crmCustomerIdArray_.add(input.readInt32());
            break;
          }
          case 1178: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField1_ & 0x10000000) == 0x10000000) && input.getBytesUntilLimit() > 0) {
              crmCustomerIdArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField1_ |= 0x10000000;
            }
            while (input.getBytesUntilLimit() > 0) {
              crmCustomerIdArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 1184: {

            isCheckReportJson_ = input.readInt32();
            break;
          }
          case 1192: {
            if (!((mutable_bitField1_ & 0x40000000) == 0x40000000)) {
              envirStandardArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField1_ |= 0x40000000;
            }
            envirStandardArray_.add(input.readInt32());
            break;
          }
          case 1194: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField1_ & 0x40000000) == 0x40000000) && input.getBytesUntilLimit() > 0) {
              envirStandardArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField1_ |= 0x40000000;
            }
            while (input.getBytesUntilLimit() > 0) {
              envirStandardArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 1201: {
            if (!((mutable_bitField1_ & 0x80000000) == 0x80000000)) {
              consumptionLowerArray_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField1_ |= 0x80000000;
            }
            consumptionLowerArray_.add(input.readDouble());
            break;
          }
          case 1202: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField1_ & 0x80000000) == 0x80000000) && input.getBytesUntilLimit() > 0) {
              consumptionLowerArray_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField1_ |= 0x80000000;
            }
            while (input.getBytesUntilLimit() > 0) {
              consumptionLowerArray_.add(input.readDouble());
            }
            input.popLimit(limit);
            break;
          }
          case 1209: {
            if (!((mutable_bitField2_ & 0x00000001) == 0x00000001)) {
              consumptionHighArray_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField2_ |= 0x00000001;
            }
            consumptionHighArray_.add(input.readDouble());
            break;
          }
          case 1210: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField2_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
              consumptionHighArray_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField2_ |= 0x00000001;
            }
            while (input.getBytesUntilLimit() > 0) {
              consumptionHighArray_.add(input.readDouble());
            }
            input.popLimit(limit);
            break;
          }
          case 1216: {
            if (!((mutable_bitField2_ & 0x00000002) == 0x00000002)) {
              oilTypeArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x00000002;
            }
            oilTypeArray_.add(input.readInt32());
            break;
          }
          case 1218: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField2_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
              oilTypeArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x00000002;
            }
            while (input.getBytesUntilLimit() > 0) {
              oilTypeArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 1224: {
            if (!((mutable_bitField2_ & 0x00000004) == 0x00000004)) {
              engineLocationArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x00000004;
            }
            engineLocationArray_.add(input.readInt32());
            break;
          }
          case 1226: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField2_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
              engineLocationArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x00000004;
            }
            while (input.getBytesUntilLimit() > 0) {
              engineLocationArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 1232: {
            if (!((mutable_bitField2_ & 0x00000008) == 0x00000008)) {
              bodyDoorsLowerArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x00000008;
            }
            bodyDoorsLowerArray_.add(input.readInt32());
            break;
          }
          case 1234: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField2_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
              bodyDoorsLowerArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x00000008;
            }
            while (input.getBytesUntilLimit() > 0) {
              bodyDoorsLowerArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 1240: {
            if (!((mutable_bitField2_ & 0x00000010) == 0x00000010)) {
              bodyDoorsHighArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x00000010;
            }
            bodyDoorsHighArray_.add(input.readInt32());
            break;
          }
          case 1242: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField2_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
              bodyDoorsHighArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x00000010;
            }
            while (input.getBytesUntilLimit() > 0) {
              bodyDoorsHighArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 1248: {
            if (!((mutable_bitField2_ & 0x00000020) == 0x00000020)) {
              seatNumLowerArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x00000020;
            }
            seatNumLowerArray_.add(input.readInt32());
            break;
          }
          case 1250: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField2_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
              seatNumLowerArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x00000020;
            }
            while (input.getBytesUntilLimit() > 0) {
              seatNumLowerArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 1256: {
            if (!((mutable_bitField2_ & 0x00000040) == 0x00000040)) {
              seatNumHighArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x00000040;
            }
            seatNumHighArray_.add(input.readInt32());
            break;
          }
          case 1258: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField2_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
              seatNumHighArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x00000040;
            }
            while (input.getBytesUntilLimit() > 0) {
              seatNumHighArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 1264: {

            isWagon_ = input.readInt32();
            break;
          }
          case 1272: {
            if (!((mutable_bitField2_ & 0x00000100) == 0x00000100)) {
              driveTypeArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x00000100;
            }
            driveTypeArray_.add(input.readInt32());
            break;
          }
          case 1274: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField2_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
              driveTypeArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x00000100;
            }
            while (input.getBytesUntilLimit() > 0) {
              driveTypeArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 1280: {
            if (!((mutable_bitField2_ & 0x00000200) == 0x00000200)) {
              csBodyFormArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x00000200;
            }
            csBodyFormArray_.add(input.readInt32());
            break;
          }
          case 1282: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField2_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
              csBodyFormArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x00000200;
            }
            while (input.getBytesUntilLimit() > 0) {
              csBodyFormArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 1288: {
            if (!((mutable_bitField2_ & 0x00000400) == 0x00000400)) {
              carLevelArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x00000400;
            }
            carLevelArray_.add(input.readInt32());
            break;
          }
          case 1290: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField2_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
              carLevelArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x00000400;
            }
            while (input.getBytesUntilLimit() > 0) {
              carLevelArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 1296: {
            if (!((mutable_bitField2_ & 0x00000800) == 0x00000800)) {
              carLevelSecondArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x00000800;
            }
            carLevelSecondArray_.add(input.readInt32());
            break;
          }
          case 1298: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField2_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
              carLevelSecondArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x00000800;
            }
            while (input.getBytesUntilLimit() > 0) {
              carLevelSecondArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 1306: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField2_ & 0x00001000) == 0x00001000)) {
              carYearArray_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField2_ |= 0x00001000;
            }
            carYearArray_.add(s);
            break;
          }
          case 1312: {
            if (!((mutable_bitField2_ & 0x00002000) == 0x00002000)) {
              mainBrandArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x00002000;
            }
            mainBrandArray_.add(input.readInt32());
            break;
          }
          case 1314: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField2_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
              mainBrandArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x00002000;
            }
            while (input.getBytesUntilLimit() > 0) {
              mainBrandArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 1320: {
            if (!((mutable_bitField2_ & 0x00004000) == 0x00004000)) {
              brandArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x00004000;
            }
            brandArray_.add(input.readInt32());
            break;
          }
          case 1322: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField2_ & 0x00004000) == 0x00004000) && input.getBytesUntilLimit() > 0) {
              brandArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x00004000;
            }
            while (input.getBytesUntilLimit() > 0) {
              brandArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 1328: {
            if (!((mutable_bitField2_ & 0x00008000) == 0x00008000)) {
              carSerialArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x00008000;
            }
            carSerialArray_.add(input.readInt32());
            break;
          }
          case 1330: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField2_ & 0x00008000) == 0x00008000) && input.getBytesUntilLimit() > 0) {
              carSerialArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x00008000;
            }
            while (input.getBytesUntilLimit() > 0) {
              carSerialArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 1336: {
            if (!((mutable_bitField2_ & 0x00010000) == 0x00010000)) {
              carIDArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x00010000;
            }
            carIDArray_.add(input.readInt32());
            break;
          }
          case 1338: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField2_ & 0x00010000) == 0x00010000) && input.getBytesUntilLimit() > 0) {
              carIDArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x00010000;
            }
            while (input.getBytesUntilLimit() > 0) {
              carIDArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 1344: {
            if (!((mutable_bitField2_ & 0x00020000) == 0x00020000)) {
              gearBoxTypeArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x00020000;
            }
            gearBoxTypeArray_.add(input.readInt32());
            break;
          }
          case 1346: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField2_ & 0x00020000) == 0x00020000) && input.getBytesUntilLimit() > 0) {
              gearBoxTypeArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x00020000;
            }
            while (input.getBytesUntilLimit() > 0) {
              gearBoxTypeArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 1353: {
            if (!((mutable_bitField2_ & 0x00040000) == 0x00040000)) {
              exhaustLevelLowerArray_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField2_ |= 0x00040000;
            }
            exhaustLevelLowerArray_.add(input.readDouble());
            break;
          }
          case 1354: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField2_ & 0x00040000) == 0x00040000) && input.getBytesUntilLimit() > 0) {
              exhaustLevelLowerArray_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField2_ |= 0x00040000;
            }
            while (input.getBytesUntilLimit() > 0) {
              exhaustLevelLowerArray_.add(input.readDouble());
            }
            input.popLimit(limit);
            break;
          }
          case 1361: {
            if (!((mutable_bitField2_ & 0x00080000) == 0x00080000)) {
              exhaustLevelHighArray_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField2_ |= 0x00080000;
            }
            exhaustLevelHighArray_.add(input.readDouble());
            break;
          }
          case 1362: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField2_ & 0x00080000) == 0x00080000) && input.getBytesUntilLimit() > 0) {
              exhaustLevelHighArray_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField2_ |= 0x00080000;
            }
            while (input.getBytesUntilLimit() > 0) {
              exhaustLevelHighArray_.add(input.readDouble());
            }
            input.popLimit(limit);
            break;
          }
          case 1368: {
            if (!((mutable_bitField2_ & 0x00100000) == 0x00100000)) {
              exhaustLevelArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x00100000;
            }
            exhaustLevelArray_.add(input.readInt32());
            break;
          }
          case 1370: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField2_ & 0x00100000) == 0x00100000) && input.getBytesUntilLimit() > 0) {
              exhaustLevelArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x00100000;
            }
            while (input.getBytesUntilLimit() > 0) {
              exhaustLevelArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 1376: {
            if (!((mutable_bitField2_ & 0x00200000) == 0x00200000)) {
              countryArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x00200000;
            }
            countryArray_.add(input.readInt32());
            break;
          }
          case 1378: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField2_ & 0x00200000) == 0x00200000) && input.getBytesUntilLimit() > 0) {
              countryArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x00200000;
            }
            while (input.getBytesUntilLimit() > 0) {
              countryArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 1384: {
            if (!((mutable_bitField2_ & 0x00400000) == 0x00400000)) {
              brandAttrArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x00400000;
            }
            brandAttrArray_.add(input.readInt32());
            break;
          }
          case 1386: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField2_ & 0x00400000) == 0x00400000) && input.getBytesUntilLimit() > 0) {
              brandAttrArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x00400000;
            }
            while (input.getBytesUntilLimit() > 0) {
              brandAttrArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 1392: {

            adCity_ = input.readInt32();
            break;
          }
          case 1400: {

            adCondition_ = input.readInt32();
            break;
          }
          case 1409: {

            carBenefitRateLower_ = input.readDouble();
            break;
          }
          case 1417: {

            carBenefitRateHigh_ = input.readDouble();
            break;
          }
          case 1425: {

            callConnectRateLower_ = input.readDouble();
            break;
          }
          case 1433: {

            callConnectRateHigh_ = input.readDouble();
            break;
          }
          case 1442: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField2_ & 0x20000000) == 0x20000000)) {
              vinCodeArray_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField2_ |= 0x20000000;
            }
            vinCodeArray_.add(s);
            break;
          }
          case 1448: {
            if (!((mutable_bitField2_ & 0x40000000) == 0x40000000)) {
              licenseProvinceIdArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x40000000;
            }
            licenseProvinceIdArray_.add(input.readInt32());
            break;
          }
          case 1450: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField2_ & 0x40000000) == 0x40000000) && input.getBytesUntilLimit() > 0) {
              licenseProvinceIdArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x40000000;
            }
            while (input.getBytesUntilLimit() > 0) {
              licenseProvinceIdArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 1456: {
            if (!((mutable_bitField2_ & 0x80000000) == 0x80000000)) {
              licenseCityIdArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x80000000;
            }
            licenseCityIdArray_.add(input.readInt32());
            break;
          }
          case 1458: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField2_ & 0x80000000) == 0x80000000) && input.getBytesUntilLimit() > 0) {
              licenseCityIdArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField2_ |= 0x80000000;
            }
            while (input.getBytesUntilLimit() > 0) {
              licenseCityIdArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 1464: {

            isLicensed_ = input.readInt32();
            break;
          }
          case 1472: {
            if (!((mutable_bitField3_ & 0x00000002) == 0x00000002)) {
              noCrmCustomerIdArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField3_ |= 0x00000002;
            }
            noCrmCustomerIdArray_.add(input.readInt32());
            break;
          }
          case 1474: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField3_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
              noCrmCustomerIdArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField3_ |= 0x00000002;
            }
            while (input.getBytesUntilLimit() > 0) {
              noCrmCustomerIdArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 1480: {

            carPvMin_ = input.readInt32();
            break;
          }
          case 1488: {

            carPvMax_ = input.readInt32();
            break;
          }
          case 1496: {
            if (!((mutable_bitField3_ & 0x00000010) == 0x00000010)) {
              noSuperiorIdArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField3_ |= 0x00000010;
            }
            noSuperiorIdArray_.add(input.readInt32());
            break;
          }
          case 1498: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField3_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
              noSuperiorIdArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField3_ |= 0x00000010;
            }
            while (input.getBytesUntilLimit() > 0) {
              noSuperiorIdArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 1504: {

            isDealerAuthorized_ = input.readInt32();
            break;
          }
          case 1513: {
            if (!((mutable_bitField3_ & 0x00000040) == 0x00000040)) {
              loanFirstPayLowerArray_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField3_ |= 0x00000040;
            }
            loanFirstPayLowerArray_.add(input.readDouble());
            break;
          }
          case 1514: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField3_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
              loanFirstPayLowerArray_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField3_ |= 0x00000040;
            }
            while (input.getBytesUntilLimit() > 0) {
              loanFirstPayLowerArray_.add(input.readDouble());
            }
            input.popLimit(limit);
            break;
          }
          case 1521: {
            if (!((mutable_bitField3_ & 0x00000080) == 0x00000080)) {
              loanFirstPayHighArray_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField3_ |= 0x00000080;
            }
            loanFirstPayHighArray_.add(input.readDouble());
            break;
          }
          case 1522: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField3_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
              loanFirstPayHighArray_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField3_ |= 0x00000080;
            }
            while (input.getBytesUntilLimit() > 0) {
              loanFirstPayHighArray_.add(input.readDouble());
            }
            input.popLimit(limit);
            break;
          }
          case 1529: {
            if (!((mutable_bitField3_ & 0x00000100) == 0x00000100)) {
              loanDailyPayLowerArray_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField3_ |= 0x00000100;
            }
            loanDailyPayLowerArray_.add(input.readDouble());
            break;
          }
          case 1530: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField3_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
              loanDailyPayLowerArray_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField3_ |= 0x00000100;
            }
            while (input.getBytesUntilLimit() > 0) {
              loanDailyPayLowerArray_.add(input.readDouble());
            }
            input.popLimit(limit);
            break;
          }
          case 1537: {
            if (!((mutable_bitField3_ & 0x00000200) == 0x00000200)) {
              loanDailyPayHighArray_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField3_ |= 0x00000200;
            }
            loanDailyPayHighArray_.add(input.readDouble());
            break;
          }
          case 1538: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField3_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
              loanDailyPayHighArray_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField3_ |= 0x00000200;
            }
            while (input.getBytesUntilLimit() > 0) {
              loanDailyPayHighArray_.add(input.readDouble());
            }
            input.popLimit(limit);
            break;
          }
          case 1545: {
            if (!((mutable_bitField3_ & 0x00000400) == 0x00000400)) {
              loanMonthPayLowerArray_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField3_ |= 0x00000400;
            }
            loanMonthPayLowerArray_.add(input.readDouble());
            break;
          }
          case 1546: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField3_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
              loanMonthPayLowerArray_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField3_ |= 0x00000400;
            }
            while (input.getBytesUntilLimit() > 0) {
              loanMonthPayLowerArray_.add(input.readDouble());
            }
            input.popLimit(limit);
            break;
          }
          case 1553: {
            if (!((mutable_bitField3_ & 0x00000800) == 0x00000800)) {
              loanMonthPayHighArray_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField3_ |= 0x00000800;
            }
            loanMonthPayHighArray_.add(input.readDouble());
            break;
          }
          case 1554: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField3_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
              loanMonthPayHighArray_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField3_ |= 0x00000800;
            }
            while (input.getBytesUntilLimit() > 0) {
              loanMonthPayHighArray_.add(input.readDouble());
            }
            input.popLimit(limit);
            break;
          }
          case 1560: {
            if (!((mutable_bitField3_ & 0x00001000) == 0x00001000)) {
              districtIdArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField3_ |= 0x00001000;
            }
            districtIdArray_.add(input.readInt32());
            break;
          }
          case 1562: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField3_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
              districtIdArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField3_ |= 0x00001000;
            }
            while (input.getBytesUntilLimit() > 0) {
              districtIdArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 1568: {
            if (!((mutable_bitField3_ & 0x00002000) == 0x00002000)) {
              inhaleTypeArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField3_ |= 0x00002000;
            }
            inhaleTypeArray_.add(input.readInt32());
            break;
          }
          case 1570: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField3_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
              inhaleTypeArray_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField3_ |= 0x00002000;
            }
            while (input.getBytesUntilLimit() > 0) {
              inhaleTypeArray_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
        returnFieldArray_ = returnFieldArray_.getUnmodifiableView();
      }
      if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
        orderByFieldArray_ = orderByFieldArray_.getUnmodifiableView();
      }
      if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
        orderByIsDESCArray_ = java.util.Collections.unmodifiableList(orderByIsDESCArray_);
      }
      if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
        aggrFieldList_ = java.util.Collections.unmodifiableList(aggrFieldList_);
      }
      if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
        ucarIdArray_ = java.util.Collections.unmodifiableList(ucarIdArray_);
      }
      if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
        siteId_ = java.util.Collections.unmodifiableList(siteId_);
      }
      if (((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
        ucarStatusArray_ = java.util.Collections.unmodifiableList(ucarStatusArray_);
      }
      if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
        noUcarIdArray_ = java.util.Collections.unmodifiableList(noUcarIdArray_);
      }
      if (((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
        userIdArray_ = java.util.Collections.unmodifiableList(userIdArray_);
      }
      if (((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
        noUserIdArray_ = java.util.Collections.unmodifiableList(noUserIdArray_);
      }
      if (((mutable_bitField0_ & 0x00400000) == 0x00400000)) {
        ucarSerialNumberArray_ = ucarSerialNumberArray_.getUnmodifiableView();
      }
      if (((mutable_bitField0_ & 0x01000000) == 0x01000000)) {
        colorArray_ = colorArray_.getUnmodifiableView();
      }
      if (((mutable_bitField0_ & 0x08000000) == 0x08000000)) {
        bigAreaIdArray_ = java.util.Collections.unmodifiableList(bigAreaIdArray_);
      }
      if (((mutable_bitField0_ & 0x10000000) == 0x10000000)) {
        provinceIdArray_ = java.util.Collections.unmodifiableList(provinceIdArray_);
      }
      if (((mutable_bitField0_ & 0x20000000) == 0x20000000)) {
        cityIdArray_ = java.util.Collections.unmodifiableList(cityIdArray_);
      }
      if (((mutable_bitField0_ & 0x40000000) == 0x40000000)) {
        noCityIdArray_ = java.util.Collections.unmodifiableList(noCityIdArray_);
      }
      if (((mutable_bitField0_ & 0x80000000) == 0x80000000)) {
        relateCityArray_ = java.util.Collections.unmodifiableList(relateCityArray_);
      }
      if (((mutable_bitField1_ & 0x00000001) == 0x00000001)) {
        priceLowerArray_ = java.util.Collections.unmodifiableList(priceLowerArray_);
      }
      if (((mutable_bitField1_ & 0x00000002) == 0x00000002)) {
        priceHighArray_ = java.util.Collections.unmodifiableList(priceHighArray_);
      }
      if (((mutable_bitField1_ & 0x00000004) == 0x00000004)) {
        cPriceLowerArray_ = java.util.Collections.unmodifiableList(cPriceLowerArray_);
      }
      if (((mutable_bitField1_ & 0x00000008) == 0x00000008)) {
        cPriceHighArray_ = java.util.Collections.unmodifiableList(cPriceHighArray_);
      }
      if (((mutable_bitField1_ & 0x00000010) == 0x00000010)) {
        b2BPriceLowerArray_ = java.util.Collections.unmodifiableList(b2BPriceLowerArray_);
      }
      if (((mutable_bitField1_ & 0x00000020) == 0x00000020)) {
        b2BPriceHighArray_ = java.util.Collections.unmodifiableList(b2BPriceHighArray_);
      }
      if (((mutable_bitField1_ & 0x00000040) == 0x00000040)) {
        carAgeLowerArray_ = java.util.Collections.unmodifiableList(carAgeLowerArray_);
      }
      if (((mutable_bitField1_ & 0x00000080) == 0x00000080)) {
        carAgeHighArray_ = java.util.Collections.unmodifiableList(carAgeHighArray_);
      }
      if (((mutable_bitField1_ & 0x00000100) == 0x00000100)) {
        drivingMileageLowerArray_ = java.util.Collections.unmodifiableList(drivingMileageLowerArray_);
      }
      if (((mutable_bitField1_ & 0x00000200) == 0x00000200)) {
        drivingMileageHighArray_ = java.util.Collections.unmodifiableList(drivingMileageHighArray_);
      }
      if (((mutable_bitField1_ & 0x00010000) == 0x00010000)) {
        carSourceTypeArray_ = java.util.Collections.unmodifiableList(carSourceTypeArray_);
      }
      if (((mutable_bitField1_ & 0x00020000) == 0x00020000)) {
        carTypeConfig_ = java.util.Collections.unmodifiableList(carTypeConfig_);
      }
      if (((mutable_bitField1_ & 0x00100000) == 0x00100000)) {
        warrantyTypeArray_ = java.util.Collections.unmodifiableList(warrantyTypeArray_);
      }
      if (((mutable_bitField1_ & 0x10000000) == 0x10000000)) {
        crmCustomerIdArray_ = java.util.Collections.unmodifiableList(crmCustomerIdArray_);
      }
      if (((mutable_bitField1_ & 0x40000000) == 0x40000000)) {
        envirStandardArray_ = java.util.Collections.unmodifiableList(envirStandardArray_);
      }
      if (((mutable_bitField1_ & 0x80000000) == 0x80000000)) {
        consumptionLowerArray_ = java.util.Collections.unmodifiableList(consumptionLowerArray_);
      }
      if (((mutable_bitField2_ & 0x00000001) == 0x00000001)) {
        consumptionHighArray_ = java.util.Collections.unmodifiableList(consumptionHighArray_);
      }
      if (((mutable_bitField2_ & 0x00000002) == 0x00000002)) {
        oilTypeArray_ = java.util.Collections.unmodifiableList(oilTypeArray_);
      }
      if (((mutable_bitField2_ & 0x00000004) == 0x00000004)) {
        engineLocationArray_ = java.util.Collections.unmodifiableList(engineLocationArray_);
      }
      if (((mutable_bitField2_ & 0x00000008) == 0x00000008)) {
        bodyDoorsLowerArray_ = java.util.Collections.unmodifiableList(bodyDoorsLowerArray_);
      }
      if (((mutable_bitField2_ & 0x00000010) == 0x00000010)) {
        bodyDoorsHighArray_ = java.util.Collections.unmodifiableList(bodyDoorsHighArray_);
      }
      if (((mutable_bitField2_ & 0x00000020) == 0x00000020)) {
        seatNumLowerArray_ = java.util.Collections.unmodifiableList(seatNumLowerArray_);
      }
      if (((mutable_bitField2_ & 0x00000040) == 0x00000040)) {
        seatNumHighArray_ = java.util.Collections.unmodifiableList(seatNumHighArray_);
      }
      if (((mutable_bitField2_ & 0x00000100) == 0x00000100)) {
        driveTypeArray_ = java.util.Collections.unmodifiableList(driveTypeArray_);
      }
      if (((mutable_bitField2_ & 0x00000200) == 0x00000200)) {
        csBodyFormArray_ = java.util.Collections.unmodifiableList(csBodyFormArray_);
      }
      if (((mutable_bitField2_ & 0x00000400) == 0x00000400)) {
        carLevelArray_ = java.util.Collections.unmodifiableList(carLevelArray_);
      }
      if (((mutable_bitField2_ & 0x00000800) == 0x00000800)) {
        carLevelSecondArray_ = java.util.Collections.unmodifiableList(carLevelSecondArray_);
      }
      if (((mutable_bitField2_ & 0x00001000) == 0x00001000)) {
        carYearArray_ = carYearArray_.getUnmodifiableView();
      }
      if (((mutable_bitField2_ & 0x00002000) == 0x00002000)) {
        mainBrandArray_ = java.util.Collections.unmodifiableList(mainBrandArray_);
      }
      if (((mutable_bitField2_ & 0x00004000) == 0x00004000)) {
        brandArray_ = java.util.Collections.unmodifiableList(brandArray_);
      }
      if (((mutable_bitField2_ & 0x00008000) == 0x00008000)) {
        carSerialArray_ = java.util.Collections.unmodifiableList(carSerialArray_);
      }
      if (((mutable_bitField2_ & 0x00010000) == 0x00010000)) {
        carIDArray_ = java.util.Collections.unmodifiableList(carIDArray_);
      }
      if (((mutable_bitField2_ & 0x00020000) == 0x00020000)) {
        gearBoxTypeArray_ = java.util.Collections.unmodifiableList(gearBoxTypeArray_);
      }
      if (((mutable_bitField2_ & 0x00040000) == 0x00040000)) {
        exhaustLevelLowerArray_ = java.util.Collections.unmodifiableList(exhaustLevelLowerArray_);
      }
      if (((mutable_bitField2_ & 0x00080000) == 0x00080000)) {
        exhaustLevelHighArray_ = java.util.Collections.unmodifiableList(exhaustLevelHighArray_);
      }
      if (((mutable_bitField2_ & 0x00100000) == 0x00100000)) {
        exhaustLevelArray_ = java.util.Collections.unmodifiableList(exhaustLevelArray_);
      }
      if (((mutable_bitField2_ & 0x00200000) == 0x00200000)) {
        countryArray_ = java.util.Collections.unmodifiableList(countryArray_);
      }
      if (((mutable_bitField2_ & 0x00400000) == 0x00400000)) {
        brandAttrArray_ = java.util.Collections.unmodifiableList(brandAttrArray_);
      }
      if (((mutable_bitField2_ & 0x20000000) == 0x20000000)) {
        vinCodeArray_ = vinCodeArray_.getUnmodifiableView();
      }
      if (((mutable_bitField2_ & 0x40000000) == 0x40000000)) {
        licenseProvinceIdArray_ = java.util.Collections.unmodifiableList(licenseProvinceIdArray_);
      }
      if (((mutable_bitField2_ & 0x80000000) == 0x80000000)) {
        licenseCityIdArray_ = java.util.Collections.unmodifiableList(licenseCityIdArray_);
      }
      if (((mutable_bitField3_ & 0x00000002) == 0x00000002)) {
        noCrmCustomerIdArray_ = java.util.Collections.unmodifiableList(noCrmCustomerIdArray_);
      }
      if (((mutable_bitField3_ & 0x00000010) == 0x00000010)) {
        noSuperiorIdArray_ = java.util.Collections.unmodifiableList(noSuperiorIdArray_);
      }
      if (((mutable_bitField3_ & 0x00000040) == 0x00000040)) {
        loanFirstPayLowerArray_ = java.util.Collections.unmodifiableList(loanFirstPayLowerArray_);
      }
      if (((mutable_bitField3_ & 0x00000080) == 0x00000080)) {
        loanFirstPayHighArray_ = java.util.Collections.unmodifiableList(loanFirstPayHighArray_);
      }
      if (((mutable_bitField3_ & 0x00000100) == 0x00000100)) {
        loanDailyPayLowerArray_ = java.util.Collections.unmodifiableList(loanDailyPayLowerArray_);
      }
      if (((mutable_bitField3_ & 0x00000200) == 0x00000200)) {
        loanDailyPayHighArray_ = java.util.Collections.unmodifiableList(loanDailyPayHighArray_);
      }
      if (((mutable_bitField3_ & 0x00000400) == 0x00000400)) {
        loanMonthPayLowerArray_ = java.util.Collections.unmodifiableList(loanMonthPayLowerArray_);
      }
      if (((mutable_bitField3_ & 0x00000800) == 0x00000800)) {
        loanMonthPayHighArray_ = java.util.Collections.unmodifiableList(loanMonthPayHighArray_);
      }
      if (((mutable_bitField3_ & 0x00001000) == 0x00001000)) {
        districtIdArray_ = java.util.Collections.unmodifiableList(districtIdArray_);
      }
      if (((mutable_bitField3_ & 0x00002000) == 0x00002000)) {
        inhaleTypeArray_ = java.util.Collections.unmodifiableList(inhaleTypeArray_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return TaocheES.Taochees.internal_static_TaocheES_SearchCondition_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return TaocheES.Taochees.internal_static_TaocheES_SearchCondition_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            TaocheES.SearchCondition.class, TaocheES.SearchCondition.Builder.class);
  }

  private int bitField0_;
  private int bitField1_;
  public static final int COMMONFLAG_FIELD_NUMBER = 1;
  private int commonFlag_;
  /**
   * <pre>
   *全局标识位
   * </pre>
   *
   * <code>int32 CommonFlag = 1;</code>
   */
  public int getCommonFlag() {
    return commonFlag_;
  }

  public static final int REQUESTSOURCE_FIELD_NUMBER = 2;
  private int requestSource_;
  /**
   * <pre>
   *访问来源（站点或项目）
   * </pre>
   *
   * <code>int32 RequestSource = 2;</code>
   */
  public int getRequestSource() {
    return requestSource_;
  }

  public static final int RETURNFIELDARRAY_FIELD_NUMBER = 3;
  private com.google.protobuf.LazyStringList returnFieldArray_;
  /**
   * <pre>
   *[必填]返回结果集字段,如果不填寫默認只返回 id.
   * </pre>
   *
   * <code>repeated string ReturnFieldArray = 3;</code>
   */
  public com.google.protobuf.ProtocolStringList
      getReturnFieldArrayList() {
    return returnFieldArray_;
  }
  /**
   * <pre>
   *[必填]返回结果集字段,如果不填寫默認只返回 id.
   * </pre>
   *
   * <code>repeated string ReturnFieldArray = 3;</code>
   */
  public int getReturnFieldArrayCount() {
    return returnFieldArray_.size();
  }
  /**
   * <pre>
   *[必填]返回结果集字段,如果不填寫默認只返回 id.
   * </pre>
   *
   * <code>repeated string ReturnFieldArray = 3;</code>
   */
  public java.lang.String getReturnFieldArray(int index) {
    return returnFieldArray_.get(index);
  }
  /**
   * <pre>
   *[必填]返回结果集字段,如果不填寫默認只返回 id.
   * </pre>
   *
   * <code>repeated string ReturnFieldArray = 3;</code>
   */
  public com.google.protobuf.ByteString
      getReturnFieldArrayBytes(int index) {
    return returnFieldArray_.getByteString(index);
  }

  public static final int ORDERBYFIELDARRAY_FIELD_NUMBER = 4;
  private com.google.protobuf.LazyStringList orderByFieldArray_;
  /**
   * <pre>
   *排序字段(与 IsDESC 同时使用)
   * </pre>
   *
   * <code>repeated string OrderByFieldArray = 4;</code>
   */
  public com.google.protobuf.ProtocolStringList
      getOrderByFieldArrayList() {
    return orderByFieldArray_;
  }
  /**
   * <pre>
   *排序字段(与 IsDESC 同时使用)
   * </pre>
   *
   * <code>repeated string OrderByFieldArray = 4;</code>
   */
  public int getOrderByFieldArrayCount() {
    return orderByFieldArray_.size();
  }
  /**
   * <pre>
   *排序字段(与 IsDESC 同时使用)
   * </pre>
   *
   * <code>repeated string OrderByFieldArray = 4;</code>
   */
  public java.lang.String getOrderByFieldArray(int index) {
    return orderByFieldArray_.get(index);
  }
  /**
   * <pre>
   *排序字段(与 IsDESC 同时使用)
   * </pre>
   *
   * <code>repeated string OrderByFieldArray = 4;</code>
   */
  public com.google.protobuf.ByteString
      getOrderByFieldArrayBytes(int index) {
    return orderByFieldArray_.getByteString(index);
  }

  public static final int ORDERBYISDESCARRAY_FIELD_NUMBER = 5;
  private java.util.List<java.lang.Boolean> orderByIsDESCArray_;
  /**
   * <pre>
   *是否倒序 true desc, false asc ;(与 OrderByFieldArray 同时使用)
   * </pre>
   *
   * <code>repeated bool OrderByIsDESCArray = 5;</code>
   */
  public java.util.List<java.lang.Boolean>
      getOrderByIsDESCArrayList() {
    return orderByIsDESCArray_;
  }
  /**
   * <pre>
   *是否倒序 true desc, false asc ;(与 OrderByFieldArray 同时使用)
   * </pre>
   *
   * <code>repeated bool OrderByIsDESCArray = 5;</code>
   */
  public int getOrderByIsDESCArrayCount() {
    return orderByIsDESCArray_.size();
  }
  /**
   * <pre>
   *是否倒序 true desc, false asc ;(与 OrderByFieldArray 同时使用)
   * </pre>
   *
   * <code>repeated bool OrderByIsDESCArray = 5;</code>
   */
  public boolean getOrderByIsDESCArray(int index) {
    return orderByIsDESCArray_.get(index);
  }
  private int orderByIsDESCArrayMemoizedSerializedSize = -1;

  public static final int SORTBOOSTFLAG_FIELD_NUMBER = 6;
  private int sortBoostFlag_;
  /**
   * <pre>
   *排序标识：0为常规；1为以boostapp为基础权重，刷新时间权重衰减(Groovy脚本方式)；2为boostapp为基础权重，刷新时间衰减（jar包方式）
   * </pre>
   *
   * <code>int32 SortBoostFlag = 6;</code>
   */
  public int getSortBoostFlag() {
    return sortBoostFlag_;
  }

  public static final int PAGESIZE_FIELD_NUMBER = 7;
  private int pageSize_;
  /**
   * <pre>
   *页大小，即需要返回的数据记录条数
   * </pre>
   *
   * <code>int32 PageSize = 7;</code>
   */
  public int getPageSize() {
    return pageSize_;
  }

  public static final int PAGEINDEX_FIELD_NUMBER = 8;
  private int pageIndex_;
  /**
   * <pre>
   *当前页码，最大值为500
   * </pre>
   *
   * <code>int32 PageIndex = 8;</code>
   */
  public int getPageIndex() {
    return pageIndex_;
  }

  public static final int DISTANCEKM_FIELD_NUMBER = 9;
  private double distanceKm_;
  /**
   * <pre>
   *距离检索：20151201
   * </pre>
   *
   * <code>double DistanceKm = 9;</code>
   */
  public double getDistanceKm() {
    return distanceKm_;
  }

  public static final int LOCATION_FIELD_NUMBER = 10;
  private volatile java.lang.Object location_;
  /**
   * <pre>
   *当前坐标点，用于按距离筛选或排序：----20151201  数据格式：X,Y，示例：112.124,332.22
   * </pre>
   *
   * <code>string Location = 10;</code>
   */
  public java.lang.String getLocation() {
    java.lang.Object ref = location_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      location_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *当前坐标点，用于按距离筛选或排序：----20151201  数据格式：X,Y，示例：112.124,332.22
   * </pre>
   *
   * <code>string Location = 10;</code>
   */
  public com.google.protobuf.ByteString
      getLocationBytes() {
    java.lang.Object ref = location_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      location_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ISCOUNTSEARCH_FIELD_NUMBER = 11;
  private boolean isCountSearch_;
  /**
   * <pre>
   *是否只返回符合条件的记录条数，不返回具体数据
   * </pre>
   *
   * <code>bool IsCountSearch = 11;</code>
   */
  public boolean getIsCountSearch() {
    return isCountSearch_;
  }

  public static final int REQUESTPARAMETERSLOG_FIELD_NUMBER = 12;
  private volatile java.lang.Object requestParametersLog_;
  /**
   * <pre>
   *是否返回请求日志：get为返回日志
   * </pre>
   *
   * <code>string RequestParametersLog = 12;</code>
   */
  public java.lang.String getRequestParametersLog() {
    java.lang.Object ref = requestParametersLog_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      requestParametersLog_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *是否返回请求日志：get为返回日志
   * </pre>
   *
   * <code>string RequestParametersLog = 12;</code>
   */
  public com.google.protobuf.ByteString
      getRequestParametersLogBytes() {
    java.lang.Object ref = requestParametersLog_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      requestParametersLog_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int AGGRFIELDLIST_FIELD_NUMBER = 13;
  private java.util.List<TaocheES.AggrCondition> aggrFieldList_;
  /**
   * <pre>
   *切面聚合检索条件
   * </pre>
   *
   * <code>repeated .TaocheES.AggrCondition AggrFieldList = 13;</code>
   */
  public java.util.List<TaocheES.AggrCondition> getAggrFieldListList() {
    return aggrFieldList_;
  }
  /**
   * <pre>
   *切面聚合检索条件
   * </pre>
   *
   * <code>repeated .TaocheES.AggrCondition AggrFieldList = 13;</code>
   */
  public java.util.List<? extends TaocheES.AggrConditionOrBuilder> 
      getAggrFieldListOrBuilderList() {
    return aggrFieldList_;
  }
  /**
   * <pre>
   *切面聚合检索条件
   * </pre>
   *
   * <code>repeated .TaocheES.AggrCondition AggrFieldList = 13;</code>
   */
  public int getAggrFieldListCount() {
    return aggrFieldList_.size();
  }
  /**
   * <pre>
   *切面聚合检索条件
   * </pre>
   *
   * <code>repeated .TaocheES.AggrCondition AggrFieldList = 13;</code>
   */
  public TaocheES.AggrCondition getAggrFieldList(int index) {
    return aggrFieldList_.get(index);
  }
  /**
   * <pre>
   *切面聚合检索条件
   * </pre>
   *
   * <code>repeated .TaocheES.AggrCondition AggrFieldList = 13;</code>
   */
  public TaocheES.AggrConditionOrBuilder getAggrFieldListOrBuilder(
      int index) {
    return aggrFieldList_.get(index);
  }

  public static final int STARTNUM_FIELD_NUMBER = 14;
  private int startNum_;
  /**
   * <pre>
   *起始条数，即跳过前N条数据
   * </pre>
   *
   * <code>int32 StartNum = 14;</code>
   */
  public int getStartNum() {
    return startNum_;
  }

  public static final int UCARIDARRAY_FIELD_NUMBER = 101;
  private java.util.List<java.lang.Integer> ucarIdArray_;
  /**
   * <pre>
   *包含车源ID数组【谨慎使用,控制Length】
   * </pre>
   *
   * <code>repeated int32 UcarIdArray = 101;</code>
   */
  public java.util.List<java.lang.Integer>
      getUcarIdArrayList() {
    return ucarIdArray_;
  }
  /**
   * <pre>
   *包含车源ID数组【谨慎使用,控制Length】
   * </pre>
   *
   * <code>repeated int32 UcarIdArray = 101;</code>
   */
  public int getUcarIdArrayCount() {
    return ucarIdArray_.size();
  }
  /**
   * <pre>
   *包含车源ID数组【谨慎使用,控制Length】
   * </pre>
   *
   * <code>repeated int32 UcarIdArray = 101;</code>
   */
  public int getUcarIdArray(int index) {
    return ucarIdArray_.get(index);
  }
  private int ucarIdArrayMemoizedSerializedSize = -1;

  public static final int SITEID_FIELD_NUMBER = 102;
  private java.util.List<java.lang.Integer> siteId_;
  /**
   * <pre>
   *车源数据来源：1	58二手车，2	车168，3	51汽车，4	第一车网，5	淘车网 【默认为5】
   * </pre>
   *
   * <code>repeated int32 SiteId = 102;</code>
   */
  public java.util.List<java.lang.Integer>
      getSiteIdList() {
    return siteId_;
  }
  /**
   * <pre>
   *车源数据来源：1	58二手车，2	车168，3	51汽车，4	第一车网，5	淘车网 【默认为5】
   * </pre>
   *
   * <code>repeated int32 SiteId = 102;</code>
   */
  public int getSiteIdCount() {
    return siteId_.size();
  }
  /**
   * <pre>
   *车源数据来源：1	58二手车，2	车168，3	51汽车，4	第一车网，5	淘车网 【默认为5】
   * </pre>
   *
   * <code>repeated int32 SiteId = 102;</code>
   */
  public int getSiteId(int index) {
    return siteId_.get(index);
  }
  private int siteIdMemoizedSerializedSize = -1;

  public static final int UCARSTATUSARRAY_FIELD_NUMBER = 103;
  private java.util.List<java.lang.Integer> ucarStatusArray_;
  /**
   * <pre>
   *车源状态(1为在售,4为售出,100 为查询所有车源)  
   * </pre>
   *
   * <code>repeated int32 UcarStatusArray = 103;</code>
   */
  public java.util.List<java.lang.Integer>
      getUcarStatusArrayList() {
    return ucarStatusArray_;
  }
  /**
   * <pre>
   *车源状态(1为在售,4为售出,100 为查询所有车源)  
   * </pre>
   *
   * <code>repeated int32 UcarStatusArray = 103;</code>
   */
  public int getUcarStatusArrayCount() {
    return ucarStatusArray_.size();
  }
  /**
   * <pre>
   *车源状态(1为在售,4为售出,100 为查询所有车源)  
   * </pre>
   *
   * <code>repeated int32 UcarStatusArray = 103;</code>
   */
  public int getUcarStatusArray(int index) {
    return ucarStatusArray_.get(index);
  }
  private int ucarStatusArrayMemoizedSerializedSize = -1;

  public static final int NOUCARIDARRAY_FIELD_NUMBER = 104;
  private java.util.List<java.lang.Integer> noUcarIdArray_;
  /**
   * <pre>
   *排除车源ID数组【谨慎使用,控制Length】
   * </pre>
   *
   * <code>repeated int32 NoUcarIdArray = 104;</code>
   */
  public java.util.List<java.lang.Integer>
      getNoUcarIdArrayList() {
    return noUcarIdArray_;
  }
  /**
   * <pre>
   *排除车源ID数组【谨慎使用,控制Length】
   * </pre>
   *
   * <code>repeated int32 NoUcarIdArray = 104;</code>
   */
  public int getNoUcarIdArrayCount() {
    return noUcarIdArray_.size();
  }
  /**
   * <pre>
   *排除车源ID数组【谨慎使用,控制Length】
   * </pre>
   *
   * <code>repeated int32 NoUcarIdArray = 104;</code>
   */
  public int getNoUcarIdArray(int index) {
    return noUcarIdArray_.get(index);
  }
  private int noUcarIdArrayMemoizedSerializedSize = -1;

  public static final int ISAUTHENTICATED_FIELD_NUMBER = 105;
  private int isAuthenticated_;
  /**
   * <pre>
   *是否是品牌认证车：-1-未知 0-否 1-是 (厂商认证)
   * </pre>
   *
   * <code>int32 IsAuthenticated = 105;</code>
   */
  public int getIsAuthenticated() {
    return isAuthenticated_;
  }

  public static final int SOURCE_FIELD_NUMBER = 106;
  private int source_;
  /**
   * <pre>
   *是否可跨区(1为不可跨区,2为可跨区(即全国营销车源)) 
   * </pre>
   *
   * <code>int32 Source = 106;</code>
   */
  public int getSource() {
    return source_;
  }

  public static final int USERIDARRAY_FIELD_NUMBER = 107;
  private java.util.List<java.lang.Integer> userIdArray_;
  /**
   * <pre>
   *用户ID(经销商ID)【谨慎使用,控制Length】
   * </pre>
   *
   * <code>repeated int32 UserIdArray = 107;</code>
   */
  public java.util.List<java.lang.Integer>
      getUserIdArrayList() {
    return userIdArray_;
  }
  /**
   * <pre>
   *用户ID(经销商ID)【谨慎使用,控制Length】
   * </pre>
   *
   * <code>repeated int32 UserIdArray = 107;</code>
   */
  public int getUserIdArrayCount() {
    return userIdArray_.size();
  }
  /**
   * <pre>
   *用户ID(经销商ID)【谨慎使用,控制Length】
   * </pre>
   *
   * <code>repeated int32 UserIdArray = 107;</code>
   */
  public int getUserIdArray(int index) {
    return userIdArray_.get(index);
  }
  private int userIdArrayMemoizedSerializedSize = -1;

  public static final int NOUSERIDARRAY_FIELD_NUMBER = 108;
  private java.util.List<java.lang.Integer> noUserIdArray_;
  /**
   * <pre>
   *排除用户ID(经销商ID)【谨慎使用,控制Length】
   * </pre>
   *
   * <code>repeated int32 NoUserIdArray = 108;</code>
   */
  public java.util.List<java.lang.Integer>
      getNoUserIdArrayList() {
    return noUserIdArray_;
  }
  /**
   * <pre>
   *排除用户ID(经销商ID)【谨慎使用,控制Length】
   * </pre>
   *
   * <code>repeated int32 NoUserIdArray = 108;</code>
   */
  public int getNoUserIdArrayCount() {
    return noUserIdArray_.size();
  }
  /**
   * <pre>
   *排除用户ID(经销商ID)【谨慎使用,控制Length】
   * </pre>
   *
   * <code>repeated int32 NoUserIdArray = 108;</code>
   */
  public int getNoUserIdArray(int index) {
    return noUserIdArray_.get(index);
  }
  private int noUserIdArrayMemoizedSerializedSize = -1;

  public static final int UCARSERIALNUMBERARRAY_FIELD_NUMBER = 109;
  private com.google.protobuf.LazyStringList ucarSerialNumberArray_;
  /**
   * <pre>
   *包含车源编号数组【谨慎使用,控制Length】
   * </pre>
   *
   * <code>repeated string UcarSerialNumberArray = 109;</code>
   */
  public com.google.protobuf.ProtocolStringList
      getUcarSerialNumberArrayList() {
    return ucarSerialNumberArray_;
  }
  /**
   * <pre>
   *包含车源编号数组【谨慎使用,控制Length】
   * </pre>
   *
   * <code>repeated string UcarSerialNumberArray = 109;</code>
   */
  public int getUcarSerialNumberArrayCount() {
    return ucarSerialNumberArray_.size();
  }
  /**
   * <pre>
   *包含车源编号数组【谨慎使用,控制Length】
   * </pre>
   *
   * <code>repeated string UcarSerialNumberArray = 109;</code>
   */
  public java.lang.String getUcarSerialNumberArray(int index) {
    return ucarSerialNumberArray_.get(index);
  }
  /**
   * <pre>
   *包含车源编号数组【谨慎使用,控制Length】
   * </pre>
   *
   * <code>repeated string UcarSerialNumberArray = 109;</code>
   */
  public com.google.protobuf.ByteString
      getUcarSerialNumberArrayBytes(int index) {
    return ucarSerialNumberArray_.getByteString(index);
  }

  public static final int KEYWORD_FIELD_NUMBER = 110;
  private volatile java.lang.Object keyWord_;
  /**
   * <pre>
   *搜索关键词
   * </pre>
   *
   * <code>string KeyWord = 110;</code>
   */
  public java.lang.String getKeyWord() {
    java.lang.Object ref = keyWord_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      keyWord_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *搜索关键词
   * </pre>
   *
   * <code>string KeyWord = 110;</code>
   */
  public com.google.protobuf.ByteString
      getKeyWordBytes() {
    java.lang.Object ref = keyWord_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      keyWord_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int COLORARRAY_FIELD_NUMBER = 111;
  private com.google.protobuf.LazyStringList colorArray_;
  /**
   * <pre>
   *车辆颜色
   * </pre>
   *
   * <code>repeated string ColorArray = 111;</code>
   */
  public com.google.protobuf.ProtocolStringList
      getColorArrayList() {
    return colorArray_;
  }
  /**
   * <pre>
   *车辆颜色
   * </pre>
   *
   * <code>repeated string ColorArray = 111;</code>
   */
  public int getColorArrayCount() {
    return colorArray_.size();
  }
  /**
   * <pre>
   *车辆颜色
   * </pre>
   *
   * <code>repeated string ColorArray = 111;</code>
   */
  public java.lang.String getColorArray(int index) {
    return colorArray_.get(index);
  }
  /**
   * <pre>
   *车辆颜色
   * </pre>
   *
   * <code>repeated string ColorArray = 111;</code>
   */
  public com.google.protobuf.ByteString
      getColorArrayBytes(int index) {
    return colorArray_.getByteString(index);
  }

  public static final int CARSOURCE1L_FIELD_NUMBER = 112;
  private int carSource1L_;
  /**
   * <pre>
   *车辆来源（1为个人；2为商家） 
   * </pre>
   *
   * <code>int32 CarSource1L = 112;</code>
   */
  public int getCarSource1L() {
    return carSource1L_;
  }

  public static final int PICTURECOUNT_FIELD_NUMBER = 113;
  private int pictureCount_;
  /**
   * <pre>
   *车源图片数量,搜索包含图片最小数量,搜索有图车源时传入1,无图车源传入0,
   * </pre>
   *
   * <code>int32 PictureCount = 113;</code>
   */
  public int getPictureCount() {
    return pictureCount_;
  }

  public static final int BIGAREAIDARRAY_FIELD_NUMBER = 114;
  private java.util.List<java.lang.Integer> bigAreaIdArray_;
  /**
   * <pre>
   *大区ID数组【谨慎使用,控制Length】
   * </pre>
   *
   * <code>repeated int32 BigAreaIdArray = 114;</code>
   */
  public java.util.List<java.lang.Integer>
      getBigAreaIdArrayList() {
    return bigAreaIdArray_;
  }
  /**
   * <pre>
   *大区ID数组【谨慎使用,控制Length】
   * </pre>
   *
   * <code>repeated int32 BigAreaIdArray = 114;</code>
   */
  public int getBigAreaIdArrayCount() {
    return bigAreaIdArray_.size();
  }
  /**
   * <pre>
   *大区ID数组【谨慎使用,控制Length】
   * </pre>
   *
   * <code>repeated int32 BigAreaIdArray = 114;</code>
   */
  public int getBigAreaIdArray(int index) {
    return bigAreaIdArray_.get(index);
  }
  private int bigAreaIdArrayMemoizedSerializedSize = -1;

  public static final int PROVINCEIDARRAY_FIELD_NUMBER = 115;
  private java.util.List<java.lang.Integer> provinceIdArray_;
  /**
   * <pre>
   *车源所在地--省份ID ,注意只有CityIdArray不傳參數時改屬性才生效
   * </pre>
   *
   * <code>repeated int32 ProvinceIdArray = 115;</code>
   */
  public java.util.List<java.lang.Integer>
      getProvinceIdArrayList() {
    return provinceIdArray_;
  }
  /**
   * <pre>
   *车源所在地--省份ID ,注意只有CityIdArray不傳參數時改屬性才生效
   * </pre>
   *
   * <code>repeated int32 ProvinceIdArray = 115;</code>
   */
  public int getProvinceIdArrayCount() {
    return provinceIdArray_.size();
  }
  /**
   * <pre>
   *车源所在地--省份ID ,注意只有CityIdArray不傳參數時改屬性才生效
   * </pre>
   *
   * <code>repeated int32 ProvinceIdArray = 115;</code>
   */
  public int getProvinceIdArray(int index) {
    return provinceIdArray_.get(index);
  }
  private int provinceIdArrayMemoizedSerializedSize = -1;

  public static final int CITYIDARRAY_FIELD_NUMBER = 116;
  private java.util.List<java.lang.Integer> cityIdArray_;
  /**
   * <pre>
   *车源所在城市ID
   * </pre>
   *
   * <code>repeated int32 CityIdArray = 116;</code>
   */
  public java.util.List<java.lang.Integer>
      getCityIdArrayList() {
    return cityIdArray_;
  }
  /**
   * <pre>
   *车源所在城市ID
   * </pre>
   *
   * <code>repeated int32 CityIdArray = 116;</code>
   */
  public int getCityIdArrayCount() {
    return cityIdArray_.size();
  }
  /**
   * <pre>
   *车源所在城市ID
   * </pre>
   *
   * <code>repeated int32 CityIdArray = 116;</code>
   */
  public int getCityIdArray(int index) {
    return cityIdArray_.get(index);
  }
  private int cityIdArrayMemoizedSerializedSize = -1;

  public static final int NOCITYIDARRAY_FIELD_NUMBER = 117;
  private java.util.List<java.lang.Integer> noCityIdArray_;
  /**
   * <pre>
   *排除车源所在城市ID【谨慎使用,控制Length】
   * </pre>
   *
   * <code>repeated int32 NoCityIdArray = 117;</code>
   */
  public java.util.List<java.lang.Integer>
      getNoCityIdArrayList() {
    return noCityIdArray_;
  }
  /**
   * <pre>
   *排除车源所在城市ID【谨慎使用,控制Length】
   * </pre>
   *
   * <code>repeated int32 NoCityIdArray = 117;</code>
   */
  public int getNoCityIdArrayCount() {
    return noCityIdArray_.size();
  }
  /**
   * <pre>
   *排除车源所在城市ID【谨慎使用,控制Length】
   * </pre>
   *
   * <code>repeated int32 NoCityIdArray = 117;</code>
   */
  public int getNoCityIdArray(int index) {
    return noCityIdArray_.get(index);
  }
  private int noCityIdArrayMemoizedSerializedSize = -1;

  public static final int RELATECITYARRAY_FIELD_NUMBER = 118;
  private java.util.List<java.lang.Integer> relateCityArray_;
  /**
   * <pre>
   *周边城市ID
   * </pre>
   *
   * <code>repeated int32 RelateCityArray = 118;</code>
   */
  public java.util.List<java.lang.Integer>
      getRelateCityArrayList() {
    return relateCityArray_;
  }
  /**
   * <pre>
   *周边城市ID
   * </pre>
   *
   * <code>repeated int32 RelateCityArray = 118;</code>
   */
  public int getRelateCityArrayCount() {
    return relateCityArray_.size();
  }
  /**
   * <pre>
   *周边城市ID
   * </pre>
   *
   * <code>repeated int32 RelateCityArray = 118;</code>
   */
  public int getRelateCityArray(int index) {
    return relateCityArray_.get(index);
  }
  private int relateCityArrayMemoizedSerializedSize = -1;

  public static final int PRICELOWERARRAY_FIELD_NUMBER = 119;
  private java.util.List<java.lang.Double> priceLowerArray_;
  /**
   * <pre>
   *价格范围--最低价(单位"万") 
   * </pre>
   *
   * <code>repeated double PriceLowerArray = 119;</code>
   */
  public java.util.List<java.lang.Double>
      getPriceLowerArrayList() {
    return priceLowerArray_;
  }
  /**
   * <pre>
   *价格范围--最低价(单位"万") 
   * </pre>
   *
   * <code>repeated double PriceLowerArray = 119;</code>
   */
  public int getPriceLowerArrayCount() {
    return priceLowerArray_.size();
  }
  /**
   * <pre>
   *价格范围--最低价(单位"万") 
   * </pre>
   *
   * <code>repeated double PriceLowerArray = 119;</code>
   */
  public double getPriceLowerArray(int index) {
    return priceLowerArray_.get(index);
  }
  private int priceLowerArrayMemoizedSerializedSize = -1;

  public static final int PRICEHIGHARRAY_FIELD_NUMBER = 120;
  private java.util.List<java.lang.Double> priceHighArray_;
  /**
   * <pre>
   *价格范围--最高价(单位"万") 
   * </pre>
   *
   * <code>repeated double PriceHighArray = 120;</code>
   */
  public java.util.List<java.lang.Double>
      getPriceHighArrayList() {
    return priceHighArray_;
  }
  /**
   * <pre>
   *价格范围--最高价(单位"万") 
   * </pre>
   *
   * <code>repeated double PriceHighArray = 120;</code>
   */
  public int getPriceHighArrayCount() {
    return priceHighArray_.size();
  }
  /**
   * <pre>
   *价格范围--最高价(单位"万") 
   * </pre>
   *
   * <code>repeated double PriceHighArray = 120;</code>
   */
  public double getPriceHighArray(int index) {
    return priceHighArray_.get(index);
  }
  private int priceHighArrayMemoizedSerializedSize = -1;

  public static final int CPRICELOWERARRAY_FIELD_NUMBER = 121;
  private java.util.List<java.lang.Double> cPriceLowerArray_;
  /**
   * <pre>
   *厂商指导&gt;价格范围--最低价(单位"万") 
   * </pre>
   *
   * <code>repeated double CPriceLowerArray = 121;</code>
   */
  public java.util.List<java.lang.Double>
      getCPriceLowerArrayList() {
    return cPriceLowerArray_;
  }
  /**
   * <pre>
   *厂商指导&gt;价格范围--最低价(单位"万") 
   * </pre>
   *
   * <code>repeated double CPriceLowerArray = 121;</code>
   */
  public int getCPriceLowerArrayCount() {
    return cPriceLowerArray_.size();
  }
  /**
   * <pre>
   *厂商指导&gt;价格范围--最低价(单位"万") 
   * </pre>
   *
   * <code>repeated double CPriceLowerArray = 121;</code>
   */
  public double getCPriceLowerArray(int index) {
    return cPriceLowerArray_.get(index);
  }
  private int cPriceLowerArrayMemoizedSerializedSize = -1;

  public static final int CPRICEHIGHARRAY_FIELD_NUMBER = 122;
  private java.util.List<java.lang.Double> cPriceHighArray_;
  /**
   * <pre>
   *厂商指导&gt;价格范围--最高价(单位"万") 
   * </pre>
   *
   * <code>repeated double CPriceHighArray = 122;</code>
   */
  public java.util.List<java.lang.Double>
      getCPriceHighArrayList() {
    return cPriceHighArray_;
  }
  /**
   * <pre>
   *厂商指导&gt;价格范围--最高价(单位"万") 
   * </pre>
   *
   * <code>repeated double CPriceHighArray = 122;</code>
   */
  public int getCPriceHighArrayCount() {
    return cPriceHighArray_.size();
  }
  /**
   * <pre>
   *厂商指导&gt;价格范围--最高价(单位"万") 
   * </pre>
   *
   * <code>repeated double CPriceHighArray = 122;</code>
   */
  public double getCPriceHighArray(int index) {
    return cPriceHighArray_.get(index);
  }
  private int cPriceHighArrayMemoizedSerializedSize = -1;

  public static final int B2BPRICELOWERARRAY_FIELD_NUMBER = 123;
  private java.util.List<java.lang.Double> b2BPriceLowerArray_;
  /**
   * <pre>
   *批发价（B2BPrice）-价格范围--最低价(单位"万")  --2016-04-28
   * </pre>
   *
   * <code>repeated double B2BPriceLowerArray = 123;</code>
   */
  public java.util.List<java.lang.Double>
      getB2BPriceLowerArrayList() {
    return b2BPriceLowerArray_;
  }
  /**
   * <pre>
   *批发价（B2BPrice）-价格范围--最低价(单位"万")  --2016-04-28
   * </pre>
   *
   * <code>repeated double B2BPriceLowerArray = 123;</code>
   */
  public int getB2BPriceLowerArrayCount() {
    return b2BPriceLowerArray_.size();
  }
  /**
   * <pre>
   *批发价（B2BPrice）-价格范围--最低价(单位"万")  --2016-04-28
   * </pre>
   *
   * <code>repeated double B2BPriceLowerArray = 123;</code>
   */
  public double getB2BPriceLowerArray(int index) {
    return b2BPriceLowerArray_.get(index);
  }
  private int b2BPriceLowerArrayMemoizedSerializedSize = -1;

  public static final int B2BPRICEHIGHARRAY_FIELD_NUMBER = 124;
  private java.util.List<java.lang.Double> b2BPriceHighArray_;
  /**
   * <pre>
   *批发价（B2BPrice）-价格范围--最高价(单位"万")   --2016-04-28
   * </pre>
   *
   * <code>repeated double B2BPriceHighArray = 124;</code>
   */
  public java.util.List<java.lang.Double>
      getB2BPriceHighArrayList() {
    return b2BPriceHighArray_;
  }
  /**
   * <pre>
   *批发价（B2BPrice）-价格范围--最高价(单位"万")   --2016-04-28
   * </pre>
   *
   * <code>repeated double B2BPriceHighArray = 124;</code>
   */
  public int getB2BPriceHighArrayCount() {
    return b2BPriceHighArray_.size();
  }
  /**
   * <pre>
   *批发价（B2BPrice）-价格范围--最高价(单位"万")   --2016-04-28
   * </pre>
   *
   * <code>repeated double B2BPriceHighArray = 124;</code>
   */
  public double getB2BPriceHighArray(int index) {
    return b2BPriceHighArray_.get(index);
  }
  private int b2BPriceHighArrayMemoizedSerializedSize = -1;

  public static final int CARAGELOWERARRAY_FIELD_NUMBER = 125;
  private java.util.List<java.lang.Integer> carAgeLowerArray_;
  /**
   * <pre>
   *车龄范围--最低值 
   * </pre>
   *
   * <code>repeated int32 CarAgeLowerArray = 125;</code>
   */
  public java.util.List<java.lang.Integer>
      getCarAgeLowerArrayList() {
    return carAgeLowerArray_;
  }
  /**
   * <pre>
   *车龄范围--最低值 
   * </pre>
   *
   * <code>repeated int32 CarAgeLowerArray = 125;</code>
   */
  public int getCarAgeLowerArrayCount() {
    return carAgeLowerArray_.size();
  }
  /**
   * <pre>
   *车龄范围--最低值 
   * </pre>
   *
   * <code>repeated int32 CarAgeLowerArray = 125;</code>
   */
  public int getCarAgeLowerArray(int index) {
    return carAgeLowerArray_.get(index);
  }
  private int carAgeLowerArrayMemoizedSerializedSize = -1;

  public static final int CARAGEHIGHARRAY_FIELD_NUMBER = 126;
  private java.util.List<java.lang.Integer> carAgeHighArray_;
  /**
   * <pre>
   *车龄范围--最高值 
   * </pre>
   *
   * <code>repeated int32 CarAgeHighArray = 126;</code>
   */
  public java.util.List<java.lang.Integer>
      getCarAgeHighArrayList() {
    return carAgeHighArray_;
  }
  /**
   * <pre>
   *车龄范围--最高值 
   * </pre>
   *
   * <code>repeated int32 CarAgeHighArray = 126;</code>
   */
  public int getCarAgeHighArrayCount() {
    return carAgeHighArray_.size();
  }
  /**
   * <pre>
   *车龄范围--最高值 
   * </pre>
   *
   * <code>repeated int32 CarAgeHighArray = 126;</code>
   */
  public int getCarAgeHighArray(int index) {
    return carAgeHighArray_.get(index);
  }
  private int carAgeHighArrayMemoizedSerializedSize = -1;

  public static final int DRIVINGMILEAGELOWERARRAY_FIELD_NUMBER = 127;
  private java.util.List<java.lang.Integer> drivingMileageLowerArray_;
  /**
   * <pre>
   *行驶里程--最低值（单位：万公里）
   * </pre>
   *
   * <code>repeated int32 DrivingMileageLowerArray = 127;</code>
   */
  public java.util.List<java.lang.Integer>
      getDrivingMileageLowerArrayList() {
    return drivingMileageLowerArray_;
  }
  /**
   * <pre>
   *行驶里程--最低值（单位：万公里）
   * </pre>
   *
   * <code>repeated int32 DrivingMileageLowerArray = 127;</code>
   */
  public int getDrivingMileageLowerArrayCount() {
    return drivingMileageLowerArray_.size();
  }
  /**
   * <pre>
   *行驶里程--最低值（单位：万公里）
   * </pre>
   *
   * <code>repeated int32 DrivingMileageLowerArray = 127;</code>
   */
  public int getDrivingMileageLowerArray(int index) {
    return drivingMileageLowerArray_.get(index);
  }
  private int drivingMileageLowerArrayMemoizedSerializedSize = -1;

  public static final int DRIVINGMILEAGEHIGHARRAY_FIELD_NUMBER = 128;
  private java.util.List<java.lang.Integer> drivingMileageHighArray_;
  /**
   * <pre>
   *行驶里程--最高值（单位：万公里）
   * </pre>
   *
   * <code>repeated int32 DrivingMileageHighArray = 128;</code>
   */
  public java.util.List<java.lang.Integer>
      getDrivingMileageHighArrayList() {
    return drivingMileageHighArray_;
  }
  /**
   * <pre>
   *行驶里程--最高值（单位：万公里）
   * </pre>
   *
   * <code>repeated int32 DrivingMileageHighArray = 128;</code>
   */
  public int getDrivingMileageHighArrayCount() {
    return drivingMileageHighArray_.size();
  }
  /**
   * <pre>
   *行驶里程--最高值（单位：万公里）
   * </pre>
   *
   * <code>repeated int32 DrivingMileageHighArray = 128;</code>
   */
  public int getDrivingMileageHighArray(int index) {
    return drivingMileageHighArray_.get(index);
  }
  private int drivingMileageHighArrayMemoizedSerializedSize = -1;

  public static final int SUPERIORID_FIELD_NUMBER = 129;
  private int superiorId_;
  /**
   * <pre>
   *经销商上级公司ID（即厂商ID）(针对商家车源)
   * </pre>
   *
   * <code>int32 SuperiorId = 129;</code>
   */
  public int getSuperiorId() {
    return superiorId_;
  }

  public static final int USERTYPE_FIELD_NUMBER = 130;
  private int userType_;
  /**
   * <pre>
   *商家车源来源类型(UserType字段)
   * </pre>
   *
   * <code>int32 UserType = 130;</code>
   */
  public int getUserType() {
    return userType_;
  }

  public static final int ISNEGLECT_FIELD_NUMBER = 131;
  private int isNeglect_;
  /**
   * <pre>
   *审核状态 0为待审核；1为已审核；2为待复审；-1为暂不审核；-2为暂不复审   
   * </pre>
   *
   * <code>int32 IsNeglect = 131;</code>
   */
  public int getIsNeglect() {
    return isNeglect_;
  }

  public static final int ISVIDEO_FIELD_NUMBER = 132;
  private int isVideo_;
  /**
   * <pre>
   *是否包含视频(参数含义：按照数据库中IsVideoCar定义)
   * </pre>
   *
   * <code>int32 IsVideo = 132;</code>
   */
  public int getIsVideo() {
    return isVideo_;
  }

  public static final int ISFIRSTPICTRUE_FIELD_NUMBER = 133;
  private int isFirstPicTrue_;
  /**
   * <pre>
   *是否首图确认  -1为不合格；0为待审核；1为首图合格
   * </pre>
   *
   * <code>int32 IsFirstPicTrue = 133;</code>
   */
  public int getIsFirstPicTrue() {
    return isFirstPicTrue_;
  }

  public static final int ISDEALERRECOMMEND_FIELD_NUMBER = 134;
  private int isDealerRecommend_;
  /**
   * <pre>
   *是否商家推荐车源
   * </pre>
   *
   * <code>int32 IsDealerRecommend = 134;</code>
   */
  public int getIsDealerRecommend() {
    return isDealerRecommend_;
  }

  public static final int CARSOURCETYPEARRAY_FIELD_NUMBER = 135;
  private java.util.List<java.lang.Integer> carSourceTypeArray_;
  /**
   * <pre>
   *车源来源类型  车辆类别(用途)：0-非营运 1-营运 2-营转非 3-租赁
   * </pre>
   *
   * <code>repeated int32 CarSourceTypeArray = 135;</code>
   */
  public java.util.List<java.lang.Integer>
      getCarSourceTypeArrayList() {
    return carSourceTypeArray_;
  }
  /**
   * <pre>
   *车源来源类型  车辆类别(用途)：0-非营运 1-营运 2-营转非 3-租赁
   * </pre>
   *
   * <code>repeated int32 CarSourceTypeArray = 135;</code>
   */
  public int getCarSourceTypeArrayCount() {
    return carSourceTypeArray_.size();
  }
  /**
   * <pre>
   *车源来源类型  车辆类别(用途)：0-非营运 1-营运 2-营转非 3-租赁
   * </pre>
   *
   * <code>repeated int32 CarSourceTypeArray = 135;</code>
   */
  public int getCarSourceTypeArray(int index) {
    return carSourceTypeArray_.get(index);
  }
  private int carSourceTypeArrayMemoizedSerializedSize = -1;

  public static final int CARTYPECONFIG_FIELD_NUMBER = 136;
  private java.util.List<java.lang.Integer> carTypeConfig_;
  /**
   * <pre>
   *车型配置 ： 010100000110111110 共计18位,将参数转化为18位的数组传入,如果那“一位”不参与查询 设置为-1 ,例如：new int[] { 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 };
   * </pre>
   *
   * <code>repeated int32 CarTypeConfig = 136;</code>
   */
  public java.util.List<java.lang.Integer>
      getCarTypeConfigList() {
    return carTypeConfig_;
  }
  /**
   * <pre>
   *车型配置 ： 010100000110111110 共计18位,将参数转化为18位的数组传入,如果那“一位”不参与查询 设置为-1 ,例如：new int[] { 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 };
   * </pre>
   *
   * <code>repeated int32 CarTypeConfig = 136;</code>
   */
  public int getCarTypeConfigCount() {
    return carTypeConfig_.size();
  }
  /**
   * <pre>
   *车型配置 ： 010100000110111110 共计18位,将参数转化为18位的数组传入,如果那“一位”不参与查询 设置为-1 ,例如：new int[] { 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 };
   * </pre>
   *
   * <code>repeated int32 CarTypeConfig = 136;</code>
   */
  public int getCarTypeConfig(int index) {
    return carTypeConfig_.get(index);
  }
  private int carTypeConfigMemoizedSerializedSize = -1;

  public static final int ISRECOMMENDGL_FIELD_NUMBER = 137;
  private int isRecommendGL_;
  /**
   * <pre>
   *是否豪车：  1 是
   * </pre>
   *
   * <code>int32 IsRecommendGL = 137;</code>
   */
  public int getIsRecommendGL() {
    return isRecommendGL_;
  }

  public static final int ISWARRANTY_FIELD_NUMBER = 138;
  private int isWarranty_;
  /**
   * <pre>
   *是否保障车：  1 是 ,默认0(不参与查询)
   * </pre>
   *
   * <code>int32 IsWarranty = 138;</code>
   */
  public int getIsWarranty() {
    return isWarranty_;
  }

  public static final int WARRANTYTYPEARRAY_FIELD_NUMBER = 139;
  private java.util.List<java.lang.Integer> warrantyTypeArray_;
  /**
   * <pre>
   *保障服务类型 ： 101 共计3位,将参数转化为3位的数组传入,如果那“一位”不参与查询 设置为-1 ,例如：new int[] { 0, 1, -1};  注：可能会大于3位长度(查询会自适应)  lijunhao 2015-02-26
   * </pre>
   *
   * <code>repeated int32 WarrantyTypeArray = 139;</code>
   */
  public java.util.List<java.lang.Integer>
      getWarrantyTypeArrayList() {
    return warrantyTypeArray_;
  }
  /**
   * <pre>
   *保障服务类型 ： 101 共计3位,将参数转化为3位的数组传入,如果那“一位”不参与查询 设置为-1 ,例如：new int[] { 0, 1, -1};  注：可能会大于3位长度(查询会自适应)  lijunhao 2015-02-26
   * </pre>
   *
   * <code>repeated int32 WarrantyTypeArray = 139;</code>
   */
  public int getWarrantyTypeArrayCount() {
    return warrantyTypeArray_.size();
  }
  /**
   * <pre>
   *保障服务类型 ： 101 共计3位,将参数转化为3位的数组传入,如果那“一位”不参与查询 设置为-1 ,例如：new int[] { 0, 1, -1};  注：可能会大于3位长度(查询会自适应)  lijunhao 2015-02-26
   * </pre>
   *
   * <code>repeated int32 WarrantyTypeArray = 139;</code>
   */
  public int getWarrantyTypeArray(int index) {
    return warrantyTypeArray_.get(index);
  }
  private int warrantyTypeArrayMemoizedSerializedSize = -1;

  public static final int ISTOP_FIELD_NUMBER = 140;
  private int isTop_;
  /**
   * <pre>
   *是否置顶车源（车源营销---置顶推广）：  1 是,默认0(不参与查询)
   * </pre>
   *
   * <code>int32 IsTop = 140;</code>
   */
  public int getIsTop() {
    return isTop_;
  }

  public static final int ISACTIVITY_FIELD_NUMBER = 141;
  private int isActivity_;
  /**
   * <pre>
   *是否参加特定活动的车源：1为参加，0为不参加    --- 20151016 当前：2015年双十一活动,2016年66购车节活动
   * </pre>
   *
   * <code>int32 IsActivity = 141;</code>
   */
  public int getIsActivity() {
    return isActivity_;
  }

  public static final int ISBANGMAI_FIELD_NUMBER = 142;
  private int isBangmai_;
  /**
   * <pre>
   *是否帮买车源：1为参加，0为不参加    --- 20151208
   * </pre>
   *
   * <code>int32 IsBangmai = 142;</code>
   */
  public int getIsBangmai() {
    return isBangmai_;
  }

  public static final int ISBANGMAICHE_FIELD_NUMBER = 143;
  private int isBangmaiche_;
  /**
   * <pre>
   *是否参加淘车的帮买车APP车源：1为参加，0为不参加    --- 20160217
   * </pre>
   *
   * <code>int32 IsBangmaiche = 143;</code>
   */
  public int getIsBangmaiche() {
    return isBangmaiche_;
  }

  public static final int ISSHOWMR_FIELD_NUMBER = 144;
  private int isShowMr_;
  /**
   * <pre>
   *是否显示维保记录：1为显示，0为不显示    --- 20160202
   * </pre>
   *
   * <code>int32 IsShowMr = 144;</code>
   */
  public int getIsShowMr() {
    return isShowMr_;
  }

  public static final int ISCARID_FIELD_NUMBER = 145;
  private int isCarId_;
  /**
   * <pre>
   *是否包含车型ID，即车型ID是否大于0    ----2016-02-22
   * </pre>
   *
   * <code>int32 IsCarId = 145;</code>
   */
  public int getIsCarId() {
    return isCarId_;
  }

  public static final int ISB2B_FIELD_NUMBER = 146;
  private int isB2B_;
  /**
   * <pre>
   *是否B2B串车车源：1为是  ----20160413
   * </pre>
   *
   * <code>int32 IsB2B = 146;</code>
   */
  public int getIsB2B() {
    return isB2B_;
  }

  public static final int CRMCUSTOMERIDARRAY_FIELD_NUMBER = 147;
  private java.util.List<java.lang.Integer> crmCustomerIdArray_;
  /**
   * <pre>
   *客户编号数组检索
   * </pre>
   *
   * <code>repeated int32 CrmCustomerIdArray = 147;</code>
   */
  public java.util.List<java.lang.Integer>
      getCrmCustomerIdArrayList() {
    return crmCustomerIdArray_;
  }
  /**
   * <pre>
   *客户编号数组检索
   * </pre>
   *
   * <code>repeated int32 CrmCustomerIdArray = 147;</code>
   */
  public int getCrmCustomerIdArrayCount() {
    return crmCustomerIdArray_.size();
  }
  /**
   * <pre>
   *客户编号数组检索
   * </pre>
   *
   * <code>repeated int32 CrmCustomerIdArray = 147;</code>
   */
  public int getCrmCustomerIdArray(int index) {
    return crmCustomerIdArray_.get(index);
  }
  private int crmCustomerIdArrayMemoizedSerializedSize = -1;

  public static final int ISCHECKREPORTJSON_FIELD_NUMBER = 148;
  private int isCheckReportJson_;
  /**
   * <pre>
   *是否显示车源质检报告
   * </pre>
   *
   * <code>int32 IsCheckReportJson = 148;</code>
   */
  public int getIsCheckReportJson() {
    return isCheckReportJson_;
  }

  public static final int ENVIRSTANDARDARRAY_FIELD_NUMBER = 149;
  private java.util.List<java.lang.Integer> envirStandardArray_;
  /**
   * <pre>
   *排放标准：1:国2, 2:国3, 3:国4, 4:国5, 5:欧3, 6:欧4, 7:欧5, 8:京5, 9:OBD   ---  20150629  用0,1设置搜索条件，如“0,0,0,1,0,0,0,0,1” 代表 “国5或OBD”
   * </pre>
   *
   * <code>repeated int32 EnvirStandardArray = 149;</code>
   */
  public java.util.List<java.lang.Integer>
      getEnvirStandardArrayList() {
    return envirStandardArray_;
  }
  /**
   * <pre>
   *排放标准：1:国2, 2:国3, 3:国4, 4:国5, 5:欧3, 6:欧4, 7:欧5, 8:京5, 9:OBD   ---  20150629  用0,1设置搜索条件，如“0,0,0,1,0,0,0,0,1” 代表 “国5或OBD”
   * </pre>
   *
   * <code>repeated int32 EnvirStandardArray = 149;</code>
   */
  public int getEnvirStandardArrayCount() {
    return envirStandardArray_.size();
  }
  /**
   * <pre>
   *排放标准：1:国2, 2:国3, 3:国4, 4:国5, 5:欧3, 6:欧4, 7:欧5, 8:京5, 9:OBD   ---  20150629  用0,1设置搜索条件，如“0,0,0,1,0,0,0,0,1” 代表 “国5或OBD”
   * </pre>
   *
   * <code>repeated int32 EnvirStandardArray = 149;</code>
   */
  public int getEnvirStandardArray(int index) {
    return envirStandardArray_.get(index);
  }
  private int envirStandardArrayMemoizedSerializedSize = -1;

  public static final int CONSUMPTIONLOWERARRAY_FIELD_NUMBER = 150;
  private java.util.List<java.lang.Double> consumptionLowerArray_;
  /**
   * <pre>
   *综合工况油耗&gt;范围--最低(单位"升/百公里")    ---- 20140828
   * </pre>
   *
   * <code>repeated double ConsumptionLowerArray = 150;</code>
   */
  public java.util.List<java.lang.Double>
      getConsumptionLowerArrayList() {
    return consumptionLowerArray_;
  }
  /**
   * <pre>
   *综合工况油耗&gt;范围--最低(单位"升/百公里")    ---- 20140828
   * </pre>
   *
   * <code>repeated double ConsumptionLowerArray = 150;</code>
   */
  public int getConsumptionLowerArrayCount() {
    return consumptionLowerArray_.size();
  }
  /**
   * <pre>
   *综合工况油耗&gt;范围--最低(单位"升/百公里")    ---- 20140828
   * </pre>
   *
   * <code>repeated double ConsumptionLowerArray = 150;</code>
   */
  public double getConsumptionLowerArray(int index) {
    return consumptionLowerArray_.get(index);
  }
  private int consumptionLowerArrayMemoizedSerializedSize = -1;

  public static final int CONSUMPTIONHIGHARRAY_FIELD_NUMBER = 151;
  private java.util.List<java.lang.Double> consumptionHighArray_;
  /**
   * <pre>
   *综合工况油耗&gt;范围--最高(单位"升/百公里")    ---- 20140828
   * </pre>
   *
   * <code>repeated double ConsumptionHighArray = 151;</code>
   */
  public java.util.List<java.lang.Double>
      getConsumptionHighArrayList() {
    return consumptionHighArray_;
  }
  /**
   * <pre>
   *综合工况油耗&gt;范围--最高(单位"升/百公里")    ---- 20140828
   * </pre>
   *
   * <code>repeated double ConsumptionHighArray = 151;</code>
   */
  public int getConsumptionHighArrayCount() {
    return consumptionHighArray_.size();
  }
  /**
   * <pre>
   *综合工况油耗&gt;范围--最高(单位"升/百公里")    ---- 20140828
   * </pre>
   *
   * <code>repeated double ConsumptionHighArray = 151;</code>
   */
  public double getConsumptionHighArray(int index) {
    return consumptionHighArray_.get(index);
  }
  private int consumptionHighArrayMemoizedSerializedSize = -1;

  public static final int OILTYPEARRAY_FIELD_NUMBER = 152;
  private java.util.List<java.lang.Integer> oilTypeArray_;
  /**
   * <pre>
   *能源类型：OilTypeEnum   ---  20150828
   * </pre>
   *
   * <code>repeated int32 OilTypeArray = 152;</code>
   */
  public java.util.List<java.lang.Integer>
      getOilTypeArrayList() {
    return oilTypeArray_;
  }
  /**
   * <pre>
   *能源类型：OilTypeEnum   ---  20150828
   * </pre>
   *
   * <code>repeated int32 OilTypeArray = 152;</code>
   */
  public int getOilTypeArrayCount() {
    return oilTypeArray_.size();
  }
  /**
   * <pre>
   *能源类型：OilTypeEnum   ---  20150828
   * </pre>
   *
   * <code>repeated int32 OilTypeArray = 152;</code>
   */
  public int getOilTypeArray(int index) {
    return oilTypeArray_.get(index);
  }
  private int oilTypeArrayMemoizedSerializedSize = -1;

  public static final int ENGINELOCATIONARRAY_FIELD_NUMBER = 153;
  private java.util.List<java.lang.Integer> engineLocationArray_;
  /**
   * <pre>
   *发动机位置：EngineLocationEnum   ---  20150828
   * </pre>
   *
   * <code>repeated int32 EngineLocationArray = 153;</code>
   */
  public java.util.List<java.lang.Integer>
      getEngineLocationArrayList() {
    return engineLocationArray_;
  }
  /**
   * <pre>
   *发动机位置：EngineLocationEnum   ---  20150828
   * </pre>
   *
   * <code>repeated int32 EngineLocationArray = 153;</code>
   */
  public int getEngineLocationArrayCount() {
    return engineLocationArray_.size();
  }
  /**
   * <pre>
   *发动机位置：EngineLocationEnum   ---  20150828
   * </pre>
   *
   * <code>repeated int32 EngineLocationArray = 153;</code>
   */
  public int getEngineLocationArray(int index) {
    return engineLocationArray_.get(index);
  }
  private int engineLocationArrayMemoizedSerializedSize = -1;

  public static final int BODYDOORSLOWERARRAY_FIELD_NUMBER = 154;
  private java.util.List<java.lang.Integer> bodyDoorsLowerArray_;
  /**
   * <pre>
   *车门数--最低值（单位：个）    ---  20150828
   * </pre>
   *
   * <code>repeated int32 BodyDoorsLowerArray = 154;</code>
   */
  public java.util.List<java.lang.Integer>
      getBodyDoorsLowerArrayList() {
    return bodyDoorsLowerArray_;
  }
  /**
   * <pre>
   *车门数--最低值（单位：个）    ---  20150828
   * </pre>
   *
   * <code>repeated int32 BodyDoorsLowerArray = 154;</code>
   */
  public int getBodyDoorsLowerArrayCount() {
    return bodyDoorsLowerArray_.size();
  }
  /**
   * <pre>
   *车门数--最低值（单位：个）    ---  20150828
   * </pre>
   *
   * <code>repeated int32 BodyDoorsLowerArray = 154;</code>
   */
  public int getBodyDoorsLowerArray(int index) {
    return bodyDoorsLowerArray_.get(index);
  }
  private int bodyDoorsLowerArrayMemoizedSerializedSize = -1;

  public static final int BODYDOORSHIGHARRAY_FIELD_NUMBER = 155;
  private java.util.List<java.lang.Integer> bodyDoorsHighArray_;
  /**
   * <pre>
   *车门数--最高值（单位：个）    ---  20150828
   * </pre>
   *
   * <code>repeated int32 BodyDoorsHighArray = 155;</code>
   */
  public java.util.List<java.lang.Integer>
      getBodyDoorsHighArrayList() {
    return bodyDoorsHighArray_;
  }
  /**
   * <pre>
   *车门数--最高值（单位：个）    ---  20150828
   * </pre>
   *
   * <code>repeated int32 BodyDoorsHighArray = 155;</code>
   */
  public int getBodyDoorsHighArrayCount() {
    return bodyDoorsHighArray_.size();
  }
  /**
   * <pre>
   *车门数--最高值（单位：个）    ---  20150828
   * </pre>
   *
   * <code>repeated int32 BodyDoorsHighArray = 155;</code>
   */
  public int getBodyDoorsHighArray(int index) {
    return bodyDoorsHighArray_.get(index);
  }
  private int bodyDoorsHighArrayMemoizedSerializedSize = -1;

  public static final int SEATNUMLOWERARRAY_FIELD_NUMBER = 156;
  private java.util.List<java.lang.Integer> seatNumLowerArray_;
  /**
   * <pre>
   *座位数/乘员人数--最低值（单位：个）    ---  20150828
   * </pre>
   *
   * <code>repeated int32 SeatNumLowerArray = 156;</code>
   */
  public java.util.List<java.lang.Integer>
      getSeatNumLowerArrayList() {
    return seatNumLowerArray_;
  }
  /**
   * <pre>
   *座位数/乘员人数--最低值（单位：个）    ---  20150828
   * </pre>
   *
   * <code>repeated int32 SeatNumLowerArray = 156;</code>
   */
  public int getSeatNumLowerArrayCount() {
    return seatNumLowerArray_.size();
  }
  /**
   * <pre>
   *座位数/乘员人数--最低值（单位：个）    ---  20150828
   * </pre>
   *
   * <code>repeated int32 SeatNumLowerArray = 156;</code>
   */
  public int getSeatNumLowerArray(int index) {
    return seatNumLowerArray_.get(index);
  }
  private int seatNumLowerArrayMemoizedSerializedSize = -1;

  public static final int SEATNUMHIGHARRAY_FIELD_NUMBER = 157;
  private java.util.List<java.lang.Integer> seatNumHighArray_;
  /**
   * <pre>
   *座位数/乘员人数--最高值（单位：个）    ---  20150828
   * </pre>
   *
   * <code>repeated int32 SeatNumHighArray = 157;</code>
   */
  public java.util.List<java.lang.Integer>
      getSeatNumHighArrayList() {
    return seatNumHighArray_;
  }
  /**
   * <pre>
   *座位数/乘员人数--最高值（单位：个）    ---  20150828
   * </pre>
   *
   * <code>repeated int32 SeatNumHighArray = 157;</code>
   */
  public int getSeatNumHighArrayCount() {
    return seatNumHighArray_.size();
  }
  /**
   * <pre>
   *座位数/乘员人数--最高值（单位：个）    ---  20150828
   * </pre>
   *
   * <code>repeated int32 SeatNumHighArray = 157;</code>
   */
  public int getSeatNumHighArray(int index) {
    return seatNumHighArray_.get(index);
  }
  private int seatNumHighArrayMemoizedSerializedSize = -1;

  public static final int ISWAGON_FIELD_NUMBER = 158;
  private int isWagon_;
  /**
   * <pre>
   *是否旅行版：1是    ---  20150828
   * </pre>
   *
   * <code>int32 IsWagon = 158;</code>
   */
  public int getIsWagon() {
    return isWagon_;
  }

  public static final int DRIVETYPEARRAY_FIELD_NUMBER = 159;
  private java.util.List<java.lang.Integer> driveTypeArray_;
  /**
   * <pre>
   *驱动方式：DriveTypeEnum   ---  20150901
   * </pre>
   *
   * <code>repeated int32 DriveTypeArray = 159;</code>
   */
  public java.util.List<java.lang.Integer>
      getDriveTypeArrayList() {
    return driveTypeArray_;
  }
  /**
   * <pre>
   *驱动方式：DriveTypeEnum   ---  20150901
   * </pre>
   *
   * <code>repeated int32 DriveTypeArray = 159;</code>
   */
  public int getDriveTypeArrayCount() {
    return driveTypeArray_.size();
  }
  /**
   * <pre>
   *驱动方式：DriveTypeEnum   ---  20150901
   * </pre>
   *
   * <code>repeated int32 DriveTypeArray = 159;</code>
   */
  public int getDriveTypeArray(int index) {
    return driveTypeArray_.get(index);
  }
  private int driveTypeArrayMemoizedSerializedSize = -1;

  public static final int CSBODYFORMARRAY_FIELD_NUMBER = 160;
  private java.util.List<java.lang.Integer> csBodyFormArray_;
  /**
   * <pre>
   *车身形式：CsBodyFormEnum   ---  20150907
   * </pre>
   *
   * <code>repeated int32 CsBodyFormArray = 160;</code>
   */
  public java.util.List<java.lang.Integer>
      getCsBodyFormArrayList() {
    return csBodyFormArray_;
  }
  /**
   * <pre>
   *车身形式：CsBodyFormEnum   ---  20150907
   * </pre>
   *
   * <code>repeated int32 CsBodyFormArray = 160;</code>
   */
  public int getCsBodyFormArrayCount() {
    return csBodyFormArray_.size();
  }
  /**
   * <pre>
   *车身形式：CsBodyFormEnum   ---  20150907
   * </pre>
   *
   * <code>repeated int32 CsBodyFormArray = 160;</code>
   */
  public int getCsBodyFormArray(int index) {
    return csBodyFormArray_.get(index);
  }
  private int csBodyFormArrayMemoizedSerializedSize = -1;

  public static final int CARLEVELARRAY_FIELD_NUMBER = 161;
  private java.util.List<java.lang.Integer> carLevelArray_;
  /**
   * <pre>
   *车辆类型数组(豪华车 = 1,微型车 = 2,中大型车 = 3,小型车 = 4,MPV = 5,中型车 = 6,紧凑型车 = 7,SUV = 8,跑车 = 9,其他 = 10,面包车 = 11,皮卡 = 12,概念车=13,客车=14,卡车=15)
   * </pre>
   *
   * <code>repeated int32 CarLevelArray = 161;</code>
   */
  public java.util.List<java.lang.Integer>
      getCarLevelArrayList() {
    return carLevelArray_;
  }
  /**
   * <pre>
   *车辆类型数组(豪华车 = 1,微型车 = 2,中大型车 = 3,小型车 = 4,MPV = 5,中型车 = 6,紧凑型车 = 7,SUV = 8,跑车 = 9,其他 = 10,面包车 = 11,皮卡 = 12,概念车=13,客车=14,卡车=15)
   * </pre>
   *
   * <code>repeated int32 CarLevelArray = 161;</code>
   */
  public int getCarLevelArrayCount() {
    return carLevelArray_.size();
  }
  /**
   * <pre>
   *车辆类型数组(豪华车 = 1,微型车 = 2,中大型车 = 3,小型车 = 4,MPV = 5,中型车 = 6,紧凑型车 = 7,SUV = 8,跑车 = 9,其他 = 10,面包车 = 11,皮卡 = 12,概念车=13,客车=14,卡车=15)
   * </pre>
   *
   * <code>repeated int32 CarLevelArray = 161;</code>
   */
  public int getCarLevelArray(int index) {
    return carLevelArray_.get(index);
  }
  private int carLevelArrayMemoizedSerializedSize = -1;

  public static final int CARLEVELSECONDARRAY_FIELD_NUMBER = 162;
  private java.util.List<java.lang.Integer> carLevelSecondArray_;
  /**
   * <pre>
   *车系二级级别  0:无,1:小型suv,2:紧凑型suv,3:中型suv,4:中大型suv,5:全尺寸suv,6:微客,7:小客,8:中客,9:大客,10:微卡,11:轻卡,12:中卡,13:重卡
   * </pre>
   *
   * <code>repeated int32 CarLevelSecondArray = 162;</code>
   */
  public java.util.List<java.lang.Integer>
      getCarLevelSecondArrayList() {
    return carLevelSecondArray_;
  }
  /**
   * <pre>
   *车系二级级别  0:无,1:小型suv,2:紧凑型suv,3:中型suv,4:中大型suv,5:全尺寸suv,6:微客,7:小客,8:中客,9:大客,10:微卡,11:轻卡,12:中卡,13:重卡
   * </pre>
   *
   * <code>repeated int32 CarLevelSecondArray = 162;</code>
   */
  public int getCarLevelSecondArrayCount() {
    return carLevelSecondArray_.size();
  }
  /**
   * <pre>
   *车系二级级别  0:无,1:小型suv,2:紧凑型suv,3:中型suv,4:中大型suv,5:全尺寸suv,6:微客,7:小客,8:中客,9:大客,10:微卡,11:轻卡,12:中卡,13:重卡
   * </pre>
   *
   * <code>repeated int32 CarLevelSecondArray = 162;</code>
   */
  public int getCarLevelSecondArray(int index) {
    return carLevelSecondArray_.get(index);
  }
  private int carLevelSecondArrayMemoizedSerializedSize = -1;

  public static final int CARYEARARRAY_FIELD_NUMBER = 163;
  private com.google.protobuf.LazyStringList carYearArray_;
  /**
   * <pre>
   *车型年款
   * </pre>
   *
   * <code>repeated string CarYearArray = 163;</code>
   */
  public com.google.protobuf.ProtocolStringList
      getCarYearArrayList() {
    return carYearArray_;
  }
  /**
   * <pre>
   *车型年款
   * </pre>
   *
   * <code>repeated string CarYearArray = 163;</code>
   */
  public int getCarYearArrayCount() {
    return carYearArray_.size();
  }
  /**
   * <pre>
   *车型年款
   * </pre>
   *
   * <code>repeated string CarYearArray = 163;</code>
   */
  public java.lang.String getCarYearArray(int index) {
    return carYearArray_.get(index);
  }
  /**
   * <pre>
   *车型年款
   * </pre>
   *
   * <code>repeated string CarYearArray = 163;</code>
   */
  public com.google.protobuf.ByteString
      getCarYearArrayBytes(int index) {
    return carYearArray_.getByteString(index);
  }

  public static final int MAINBRANDARRAY_FIELD_NUMBER = 164;
  private java.util.List<java.lang.Integer> mainBrandArray_;
  /**
   * <pre>
   *搜索主品牌(mainbrandid)数组【谨慎使用,控制Length】
   * </pre>
   *
   * <code>repeated int32 MainBrandArray = 164;</code>
   */
  public java.util.List<java.lang.Integer>
      getMainBrandArrayList() {
    return mainBrandArray_;
  }
  /**
   * <pre>
   *搜索主品牌(mainbrandid)数组【谨慎使用,控制Length】
   * </pre>
   *
   * <code>repeated int32 MainBrandArray = 164;</code>
   */
  public int getMainBrandArrayCount() {
    return mainBrandArray_.size();
  }
  /**
   * <pre>
   *搜索主品牌(mainbrandid)数组【谨慎使用,控制Length】
   * </pre>
   *
   * <code>repeated int32 MainBrandArray = 164;</code>
   */
  public int getMainBrandArray(int index) {
    return mainBrandArray_.get(index);
  }
  private int mainBrandArrayMemoizedSerializedSize = -1;

  public static final int BRANDARRAY_FIELD_NUMBER = 165;
  private java.util.List<java.lang.Integer> brandArray_;
  /**
   * <pre>
   *搜索品牌(producerid)数组【谨慎使用,控制Length】
   * </pre>
   *
   * <code>repeated int32 BrandArray = 165;</code>
   */
  public java.util.List<java.lang.Integer>
      getBrandArrayList() {
    return brandArray_;
  }
  /**
   * <pre>
   *搜索品牌(producerid)数组【谨慎使用,控制Length】
   * </pre>
   *
   * <code>repeated int32 BrandArray = 165;</code>
   */
  public int getBrandArrayCount() {
    return brandArray_.size();
  }
  /**
   * <pre>
   *搜索品牌(producerid)数组【谨慎使用,控制Length】
   * </pre>
   *
   * <code>repeated int32 BrandArray = 165;</code>
   */
  public int getBrandArray(int index) {
    return brandArray_.get(index);
  }
  private int brandArrayMemoizedSerializedSize = -1;

  public static final int CARSERIALARRAY_FIELD_NUMBER = 166;
  private java.util.List<java.lang.Integer> carSerialArray_;
  /**
   * <pre>
   *搜索车系(brandid)数组【谨慎使用,控制Length】
   * </pre>
   *
   * <code>repeated int32 CarSerialArray = 166;</code>
   */
  public java.util.List<java.lang.Integer>
      getCarSerialArrayList() {
    return carSerialArray_;
  }
  /**
   * <pre>
   *搜索车系(brandid)数组【谨慎使用,控制Length】
   * </pre>
   *
   * <code>repeated int32 CarSerialArray = 166;</code>
   */
  public int getCarSerialArrayCount() {
    return carSerialArray_.size();
  }
  /**
   * <pre>
   *搜索车系(brandid)数组【谨慎使用,控制Length】
   * </pre>
   *
   * <code>repeated int32 CarSerialArray = 166;</code>
   */
  public int getCarSerialArray(int index) {
    return carSerialArray_.get(index);
  }
  private int carSerialArrayMemoizedSerializedSize = -1;

  public static final int CARIDARRAY_FIELD_NUMBER = 167;
  private java.util.List<java.lang.Integer> carIDArray_;
  /**
   * <pre>
   *搜索车型数组【谨慎使用,控制Length】
   * </pre>
   *
   * <code>repeated int32 CarIDArray = 167;</code>
   */
  public java.util.List<java.lang.Integer>
      getCarIDArrayList() {
    return carIDArray_;
  }
  /**
   * <pre>
   *搜索车型数组【谨慎使用,控制Length】
   * </pre>
   *
   * <code>repeated int32 CarIDArray = 167;</code>
   */
  public int getCarIDArrayCount() {
    return carIDArray_.size();
  }
  /**
   * <pre>
   *搜索车型数组【谨慎使用,控制Length】
   * </pre>
   *
   * <code>repeated int32 CarIDArray = 167;</code>
   */
  public int getCarIDArray(int index) {
    return carIDArray_.get(index);
  }
  private int carIDArrayMemoizedSerializedSize = -1;

  public static final int GEARBOXTYPEARRAY_FIELD_NUMBER = 168;
  private java.util.List<java.lang.Integer> gearBoxTypeArray_;
  /**
   * <pre>
   *变速箱
   * </pre>
   *
   * <code>repeated int32 GearBoxTypeArray = 168;</code>
   */
  public java.util.List<java.lang.Integer>
      getGearBoxTypeArrayList() {
    return gearBoxTypeArray_;
  }
  /**
   * <pre>
   *变速箱
   * </pre>
   *
   * <code>repeated int32 GearBoxTypeArray = 168;</code>
   */
  public int getGearBoxTypeArrayCount() {
    return gearBoxTypeArray_.size();
  }
  /**
   * <pre>
   *变速箱
   * </pre>
   *
   * <code>repeated int32 GearBoxTypeArray = 168;</code>
   */
  public int getGearBoxTypeArray(int index) {
    return gearBoxTypeArray_.get(index);
  }
  private int gearBoxTypeArrayMemoizedSerializedSize = -1;

  public static final int EXHAUSTLEVELLOWERARRAY_FIELD_NUMBER = 169;
  private java.util.List<java.lang.Double> exhaustLevelLowerArray_;
  /**
   * <pre>
   *排气量--最低值(参数名称为exhaustlower)
   * </pre>
   *
   * <code>repeated double ExhaustLevelLowerArray = 169;</code>
   */
  public java.util.List<java.lang.Double>
      getExhaustLevelLowerArrayList() {
    return exhaustLevelLowerArray_;
  }
  /**
   * <pre>
   *排气量--最低值(参数名称为exhaustlower)
   * </pre>
   *
   * <code>repeated double ExhaustLevelLowerArray = 169;</code>
   */
  public int getExhaustLevelLowerArrayCount() {
    return exhaustLevelLowerArray_.size();
  }
  /**
   * <pre>
   *排气量--最低值(参数名称为exhaustlower)
   * </pre>
   *
   * <code>repeated double ExhaustLevelLowerArray = 169;</code>
   */
  public double getExhaustLevelLowerArray(int index) {
    return exhaustLevelLowerArray_.get(index);
  }
  private int exhaustLevelLowerArrayMemoizedSerializedSize = -1;

  public static final int EXHAUSTLEVELHIGHARRAY_FIELD_NUMBER = 170;
  private java.util.List<java.lang.Double> exhaustLevelHighArray_;
  /**
   * <pre>
   *排气量--最高值
   * </pre>
   *
   * <code>repeated double ExhaustLevelHighArray = 170;</code>
   */
  public java.util.List<java.lang.Double>
      getExhaustLevelHighArrayList() {
    return exhaustLevelHighArray_;
  }
  /**
   * <pre>
   *排气量--最高值
   * </pre>
   *
   * <code>repeated double ExhaustLevelHighArray = 170;</code>
   */
  public int getExhaustLevelHighArrayCount() {
    return exhaustLevelHighArray_.size();
  }
  /**
   * <pre>
   *排气量--最高值
   * </pre>
   *
   * <code>repeated double ExhaustLevelHighArray = 170;</code>
   */
  public double getExhaustLevelHighArray(int index) {
    return exhaustLevelHighArray_.get(index);
  }
  private int exhaustLevelHighArrayMemoizedSerializedSize = -1;

  public static final int EXHAUSTLEVELARRAY_FIELD_NUMBER = 171;
  private java.util.List<java.lang.Integer> exhaustLevelArray_;
  /**
   * <pre>
   *1.0升以下、1.1-1.5升、1.6-2.0升、2.1-3.0升、3.1升以上 （2014-03-03）
   * </pre>
   *
   * <code>repeated int32 ExhaustLevelArray = 171;</code>
   */
  public java.util.List<java.lang.Integer>
      getExhaustLevelArrayList() {
    return exhaustLevelArray_;
  }
  /**
   * <pre>
   *1.0升以下、1.1-1.5升、1.6-2.0升、2.1-3.0升、3.1升以上 （2014-03-03）
   * </pre>
   *
   * <code>repeated int32 ExhaustLevelArray = 171;</code>
   */
  public int getExhaustLevelArrayCount() {
    return exhaustLevelArray_.size();
  }
  /**
   * <pre>
   *1.0升以下、1.1-1.5升、1.6-2.0升、2.1-3.0升、3.1升以上 （2014-03-03）
   * </pre>
   *
   * <code>repeated int32 ExhaustLevelArray = 171;</code>
   */
  public int getExhaustLevelArray(int index) {
    return exhaustLevelArray_.get(index);
  }
  private int exhaustLevelArrayMemoizedSerializedSize = -1;

  public static final int COUNTRYARRAY_FIELD_NUMBER = 172;
  private java.util.List<java.lang.Integer> countryArray_;
  /**
   * <pre>
   *品牌国别(参数名称为country)按枚举值进行检索：澳大利亚 = 1, 德国 = 2, 法国 = 3, 韩国 = 4,荷兰 = 5, 捷克 = 6, 美国 = 7, 日本 = 8, 瑞典 = 9, 西班牙 = 10, 意大利 = 11, 英国 = 12, 中国 = 13
   * </pre>
   *
   * <code>repeated int32 CountryArray = 172;</code>
   */
  public java.util.List<java.lang.Integer>
      getCountryArrayList() {
    return countryArray_;
  }
  /**
   * <pre>
   *品牌国别(参数名称为country)按枚举值进行检索：澳大利亚 = 1, 德国 = 2, 法国 = 3, 韩国 = 4,荷兰 = 5, 捷克 = 6, 美国 = 7, 日本 = 8, 瑞典 = 9, 西班牙 = 10, 意大利 = 11, 英国 = 12, 中国 = 13
   * </pre>
   *
   * <code>repeated int32 CountryArray = 172;</code>
   */
  public int getCountryArrayCount() {
    return countryArray_.size();
  }
  /**
   * <pre>
   *品牌国别(参数名称为country)按枚举值进行检索：澳大利亚 = 1, 德国 = 2, 法国 = 3, 韩国 = 4,荷兰 = 5, 捷克 = 6, 美国 = 7, 日本 = 8, 瑞典 = 9, 西班牙 = 10, 意大利 = 11, 英国 = 12, 中国 = 13
   * </pre>
   *
   * <code>repeated int32 CountryArray = 172;</code>
   */
  public int getCountryArray(int index) {
    return countryArray_.get(index);
  }
  private int countryArrayMemoizedSerializedSize = -1;

  public static final int BRANDATTRARRAY_FIELD_NUMBER = 173;
  private java.util.List<java.lang.Integer> brandAttrArray_;
  /**
   * <pre>
   * 品牌属性(自主 = 1, 合资 = 2, 进口 = 3)
   * </pre>
   *
   * <code>repeated int32 BrandAttrArray = 173;</code>
   */
  public java.util.List<java.lang.Integer>
      getBrandAttrArrayList() {
    return brandAttrArray_;
  }
  /**
   * <pre>
   * 品牌属性(自主 = 1, 合资 = 2, 进口 = 3)
   * </pre>
   *
   * <code>repeated int32 BrandAttrArray = 173;</code>
   */
  public int getBrandAttrArrayCount() {
    return brandAttrArray_.size();
  }
  /**
   * <pre>
   * 品牌属性(自主 = 1, 合资 = 2, 进口 = 3)
   * </pre>
   *
   * <code>repeated int32 BrandAttrArray = 173;</code>
   */
  public int getBrandAttrArray(int index) {
    return brandAttrArray_.get(index);
  }
  private int brandAttrArrayMemoizedSerializedSize = -1;

  public static final int ADCITY_FIELD_NUMBER = 174;
  private int adCity_;
  /**
   * <pre>
   *精准广告投放城市
   * </pre>
   *
   * <code>int32 AdCity = 174;</code>
   */
  public int getAdCity() {
    return adCity_;
  }

  public static final int ADCONDITION_FIELD_NUMBER = 175;
  private int adCondition_;
  /**
   * <pre>
   *精准广告投放条件
   * </pre>
   *
   * <code>int32 AdCondition = 175;</code>
   */
  public int getAdCondition() {
    return adCondition_;
  }

  public static final int CARBENEFITRATELOWER_FIELD_NUMBER = 176;
  private double carBenefitRateLower_;
  /**
   * <pre>
   *车源优惠超值系数--最低值
   * </pre>
   *
   * <code>double CarBenefitRateLower = 176;</code>
   */
  public double getCarBenefitRateLower() {
    return carBenefitRateLower_;
  }

  public static final int CARBENEFITRATEHIGH_FIELD_NUMBER = 177;
  private double carBenefitRateHigh_;
  /**
   * <pre>
   *车源优惠超值系数--最高值 
   * </pre>
   *
   * <code>double CarBenefitRateHigh = 177;</code>
   */
  public double getCarBenefitRateHigh() {
    return carBenefitRateHigh_;
  }

  public static final int CALLCONNECTRATELOWER_FIELD_NUMBER = 178;
  private double callConnectRateLower_;
  /**
   * <pre>
   *商家7天内电话接通率--最低    ---- 20170329
   * </pre>
   *
   * <code>double CallConnectRateLower = 178;</code>
   */
  public double getCallConnectRateLower() {
    return callConnectRateLower_;
  }

  public static final int CALLCONNECTRATEHIGH_FIELD_NUMBER = 179;
  private double callConnectRateHigh_;
  /**
   * <pre>
   *商家7天内电话接通率--最高    ---- 20170329
   * </pre>
   *
   * <code>double CallConnectRateHigh = 179;</code>
   */
  public double getCallConnectRateHigh() {
    return callConnectRateHigh_;
  }

  public static final int VINCODEARRAY_FIELD_NUMBER = 180;
  private com.google.protobuf.LazyStringList vinCodeArray_;
  /**
   * <pre>
   *VIN码查询  --20170329
   * </pre>
   *
   * <code>repeated string VinCodeArray = 180;</code>
   */
  public com.google.protobuf.ProtocolStringList
      getVinCodeArrayList() {
    return vinCodeArray_;
  }
  /**
   * <pre>
   *VIN码查询  --20170329
   * </pre>
   *
   * <code>repeated string VinCodeArray = 180;</code>
   */
  public int getVinCodeArrayCount() {
    return vinCodeArray_.size();
  }
  /**
   * <pre>
   *VIN码查询  --20170329
   * </pre>
   *
   * <code>repeated string VinCodeArray = 180;</code>
   */
  public java.lang.String getVinCodeArray(int index) {
    return vinCodeArray_.get(index);
  }
  /**
   * <pre>
   *VIN码查询  --20170329
   * </pre>
   *
   * <code>repeated string VinCodeArray = 180;</code>
   */
  public com.google.protobuf.ByteString
      getVinCodeArrayBytes(int index) {
    return vinCodeArray_.getByteString(index);
  }

  public static final int LICENSEPROVINCEIDARRAY_FIELD_NUMBER = 181;
  private java.util.List<java.lang.Integer> licenseProvinceIdArray_;
  /**
   * <pre>
   *车牌所在地--省份ID ,注意只有LicenseCityIdArray为空时才生效
   * </pre>
   *
   * <code>repeated int32 LicenseProvinceIdArray = 181;</code>
   */
  public java.util.List<java.lang.Integer>
      getLicenseProvinceIdArrayList() {
    return licenseProvinceIdArray_;
  }
  /**
   * <pre>
   *车牌所在地--省份ID ,注意只有LicenseCityIdArray为空时才生效
   * </pre>
   *
   * <code>repeated int32 LicenseProvinceIdArray = 181;</code>
   */
  public int getLicenseProvinceIdArrayCount() {
    return licenseProvinceIdArray_.size();
  }
  /**
   * <pre>
   *车牌所在地--省份ID ,注意只有LicenseCityIdArray为空时才生效
   * </pre>
   *
   * <code>repeated int32 LicenseProvinceIdArray = 181;</code>
   */
  public int getLicenseProvinceIdArray(int index) {
    return licenseProvinceIdArray_.get(index);
  }
  private int licenseProvinceIdArrayMemoizedSerializedSize = -1;

  public static final int LICENSECITYIDARRAY_FIELD_NUMBER = 182;
  private java.util.List<java.lang.Integer> licenseCityIdArray_;
  /**
   * <pre>
   *车牌所在城市ID  2017-04-10
   * </pre>
   *
   * <code>repeated int32 LicenseCityIdArray = 182;</code>
   */
  public java.util.List<java.lang.Integer>
      getLicenseCityIdArrayList() {
    return licenseCityIdArray_;
  }
  /**
   * <pre>
   *车牌所在城市ID  2017-04-10
   * </pre>
   *
   * <code>repeated int32 LicenseCityIdArray = 182;</code>
   */
  public int getLicenseCityIdArrayCount() {
    return licenseCityIdArray_.size();
  }
  /**
   * <pre>
   *车牌所在城市ID  2017-04-10
   * </pre>
   *
   * <code>repeated int32 LicenseCityIdArray = 182;</code>
   */
  public int getLicenseCityIdArray(int index) {
    return licenseCityIdArray_.get(index);
  }
  private int licenseCityIdArrayMemoizedSerializedSize = -1;

  public static final int ISLICENSED_FIELD_NUMBER = 183;
  private int isLicensed_;
  /**
   * <pre>
   *是否上牌：1:已上牌,-1:未上牌,0:不参与查询
   * </pre>
   *
   * <code>int32 IsLicensed = 183;</code>
   */
  public int getIsLicensed() {
    return isLicensed_;
  }

  public static final int NOCRMCUSTOMERIDARRAY_FIELD_NUMBER = 184;
  private java.util.List<java.lang.Integer> noCrmCustomerIdArray_;
  /**
   * <pre>
   *排除客户编号数组检索
   * </pre>
   *
   * <code>repeated int32 NoCrmCustomerIdArray = 184;</code>
   */
  public java.util.List<java.lang.Integer>
      getNoCrmCustomerIdArrayList() {
    return noCrmCustomerIdArray_;
  }
  /**
   * <pre>
   *排除客户编号数组检索
   * </pre>
   *
   * <code>repeated int32 NoCrmCustomerIdArray = 184;</code>
   */
  public int getNoCrmCustomerIdArrayCount() {
    return noCrmCustomerIdArray_.size();
  }
  /**
   * <pre>
   *排除客户编号数组检索
   * </pre>
   *
   * <code>repeated int32 NoCrmCustomerIdArray = 184;</code>
   */
  public int getNoCrmCustomerIdArray(int index) {
    return noCrmCustomerIdArray_.get(index);
  }
  private int noCrmCustomerIdArrayMemoizedSerializedSize = -1;

  public static final int CARPVMIN_FIELD_NUMBER = 185;
  private int carPvMin_;
  /**
   * <pre>
   *车源前7天最小PV数
   * </pre>
   *
   * <code>int32 CarPvMin = 185;</code>
   */
  public int getCarPvMin() {
    return carPvMin_;
  }

  public static final int CARPVMAX_FIELD_NUMBER = 186;
  private int carPvMax_;
  /**
   * <pre>
   *车源前7天最大PV数
   * </pre>
   *
   * <code>int32 CarPvMax = 186;</code>
   */
  public int getCarPvMax() {
    return carPvMax_;
  }

  public static final int NOSUPERIORIDARRAY_FIELD_NUMBER = 187;
  private java.util.List<java.lang.Integer> noSuperiorIdArray_;
  /**
   * <pre>
   *排除经销商上级公司ID（即厂商ID）(针对商家车源)
   * </pre>
   *
   * <code>repeated int32 NoSuperiorIdArray = 187;</code>
   */
  public java.util.List<java.lang.Integer>
      getNoSuperiorIdArrayList() {
    return noSuperiorIdArray_;
  }
  /**
   * <pre>
   *排除经销商上级公司ID（即厂商ID）(针对商家车源)
   * </pre>
   *
   * <code>repeated int32 NoSuperiorIdArray = 187;</code>
   */
  public int getNoSuperiorIdArrayCount() {
    return noSuperiorIdArray_.size();
  }
  /**
   * <pre>
   *排除经销商上级公司ID（即厂商ID）(针对商家车源)
   * </pre>
   *
   * <code>repeated int32 NoSuperiorIdArray = 187;</code>
   */
  public int getNoSuperiorIdArray(int index) {
    return noSuperiorIdArray_.get(index);
  }
  private int noSuperiorIdArrayMemoizedSerializedSize = -1;

  public static final int ISDEALERAUTHORIZED_FIELD_NUMBER = 188;
  private int isDealerAuthorized_;
  /**
   * <pre>
   *是否淘车认证车：1为是，-1为否，0为不限制
   * </pre>
   *
   * <code>int32 IsDealerAuthorized = 188;</code>
   */
  public int getIsDealerAuthorized() {
    return isDealerAuthorized_;
  }

  public static final int LOANFIRSTPAYLOWERARRAY_FIELD_NUMBER = 189;
  private java.util.List<java.lang.Double> loanFirstPayLowerArray_;
  /**
   * <pre>
   *首付款金额范围--最低价(单位"元") 
   * </pre>
   *
   * <code>repeated double LoanFirstPayLowerArray = 189;</code>
   */
  public java.util.List<java.lang.Double>
      getLoanFirstPayLowerArrayList() {
    return loanFirstPayLowerArray_;
  }
  /**
   * <pre>
   *首付款金额范围--最低价(单位"元") 
   * </pre>
   *
   * <code>repeated double LoanFirstPayLowerArray = 189;</code>
   */
  public int getLoanFirstPayLowerArrayCount() {
    return loanFirstPayLowerArray_.size();
  }
  /**
   * <pre>
   *首付款金额范围--最低价(单位"元") 
   * </pre>
   *
   * <code>repeated double LoanFirstPayLowerArray = 189;</code>
   */
  public double getLoanFirstPayLowerArray(int index) {
    return loanFirstPayLowerArray_.get(index);
  }
  private int loanFirstPayLowerArrayMemoizedSerializedSize = -1;

  public static final int LOANFIRSTPAYHIGHARRAY_FIELD_NUMBER = 190;
  private java.util.List<java.lang.Double> loanFirstPayHighArray_;
  /**
   * <pre>
   *首付款金额范围--最高价(单位"元") 
   * </pre>
   *
   * <code>repeated double LoanFirstPayHighArray = 190;</code>
   */
  public java.util.List<java.lang.Double>
      getLoanFirstPayHighArrayList() {
    return loanFirstPayHighArray_;
  }
  /**
   * <pre>
   *首付款金额范围--最高价(单位"元") 
   * </pre>
   *
   * <code>repeated double LoanFirstPayHighArray = 190;</code>
   */
  public int getLoanFirstPayHighArrayCount() {
    return loanFirstPayHighArray_.size();
  }
  /**
   * <pre>
   *首付款金额范围--最高价(单位"元") 
   * </pre>
   *
   * <code>repeated double LoanFirstPayHighArray = 190;</code>
   */
  public double getLoanFirstPayHighArray(int index) {
    return loanFirstPayHighArray_.get(index);
  }
  private int loanFirstPayHighArrayMemoizedSerializedSize = -1;

  public static final int LOANDAILYPAYLOWERARRAY_FIELD_NUMBER = 191;
  private java.util.List<java.lang.Double> loanDailyPayLowerArray_;
  /**
   * <pre>
   *日还款金额范围--最低价(单位"元") 
   * </pre>
   *
   * <code>repeated double LoanDailyPayLowerArray = 191;</code>
   */
  public java.util.List<java.lang.Double>
      getLoanDailyPayLowerArrayList() {
    return loanDailyPayLowerArray_;
  }
  /**
   * <pre>
   *日还款金额范围--最低价(单位"元") 
   * </pre>
   *
   * <code>repeated double LoanDailyPayLowerArray = 191;</code>
   */
  public int getLoanDailyPayLowerArrayCount() {
    return loanDailyPayLowerArray_.size();
  }
  /**
   * <pre>
   *日还款金额范围--最低价(单位"元") 
   * </pre>
   *
   * <code>repeated double LoanDailyPayLowerArray = 191;</code>
   */
  public double getLoanDailyPayLowerArray(int index) {
    return loanDailyPayLowerArray_.get(index);
  }
  private int loanDailyPayLowerArrayMemoizedSerializedSize = -1;

  public static final int LOANDAILYPAYHIGHARRAY_FIELD_NUMBER = 192;
  private java.util.List<java.lang.Double> loanDailyPayHighArray_;
  /**
   * <pre>
   *日还款金额范围--最高价(单位"元") 
   * </pre>
   *
   * <code>repeated double LoanDailyPayHighArray = 192;</code>
   */
  public java.util.List<java.lang.Double>
      getLoanDailyPayHighArrayList() {
    return loanDailyPayHighArray_;
  }
  /**
   * <pre>
   *日还款金额范围--最高价(单位"元") 
   * </pre>
   *
   * <code>repeated double LoanDailyPayHighArray = 192;</code>
   */
  public int getLoanDailyPayHighArrayCount() {
    return loanDailyPayHighArray_.size();
  }
  /**
   * <pre>
   *日还款金额范围--最高价(单位"元") 
   * </pre>
   *
   * <code>repeated double LoanDailyPayHighArray = 192;</code>
   */
  public double getLoanDailyPayHighArray(int index) {
    return loanDailyPayHighArray_.get(index);
  }
  private int loanDailyPayHighArrayMemoizedSerializedSize = -1;

  public static final int LOANMONTHPAYLOWERARRAY_FIELD_NUMBER = 193;
  private java.util.List<java.lang.Double> loanMonthPayLowerArray_;
  /**
   * <pre>
   *月还款金额范围--最低价(单位"元") 
   * </pre>
   *
   * <code>repeated double LoanMonthPayLowerArray = 193;</code>
   */
  public java.util.List<java.lang.Double>
      getLoanMonthPayLowerArrayList() {
    return loanMonthPayLowerArray_;
  }
  /**
   * <pre>
   *月还款金额范围--最低价(单位"元") 
   * </pre>
   *
   * <code>repeated double LoanMonthPayLowerArray = 193;</code>
   */
  public int getLoanMonthPayLowerArrayCount() {
    return loanMonthPayLowerArray_.size();
  }
  /**
   * <pre>
   *月还款金额范围--最低价(单位"元") 
   * </pre>
   *
   * <code>repeated double LoanMonthPayLowerArray = 193;</code>
   */
  public double getLoanMonthPayLowerArray(int index) {
    return loanMonthPayLowerArray_.get(index);
  }
  private int loanMonthPayLowerArrayMemoizedSerializedSize = -1;

  public static final int LOANMONTHPAYHIGHARRAY_FIELD_NUMBER = 194;
  private java.util.List<java.lang.Double> loanMonthPayHighArray_;
  /**
   * <pre>
   *月还款金额范围--最高价(单位"元") 
   * </pre>
   *
   * <code>repeated double LoanMonthPayHighArray = 194;</code>
   */
  public java.util.List<java.lang.Double>
      getLoanMonthPayHighArrayList() {
    return loanMonthPayHighArray_;
  }
  /**
   * <pre>
   *月还款金额范围--最高价(单位"元") 
   * </pre>
   *
   * <code>repeated double LoanMonthPayHighArray = 194;</code>
   */
  public int getLoanMonthPayHighArrayCount() {
    return loanMonthPayHighArray_.size();
  }
  /**
   * <pre>
   *月还款金额范围--最高价(单位"元") 
   * </pre>
   *
   * <code>repeated double LoanMonthPayHighArray = 194;</code>
   */
  public double getLoanMonthPayHighArray(int index) {
    return loanMonthPayHighArray_.get(index);
  }
  private int loanMonthPayHighArrayMemoizedSerializedSize = -1;

  public static final int DISTRICTIDARRAY_FIELD_NUMBER = 195;
  private java.util.List<java.lang.Integer> districtIdArray_;
  /**
   * <pre>
   *车源所在区县Id 20170825
   * </pre>
   *
   * <code>repeated int32 DistrictIdArray = 195;</code>
   */
  public java.util.List<java.lang.Integer>
      getDistrictIdArrayList() {
    return districtIdArray_;
  }
  /**
   * <pre>
   *车源所在区县Id 20170825
   * </pre>
   *
   * <code>repeated int32 DistrictIdArray = 195;</code>
   */
  public int getDistrictIdArrayCount() {
    return districtIdArray_.size();
  }
  /**
   * <pre>
   *车源所在区县Id 20170825
   * </pre>
   *
   * <code>repeated int32 DistrictIdArray = 195;</code>
   */
  public int getDistrictIdArray(int index) {
    return districtIdArray_.get(index);
  }
  private int districtIdArrayMemoizedSerializedSize = -1;

  public static final int INHALETYPEARRAY_FIELD_NUMBER = 196;
  private java.util.List<java.lang.Integer> inhaleTypeArray_;
  /**
   * <pre>
   *进气方式Id 20170825
   * </pre>
   *
   * <code>repeated int32 InhaleTypeArray = 196;</code>
   */
  public java.util.List<java.lang.Integer>
      getInhaleTypeArrayList() {
    return inhaleTypeArray_;
  }
  /**
   * <pre>
   *进气方式Id 20170825
   * </pre>
   *
   * <code>repeated int32 InhaleTypeArray = 196;</code>
   */
  public int getInhaleTypeArrayCount() {
    return inhaleTypeArray_.size();
  }
  /**
   * <pre>
   *进气方式Id 20170825
   * </pre>
   *
   * <code>repeated int32 InhaleTypeArray = 196;</code>
   */
  public int getInhaleTypeArray(int index) {
    return inhaleTypeArray_.get(index);
  }
  private int inhaleTypeArrayMemoizedSerializedSize = -1;

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (commonFlag_ != 0) {
      output.writeInt32(1, commonFlag_);
    }
    if (requestSource_ != 0) {
      output.writeInt32(2, requestSource_);
    }
    for (int i = 0; i < returnFieldArray_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, returnFieldArray_.getRaw(i));
    }
    for (int i = 0; i < orderByFieldArray_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, orderByFieldArray_.getRaw(i));
    }
    if (getOrderByIsDESCArrayList().size() > 0) {
      output.writeUInt32NoTag(42);
      output.writeUInt32NoTag(orderByIsDESCArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < orderByIsDESCArray_.size(); i++) {
      output.writeBoolNoTag(orderByIsDESCArray_.get(i));
    }
    if (sortBoostFlag_ != 0) {
      output.writeInt32(6, sortBoostFlag_);
    }
    if (pageSize_ != 0) {
      output.writeInt32(7, pageSize_);
    }
    if (pageIndex_ != 0) {
      output.writeInt32(8, pageIndex_);
    }
    if (distanceKm_ != 0D) {
      output.writeDouble(9, distanceKm_);
    }
    if (!getLocationBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 10, location_);
    }
    if (isCountSearch_ != false) {
      output.writeBool(11, isCountSearch_);
    }
    if (!getRequestParametersLogBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 12, requestParametersLog_);
    }
    for (int i = 0; i < aggrFieldList_.size(); i++) {
      output.writeMessage(13, aggrFieldList_.get(i));
    }
    if (startNum_ != 0) {
      output.writeInt32(14, startNum_);
    }
    if (getUcarIdArrayList().size() > 0) {
      output.writeUInt32NoTag(810);
      output.writeUInt32NoTag(ucarIdArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < ucarIdArray_.size(); i++) {
      output.writeInt32NoTag(ucarIdArray_.get(i));
    }
    if (getSiteIdList().size() > 0) {
      output.writeUInt32NoTag(818);
      output.writeUInt32NoTag(siteIdMemoizedSerializedSize);
    }
    for (int i = 0; i < siteId_.size(); i++) {
      output.writeInt32NoTag(siteId_.get(i));
    }
    if (getUcarStatusArrayList().size() > 0) {
      output.writeUInt32NoTag(826);
      output.writeUInt32NoTag(ucarStatusArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < ucarStatusArray_.size(); i++) {
      output.writeInt32NoTag(ucarStatusArray_.get(i));
    }
    if (getNoUcarIdArrayList().size() > 0) {
      output.writeUInt32NoTag(834);
      output.writeUInt32NoTag(noUcarIdArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < noUcarIdArray_.size(); i++) {
      output.writeInt32NoTag(noUcarIdArray_.get(i));
    }
    if (isAuthenticated_ != 0) {
      output.writeInt32(105, isAuthenticated_);
    }
    if (source_ != 0) {
      output.writeInt32(106, source_);
    }
    if (getUserIdArrayList().size() > 0) {
      output.writeUInt32NoTag(858);
      output.writeUInt32NoTag(userIdArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < userIdArray_.size(); i++) {
      output.writeInt32NoTag(userIdArray_.get(i));
    }
    if (getNoUserIdArrayList().size() > 0) {
      output.writeUInt32NoTag(866);
      output.writeUInt32NoTag(noUserIdArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < noUserIdArray_.size(); i++) {
      output.writeInt32NoTag(noUserIdArray_.get(i));
    }
    for (int i = 0; i < ucarSerialNumberArray_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 109, ucarSerialNumberArray_.getRaw(i));
    }
    if (!getKeyWordBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 110, keyWord_);
    }
    for (int i = 0; i < colorArray_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 111, colorArray_.getRaw(i));
    }
    if (carSource1L_ != 0) {
      output.writeInt32(112, carSource1L_);
    }
    if (pictureCount_ != 0) {
      output.writeInt32(113, pictureCount_);
    }
    if (getBigAreaIdArrayList().size() > 0) {
      output.writeUInt32NoTag(914);
      output.writeUInt32NoTag(bigAreaIdArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < bigAreaIdArray_.size(); i++) {
      output.writeInt32NoTag(bigAreaIdArray_.get(i));
    }
    if (getProvinceIdArrayList().size() > 0) {
      output.writeUInt32NoTag(922);
      output.writeUInt32NoTag(provinceIdArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < provinceIdArray_.size(); i++) {
      output.writeInt32NoTag(provinceIdArray_.get(i));
    }
    if (getCityIdArrayList().size() > 0) {
      output.writeUInt32NoTag(930);
      output.writeUInt32NoTag(cityIdArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < cityIdArray_.size(); i++) {
      output.writeInt32NoTag(cityIdArray_.get(i));
    }
    if (getNoCityIdArrayList().size() > 0) {
      output.writeUInt32NoTag(938);
      output.writeUInt32NoTag(noCityIdArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < noCityIdArray_.size(); i++) {
      output.writeInt32NoTag(noCityIdArray_.get(i));
    }
    if (getRelateCityArrayList().size() > 0) {
      output.writeUInt32NoTag(946);
      output.writeUInt32NoTag(relateCityArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < relateCityArray_.size(); i++) {
      output.writeInt32NoTag(relateCityArray_.get(i));
    }
    if (getPriceLowerArrayList().size() > 0) {
      output.writeUInt32NoTag(954);
      output.writeUInt32NoTag(priceLowerArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < priceLowerArray_.size(); i++) {
      output.writeDoubleNoTag(priceLowerArray_.get(i));
    }
    if (getPriceHighArrayList().size() > 0) {
      output.writeUInt32NoTag(962);
      output.writeUInt32NoTag(priceHighArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < priceHighArray_.size(); i++) {
      output.writeDoubleNoTag(priceHighArray_.get(i));
    }
    if (getCPriceLowerArrayList().size() > 0) {
      output.writeUInt32NoTag(970);
      output.writeUInt32NoTag(cPriceLowerArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < cPriceLowerArray_.size(); i++) {
      output.writeDoubleNoTag(cPriceLowerArray_.get(i));
    }
    if (getCPriceHighArrayList().size() > 0) {
      output.writeUInt32NoTag(978);
      output.writeUInt32NoTag(cPriceHighArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < cPriceHighArray_.size(); i++) {
      output.writeDoubleNoTag(cPriceHighArray_.get(i));
    }
    if (getB2BPriceLowerArrayList().size() > 0) {
      output.writeUInt32NoTag(986);
      output.writeUInt32NoTag(b2BPriceLowerArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < b2BPriceLowerArray_.size(); i++) {
      output.writeDoubleNoTag(b2BPriceLowerArray_.get(i));
    }
    if (getB2BPriceHighArrayList().size() > 0) {
      output.writeUInt32NoTag(994);
      output.writeUInt32NoTag(b2BPriceHighArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < b2BPriceHighArray_.size(); i++) {
      output.writeDoubleNoTag(b2BPriceHighArray_.get(i));
    }
    if (getCarAgeLowerArrayList().size() > 0) {
      output.writeUInt32NoTag(1002);
      output.writeUInt32NoTag(carAgeLowerArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < carAgeLowerArray_.size(); i++) {
      output.writeInt32NoTag(carAgeLowerArray_.get(i));
    }
    if (getCarAgeHighArrayList().size() > 0) {
      output.writeUInt32NoTag(1010);
      output.writeUInt32NoTag(carAgeHighArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < carAgeHighArray_.size(); i++) {
      output.writeInt32NoTag(carAgeHighArray_.get(i));
    }
    if (getDrivingMileageLowerArrayList().size() > 0) {
      output.writeUInt32NoTag(1018);
      output.writeUInt32NoTag(drivingMileageLowerArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < drivingMileageLowerArray_.size(); i++) {
      output.writeInt32NoTag(drivingMileageLowerArray_.get(i));
    }
    if (getDrivingMileageHighArrayList().size() > 0) {
      output.writeUInt32NoTag(1026);
      output.writeUInt32NoTag(drivingMileageHighArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < drivingMileageHighArray_.size(); i++) {
      output.writeInt32NoTag(drivingMileageHighArray_.get(i));
    }
    if (superiorId_ != 0) {
      output.writeInt32(129, superiorId_);
    }
    if (userType_ != 0) {
      output.writeInt32(130, userType_);
    }
    if (isNeglect_ != 0) {
      output.writeInt32(131, isNeglect_);
    }
    if (isVideo_ != 0) {
      output.writeInt32(132, isVideo_);
    }
    if (isFirstPicTrue_ != 0) {
      output.writeInt32(133, isFirstPicTrue_);
    }
    if (isDealerRecommend_ != 0) {
      output.writeInt32(134, isDealerRecommend_);
    }
    if (getCarSourceTypeArrayList().size() > 0) {
      output.writeUInt32NoTag(1082);
      output.writeUInt32NoTag(carSourceTypeArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < carSourceTypeArray_.size(); i++) {
      output.writeInt32NoTag(carSourceTypeArray_.get(i));
    }
    if (getCarTypeConfigList().size() > 0) {
      output.writeUInt32NoTag(1090);
      output.writeUInt32NoTag(carTypeConfigMemoizedSerializedSize);
    }
    for (int i = 0; i < carTypeConfig_.size(); i++) {
      output.writeInt32NoTag(carTypeConfig_.get(i));
    }
    if (isRecommendGL_ != 0) {
      output.writeInt32(137, isRecommendGL_);
    }
    if (isWarranty_ != 0) {
      output.writeInt32(138, isWarranty_);
    }
    if (getWarrantyTypeArrayList().size() > 0) {
      output.writeUInt32NoTag(1114);
      output.writeUInt32NoTag(warrantyTypeArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < warrantyTypeArray_.size(); i++) {
      output.writeInt32NoTag(warrantyTypeArray_.get(i));
    }
    if (isTop_ != 0) {
      output.writeInt32(140, isTop_);
    }
    if (isActivity_ != 0) {
      output.writeInt32(141, isActivity_);
    }
    if (isBangmai_ != 0) {
      output.writeInt32(142, isBangmai_);
    }
    if (isBangmaiche_ != 0) {
      output.writeInt32(143, isBangmaiche_);
    }
    if (isShowMr_ != 0) {
      output.writeInt32(144, isShowMr_);
    }
    if (isCarId_ != 0) {
      output.writeInt32(145, isCarId_);
    }
    if (isB2B_ != 0) {
      output.writeInt32(146, isB2B_);
    }
    if (getCrmCustomerIdArrayList().size() > 0) {
      output.writeUInt32NoTag(1178);
      output.writeUInt32NoTag(crmCustomerIdArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < crmCustomerIdArray_.size(); i++) {
      output.writeInt32NoTag(crmCustomerIdArray_.get(i));
    }
    if (isCheckReportJson_ != 0) {
      output.writeInt32(148, isCheckReportJson_);
    }
    if (getEnvirStandardArrayList().size() > 0) {
      output.writeUInt32NoTag(1194);
      output.writeUInt32NoTag(envirStandardArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < envirStandardArray_.size(); i++) {
      output.writeInt32NoTag(envirStandardArray_.get(i));
    }
    if (getConsumptionLowerArrayList().size() > 0) {
      output.writeUInt32NoTag(1202);
      output.writeUInt32NoTag(consumptionLowerArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < consumptionLowerArray_.size(); i++) {
      output.writeDoubleNoTag(consumptionLowerArray_.get(i));
    }
    if (getConsumptionHighArrayList().size() > 0) {
      output.writeUInt32NoTag(1210);
      output.writeUInt32NoTag(consumptionHighArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < consumptionHighArray_.size(); i++) {
      output.writeDoubleNoTag(consumptionHighArray_.get(i));
    }
    if (getOilTypeArrayList().size() > 0) {
      output.writeUInt32NoTag(1218);
      output.writeUInt32NoTag(oilTypeArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < oilTypeArray_.size(); i++) {
      output.writeInt32NoTag(oilTypeArray_.get(i));
    }
    if (getEngineLocationArrayList().size() > 0) {
      output.writeUInt32NoTag(1226);
      output.writeUInt32NoTag(engineLocationArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < engineLocationArray_.size(); i++) {
      output.writeInt32NoTag(engineLocationArray_.get(i));
    }
    if (getBodyDoorsLowerArrayList().size() > 0) {
      output.writeUInt32NoTag(1234);
      output.writeUInt32NoTag(bodyDoorsLowerArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < bodyDoorsLowerArray_.size(); i++) {
      output.writeInt32NoTag(bodyDoorsLowerArray_.get(i));
    }
    if (getBodyDoorsHighArrayList().size() > 0) {
      output.writeUInt32NoTag(1242);
      output.writeUInt32NoTag(bodyDoorsHighArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < bodyDoorsHighArray_.size(); i++) {
      output.writeInt32NoTag(bodyDoorsHighArray_.get(i));
    }
    if (getSeatNumLowerArrayList().size() > 0) {
      output.writeUInt32NoTag(1250);
      output.writeUInt32NoTag(seatNumLowerArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < seatNumLowerArray_.size(); i++) {
      output.writeInt32NoTag(seatNumLowerArray_.get(i));
    }
    if (getSeatNumHighArrayList().size() > 0) {
      output.writeUInt32NoTag(1258);
      output.writeUInt32NoTag(seatNumHighArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < seatNumHighArray_.size(); i++) {
      output.writeInt32NoTag(seatNumHighArray_.get(i));
    }
    if (isWagon_ != 0) {
      output.writeInt32(158, isWagon_);
    }
    if (getDriveTypeArrayList().size() > 0) {
      output.writeUInt32NoTag(1274);
      output.writeUInt32NoTag(driveTypeArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < driveTypeArray_.size(); i++) {
      output.writeInt32NoTag(driveTypeArray_.get(i));
    }
    if (getCsBodyFormArrayList().size() > 0) {
      output.writeUInt32NoTag(1282);
      output.writeUInt32NoTag(csBodyFormArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < csBodyFormArray_.size(); i++) {
      output.writeInt32NoTag(csBodyFormArray_.get(i));
    }
    if (getCarLevelArrayList().size() > 0) {
      output.writeUInt32NoTag(1290);
      output.writeUInt32NoTag(carLevelArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < carLevelArray_.size(); i++) {
      output.writeInt32NoTag(carLevelArray_.get(i));
    }
    if (getCarLevelSecondArrayList().size() > 0) {
      output.writeUInt32NoTag(1298);
      output.writeUInt32NoTag(carLevelSecondArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < carLevelSecondArray_.size(); i++) {
      output.writeInt32NoTag(carLevelSecondArray_.get(i));
    }
    for (int i = 0; i < carYearArray_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 163, carYearArray_.getRaw(i));
    }
    if (getMainBrandArrayList().size() > 0) {
      output.writeUInt32NoTag(1314);
      output.writeUInt32NoTag(mainBrandArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < mainBrandArray_.size(); i++) {
      output.writeInt32NoTag(mainBrandArray_.get(i));
    }
    if (getBrandArrayList().size() > 0) {
      output.writeUInt32NoTag(1322);
      output.writeUInt32NoTag(brandArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < brandArray_.size(); i++) {
      output.writeInt32NoTag(brandArray_.get(i));
    }
    if (getCarSerialArrayList().size() > 0) {
      output.writeUInt32NoTag(1330);
      output.writeUInt32NoTag(carSerialArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < carSerialArray_.size(); i++) {
      output.writeInt32NoTag(carSerialArray_.get(i));
    }
    if (getCarIDArrayList().size() > 0) {
      output.writeUInt32NoTag(1338);
      output.writeUInt32NoTag(carIDArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < carIDArray_.size(); i++) {
      output.writeInt32NoTag(carIDArray_.get(i));
    }
    if (getGearBoxTypeArrayList().size() > 0) {
      output.writeUInt32NoTag(1346);
      output.writeUInt32NoTag(gearBoxTypeArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < gearBoxTypeArray_.size(); i++) {
      output.writeInt32NoTag(gearBoxTypeArray_.get(i));
    }
    if (getExhaustLevelLowerArrayList().size() > 0) {
      output.writeUInt32NoTag(1354);
      output.writeUInt32NoTag(exhaustLevelLowerArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < exhaustLevelLowerArray_.size(); i++) {
      output.writeDoubleNoTag(exhaustLevelLowerArray_.get(i));
    }
    if (getExhaustLevelHighArrayList().size() > 0) {
      output.writeUInt32NoTag(1362);
      output.writeUInt32NoTag(exhaustLevelHighArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < exhaustLevelHighArray_.size(); i++) {
      output.writeDoubleNoTag(exhaustLevelHighArray_.get(i));
    }
    if (getExhaustLevelArrayList().size() > 0) {
      output.writeUInt32NoTag(1370);
      output.writeUInt32NoTag(exhaustLevelArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < exhaustLevelArray_.size(); i++) {
      output.writeInt32NoTag(exhaustLevelArray_.get(i));
    }
    if (getCountryArrayList().size() > 0) {
      output.writeUInt32NoTag(1378);
      output.writeUInt32NoTag(countryArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < countryArray_.size(); i++) {
      output.writeInt32NoTag(countryArray_.get(i));
    }
    if (getBrandAttrArrayList().size() > 0) {
      output.writeUInt32NoTag(1386);
      output.writeUInt32NoTag(brandAttrArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < brandAttrArray_.size(); i++) {
      output.writeInt32NoTag(brandAttrArray_.get(i));
    }
    if (adCity_ != 0) {
      output.writeInt32(174, adCity_);
    }
    if (adCondition_ != 0) {
      output.writeInt32(175, adCondition_);
    }
    if (carBenefitRateLower_ != 0D) {
      output.writeDouble(176, carBenefitRateLower_);
    }
    if (carBenefitRateHigh_ != 0D) {
      output.writeDouble(177, carBenefitRateHigh_);
    }
    if (callConnectRateLower_ != 0D) {
      output.writeDouble(178, callConnectRateLower_);
    }
    if (callConnectRateHigh_ != 0D) {
      output.writeDouble(179, callConnectRateHigh_);
    }
    for (int i = 0; i < vinCodeArray_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 180, vinCodeArray_.getRaw(i));
    }
    if (getLicenseProvinceIdArrayList().size() > 0) {
      output.writeUInt32NoTag(1450);
      output.writeUInt32NoTag(licenseProvinceIdArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < licenseProvinceIdArray_.size(); i++) {
      output.writeInt32NoTag(licenseProvinceIdArray_.get(i));
    }
    if (getLicenseCityIdArrayList().size() > 0) {
      output.writeUInt32NoTag(1458);
      output.writeUInt32NoTag(licenseCityIdArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < licenseCityIdArray_.size(); i++) {
      output.writeInt32NoTag(licenseCityIdArray_.get(i));
    }
    if (isLicensed_ != 0) {
      output.writeInt32(183, isLicensed_);
    }
    if (getNoCrmCustomerIdArrayList().size() > 0) {
      output.writeUInt32NoTag(1474);
      output.writeUInt32NoTag(noCrmCustomerIdArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < noCrmCustomerIdArray_.size(); i++) {
      output.writeInt32NoTag(noCrmCustomerIdArray_.get(i));
    }
    if (carPvMin_ != 0) {
      output.writeInt32(185, carPvMin_);
    }
    if (carPvMax_ != 0) {
      output.writeInt32(186, carPvMax_);
    }
    if (getNoSuperiorIdArrayList().size() > 0) {
      output.writeUInt32NoTag(1498);
      output.writeUInt32NoTag(noSuperiorIdArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < noSuperiorIdArray_.size(); i++) {
      output.writeInt32NoTag(noSuperiorIdArray_.get(i));
    }
    if (isDealerAuthorized_ != 0) {
      output.writeInt32(188, isDealerAuthorized_);
    }
    if (getLoanFirstPayLowerArrayList().size() > 0) {
      output.writeUInt32NoTag(1514);
      output.writeUInt32NoTag(loanFirstPayLowerArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < loanFirstPayLowerArray_.size(); i++) {
      output.writeDoubleNoTag(loanFirstPayLowerArray_.get(i));
    }
    if (getLoanFirstPayHighArrayList().size() > 0) {
      output.writeUInt32NoTag(1522);
      output.writeUInt32NoTag(loanFirstPayHighArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < loanFirstPayHighArray_.size(); i++) {
      output.writeDoubleNoTag(loanFirstPayHighArray_.get(i));
    }
    if (getLoanDailyPayLowerArrayList().size() > 0) {
      output.writeUInt32NoTag(1530);
      output.writeUInt32NoTag(loanDailyPayLowerArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < loanDailyPayLowerArray_.size(); i++) {
      output.writeDoubleNoTag(loanDailyPayLowerArray_.get(i));
    }
    if (getLoanDailyPayHighArrayList().size() > 0) {
      output.writeUInt32NoTag(1538);
      output.writeUInt32NoTag(loanDailyPayHighArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < loanDailyPayHighArray_.size(); i++) {
      output.writeDoubleNoTag(loanDailyPayHighArray_.get(i));
    }
    if (getLoanMonthPayLowerArrayList().size() > 0) {
      output.writeUInt32NoTag(1546);
      output.writeUInt32NoTag(loanMonthPayLowerArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < loanMonthPayLowerArray_.size(); i++) {
      output.writeDoubleNoTag(loanMonthPayLowerArray_.get(i));
    }
    if (getLoanMonthPayHighArrayList().size() > 0) {
      output.writeUInt32NoTag(1554);
      output.writeUInt32NoTag(loanMonthPayHighArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < loanMonthPayHighArray_.size(); i++) {
      output.writeDoubleNoTag(loanMonthPayHighArray_.get(i));
    }
    if (getDistrictIdArrayList().size() > 0) {
      output.writeUInt32NoTag(1562);
      output.writeUInt32NoTag(districtIdArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < districtIdArray_.size(); i++) {
      output.writeInt32NoTag(districtIdArray_.get(i));
    }
    if (getInhaleTypeArrayList().size() > 0) {
      output.writeUInt32NoTag(1570);
      output.writeUInt32NoTag(inhaleTypeArrayMemoizedSerializedSize);
    }
    for (int i = 0; i < inhaleTypeArray_.size(); i++) {
      output.writeInt32NoTag(inhaleTypeArray_.get(i));
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (commonFlag_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, commonFlag_);
    }
    if (requestSource_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, requestSource_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < returnFieldArray_.size(); i++) {
        dataSize += computeStringSizeNoTag(returnFieldArray_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getReturnFieldArrayList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < orderByFieldArray_.size(); i++) {
        dataSize += computeStringSizeNoTag(orderByFieldArray_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getOrderByFieldArrayList().size();
    }
    {
      int dataSize = 0;
      dataSize = 1 * getOrderByIsDESCArrayList().size();
      size += dataSize;
      if (!getOrderByIsDESCArrayList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      orderByIsDESCArrayMemoizedSerializedSize = dataSize;
    }
    if (sortBoostFlag_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, sortBoostFlag_);
    }
    if (pageSize_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, pageSize_);
    }
    if (pageIndex_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, pageIndex_);
    }
    if (distanceKm_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(9, distanceKm_);
    }
    if (!getLocationBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, location_);
    }
    if (isCountSearch_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(11, isCountSearch_);
    }
    if (!getRequestParametersLogBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, requestParametersLog_);
    }
    for (int i = 0; i < aggrFieldList_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, aggrFieldList_.get(i));
    }
    if (startNum_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(14, startNum_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < ucarIdArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(ucarIdArray_.get(i));
      }
      size += dataSize;
      if (!getUcarIdArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      ucarIdArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < siteId_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(siteId_.get(i));
      }
      size += dataSize;
      if (!getSiteIdList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      siteIdMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < ucarStatusArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(ucarStatusArray_.get(i));
      }
      size += dataSize;
      if (!getUcarStatusArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      ucarStatusArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < noUcarIdArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(noUcarIdArray_.get(i));
      }
      size += dataSize;
      if (!getNoUcarIdArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      noUcarIdArrayMemoizedSerializedSize = dataSize;
    }
    if (isAuthenticated_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(105, isAuthenticated_);
    }
    if (source_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(106, source_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < userIdArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(userIdArray_.get(i));
      }
      size += dataSize;
      if (!getUserIdArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      userIdArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < noUserIdArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(noUserIdArray_.get(i));
      }
      size += dataSize;
      if (!getNoUserIdArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      noUserIdArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < ucarSerialNumberArray_.size(); i++) {
        dataSize += computeStringSizeNoTag(ucarSerialNumberArray_.getRaw(i));
      }
      size += dataSize;
      size += 2 * getUcarSerialNumberArrayList().size();
    }
    if (!getKeyWordBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(110, keyWord_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < colorArray_.size(); i++) {
        dataSize += computeStringSizeNoTag(colorArray_.getRaw(i));
      }
      size += dataSize;
      size += 2 * getColorArrayList().size();
    }
    if (carSource1L_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(112, carSource1L_);
    }
    if (pictureCount_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(113, pictureCount_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < bigAreaIdArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(bigAreaIdArray_.get(i));
      }
      size += dataSize;
      if (!getBigAreaIdArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      bigAreaIdArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < provinceIdArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(provinceIdArray_.get(i));
      }
      size += dataSize;
      if (!getProvinceIdArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      provinceIdArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < cityIdArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(cityIdArray_.get(i));
      }
      size += dataSize;
      if (!getCityIdArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      cityIdArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < noCityIdArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(noCityIdArray_.get(i));
      }
      size += dataSize;
      if (!getNoCityIdArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      noCityIdArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < relateCityArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(relateCityArray_.get(i));
      }
      size += dataSize;
      if (!getRelateCityArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      relateCityArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 8 * getPriceLowerArrayList().size();
      size += dataSize;
      if (!getPriceLowerArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      priceLowerArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 8 * getPriceHighArrayList().size();
      size += dataSize;
      if (!getPriceHighArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      priceHighArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 8 * getCPriceLowerArrayList().size();
      size += dataSize;
      if (!getCPriceLowerArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      cPriceLowerArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 8 * getCPriceHighArrayList().size();
      size += dataSize;
      if (!getCPriceHighArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      cPriceHighArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 8 * getB2BPriceLowerArrayList().size();
      size += dataSize;
      if (!getB2BPriceLowerArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      b2BPriceLowerArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 8 * getB2BPriceHighArrayList().size();
      size += dataSize;
      if (!getB2BPriceHighArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      b2BPriceHighArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < carAgeLowerArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(carAgeLowerArray_.get(i));
      }
      size += dataSize;
      if (!getCarAgeLowerArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      carAgeLowerArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < carAgeHighArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(carAgeHighArray_.get(i));
      }
      size += dataSize;
      if (!getCarAgeHighArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      carAgeHighArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < drivingMileageLowerArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(drivingMileageLowerArray_.get(i));
      }
      size += dataSize;
      if (!getDrivingMileageLowerArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      drivingMileageLowerArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < drivingMileageHighArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(drivingMileageHighArray_.get(i));
      }
      size += dataSize;
      if (!getDrivingMileageHighArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      drivingMileageHighArrayMemoizedSerializedSize = dataSize;
    }
    if (superiorId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(129, superiorId_);
    }
    if (userType_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(130, userType_);
    }
    if (isNeglect_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(131, isNeglect_);
    }
    if (isVideo_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(132, isVideo_);
    }
    if (isFirstPicTrue_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(133, isFirstPicTrue_);
    }
    if (isDealerRecommend_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(134, isDealerRecommend_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < carSourceTypeArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(carSourceTypeArray_.get(i));
      }
      size += dataSize;
      if (!getCarSourceTypeArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      carSourceTypeArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < carTypeConfig_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(carTypeConfig_.get(i));
      }
      size += dataSize;
      if (!getCarTypeConfigList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      carTypeConfigMemoizedSerializedSize = dataSize;
    }
    if (isRecommendGL_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(137, isRecommendGL_);
    }
    if (isWarranty_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(138, isWarranty_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < warrantyTypeArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(warrantyTypeArray_.get(i));
      }
      size += dataSize;
      if (!getWarrantyTypeArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      warrantyTypeArrayMemoizedSerializedSize = dataSize;
    }
    if (isTop_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(140, isTop_);
    }
    if (isActivity_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(141, isActivity_);
    }
    if (isBangmai_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(142, isBangmai_);
    }
    if (isBangmaiche_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(143, isBangmaiche_);
    }
    if (isShowMr_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(144, isShowMr_);
    }
    if (isCarId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(145, isCarId_);
    }
    if (isB2B_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(146, isB2B_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < crmCustomerIdArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(crmCustomerIdArray_.get(i));
      }
      size += dataSize;
      if (!getCrmCustomerIdArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      crmCustomerIdArrayMemoizedSerializedSize = dataSize;
    }
    if (isCheckReportJson_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(148, isCheckReportJson_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < envirStandardArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(envirStandardArray_.get(i));
      }
      size += dataSize;
      if (!getEnvirStandardArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      envirStandardArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 8 * getConsumptionLowerArrayList().size();
      size += dataSize;
      if (!getConsumptionLowerArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      consumptionLowerArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 8 * getConsumptionHighArrayList().size();
      size += dataSize;
      if (!getConsumptionHighArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      consumptionHighArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < oilTypeArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(oilTypeArray_.get(i));
      }
      size += dataSize;
      if (!getOilTypeArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      oilTypeArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < engineLocationArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(engineLocationArray_.get(i));
      }
      size += dataSize;
      if (!getEngineLocationArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      engineLocationArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < bodyDoorsLowerArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(bodyDoorsLowerArray_.get(i));
      }
      size += dataSize;
      if (!getBodyDoorsLowerArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      bodyDoorsLowerArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < bodyDoorsHighArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(bodyDoorsHighArray_.get(i));
      }
      size += dataSize;
      if (!getBodyDoorsHighArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      bodyDoorsHighArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < seatNumLowerArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(seatNumLowerArray_.get(i));
      }
      size += dataSize;
      if (!getSeatNumLowerArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      seatNumLowerArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < seatNumHighArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(seatNumHighArray_.get(i));
      }
      size += dataSize;
      if (!getSeatNumHighArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      seatNumHighArrayMemoizedSerializedSize = dataSize;
    }
    if (isWagon_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(158, isWagon_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < driveTypeArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(driveTypeArray_.get(i));
      }
      size += dataSize;
      if (!getDriveTypeArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      driveTypeArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < csBodyFormArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(csBodyFormArray_.get(i));
      }
      size += dataSize;
      if (!getCsBodyFormArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      csBodyFormArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < carLevelArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(carLevelArray_.get(i));
      }
      size += dataSize;
      if (!getCarLevelArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      carLevelArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < carLevelSecondArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(carLevelSecondArray_.get(i));
      }
      size += dataSize;
      if (!getCarLevelSecondArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      carLevelSecondArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < carYearArray_.size(); i++) {
        dataSize += computeStringSizeNoTag(carYearArray_.getRaw(i));
      }
      size += dataSize;
      size += 2 * getCarYearArrayList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < mainBrandArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(mainBrandArray_.get(i));
      }
      size += dataSize;
      if (!getMainBrandArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      mainBrandArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < brandArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(brandArray_.get(i));
      }
      size += dataSize;
      if (!getBrandArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      brandArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < carSerialArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(carSerialArray_.get(i));
      }
      size += dataSize;
      if (!getCarSerialArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      carSerialArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < carIDArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(carIDArray_.get(i));
      }
      size += dataSize;
      if (!getCarIDArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      carIDArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < gearBoxTypeArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(gearBoxTypeArray_.get(i));
      }
      size += dataSize;
      if (!getGearBoxTypeArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      gearBoxTypeArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 8 * getExhaustLevelLowerArrayList().size();
      size += dataSize;
      if (!getExhaustLevelLowerArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      exhaustLevelLowerArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 8 * getExhaustLevelHighArrayList().size();
      size += dataSize;
      if (!getExhaustLevelHighArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      exhaustLevelHighArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < exhaustLevelArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(exhaustLevelArray_.get(i));
      }
      size += dataSize;
      if (!getExhaustLevelArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      exhaustLevelArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < countryArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(countryArray_.get(i));
      }
      size += dataSize;
      if (!getCountryArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      countryArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < brandAttrArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(brandAttrArray_.get(i));
      }
      size += dataSize;
      if (!getBrandAttrArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      brandAttrArrayMemoizedSerializedSize = dataSize;
    }
    if (adCity_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(174, adCity_);
    }
    if (adCondition_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(175, adCondition_);
    }
    if (carBenefitRateLower_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(176, carBenefitRateLower_);
    }
    if (carBenefitRateHigh_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(177, carBenefitRateHigh_);
    }
    if (callConnectRateLower_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(178, callConnectRateLower_);
    }
    if (callConnectRateHigh_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(179, callConnectRateHigh_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < vinCodeArray_.size(); i++) {
        dataSize += computeStringSizeNoTag(vinCodeArray_.getRaw(i));
      }
      size += dataSize;
      size += 2 * getVinCodeArrayList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < licenseProvinceIdArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(licenseProvinceIdArray_.get(i));
      }
      size += dataSize;
      if (!getLicenseProvinceIdArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      licenseProvinceIdArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < licenseCityIdArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(licenseCityIdArray_.get(i));
      }
      size += dataSize;
      if (!getLicenseCityIdArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      licenseCityIdArrayMemoizedSerializedSize = dataSize;
    }
    if (isLicensed_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(183, isLicensed_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < noCrmCustomerIdArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(noCrmCustomerIdArray_.get(i));
      }
      size += dataSize;
      if (!getNoCrmCustomerIdArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      noCrmCustomerIdArrayMemoizedSerializedSize = dataSize;
    }
    if (carPvMin_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(185, carPvMin_);
    }
    if (carPvMax_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(186, carPvMax_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < noSuperiorIdArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(noSuperiorIdArray_.get(i));
      }
      size += dataSize;
      if (!getNoSuperiorIdArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      noSuperiorIdArrayMemoizedSerializedSize = dataSize;
    }
    if (isDealerAuthorized_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(188, isDealerAuthorized_);
    }
    {
      int dataSize = 0;
      dataSize = 8 * getLoanFirstPayLowerArrayList().size();
      size += dataSize;
      if (!getLoanFirstPayLowerArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      loanFirstPayLowerArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 8 * getLoanFirstPayHighArrayList().size();
      size += dataSize;
      if (!getLoanFirstPayHighArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      loanFirstPayHighArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 8 * getLoanDailyPayLowerArrayList().size();
      size += dataSize;
      if (!getLoanDailyPayLowerArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      loanDailyPayLowerArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 8 * getLoanDailyPayHighArrayList().size();
      size += dataSize;
      if (!getLoanDailyPayHighArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      loanDailyPayHighArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 8 * getLoanMonthPayLowerArrayList().size();
      size += dataSize;
      if (!getLoanMonthPayLowerArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      loanMonthPayLowerArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 8 * getLoanMonthPayHighArrayList().size();
      size += dataSize;
      if (!getLoanMonthPayHighArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      loanMonthPayHighArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < districtIdArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(districtIdArray_.get(i));
      }
      size += dataSize;
      if (!getDistrictIdArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      districtIdArrayMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < inhaleTypeArray_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(inhaleTypeArray_.get(i));
      }
      size += dataSize;
      if (!getInhaleTypeArrayList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      inhaleTypeArrayMemoizedSerializedSize = dataSize;
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof TaocheES.SearchCondition)) {
      return super.equals(obj);
    }
    TaocheES.SearchCondition other = (TaocheES.SearchCondition) obj;

    boolean result = true;
    result = result && (getCommonFlag()
        == other.getCommonFlag());
    result = result && (getRequestSource()
        == other.getRequestSource());
    result = result && getReturnFieldArrayList()
        .equals(other.getReturnFieldArrayList());
    result = result && getOrderByFieldArrayList()
        .equals(other.getOrderByFieldArrayList());
    result = result && getOrderByIsDESCArrayList()
        .equals(other.getOrderByIsDESCArrayList());
    result = result && (getSortBoostFlag()
        == other.getSortBoostFlag());
    result = result && (getPageSize()
        == other.getPageSize());
    result = result && (getPageIndex()
        == other.getPageIndex());
    result = result && (
        java.lang.Double.doubleToLongBits(getDistanceKm())
        == java.lang.Double.doubleToLongBits(
            other.getDistanceKm()));
    result = result && getLocation()
        .equals(other.getLocation());
    result = result && (getIsCountSearch()
        == other.getIsCountSearch());
    result = result && getRequestParametersLog()
        .equals(other.getRequestParametersLog());
    result = result && getAggrFieldListList()
        .equals(other.getAggrFieldListList());
    result = result && (getStartNum()
        == other.getStartNum());
    result = result && getUcarIdArrayList()
        .equals(other.getUcarIdArrayList());
    result = result && getSiteIdList()
        .equals(other.getSiteIdList());
    result = result && getUcarStatusArrayList()
        .equals(other.getUcarStatusArrayList());
    result = result && getNoUcarIdArrayList()
        .equals(other.getNoUcarIdArrayList());
    result = result && (getIsAuthenticated()
        == other.getIsAuthenticated());
    result = result && (getSource()
        == other.getSource());
    result = result && getUserIdArrayList()
        .equals(other.getUserIdArrayList());
    result = result && getNoUserIdArrayList()
        .equals(other.getNoUserIdArrayList());
    result = result && getUcarSerialNumberArrayList()
        .equals(other.getUcarSerialNumberArrayList());
    result = result && getKeyWord()
        .equals(other.getKeyWord());
    result = result && getColorArrayList()
        .equals(other.getColorArrayList());
    result = result && (getCarSource1L()
        == other.getCarSource1L());
    result = result && (getPictureCount()
        == other.getPictureCount());
    result = result && getBigAreaIdArrayList()
        .equals(other.getBigAreaIdArrayList());
    result = result && getProvinceIdArrayList()
        .equals(other.getProvinceIdArrayList());
    result = result && getCityIdArrayList()
        .equals(other.getCityIdArrayList());
    result = result && getNoCityIdArrayList()
        .equals(other.getNoCityIdArrayList());
    result = result && getRelateCityArrayList()
        .equals(other.getRelateCityArrayList());
    result = result && getPriceLowerArrayList()
        .equals(other.getPriceLowerArrayList());
    result = result && getPriceHighArrayList()
        .equals(other.getPriceHighArrayList());
    result = result && getCPriceLowerArrayList()
        .equals(other.getCPriceLowerArrayList());
    result = result && getCPriceHighArrayList()
        .equals(other.getCPriceHighArrayList());
    result = result && getB2BPriceLowerArrayList()
        .equals(other.getB2BPriceLowerArrayList());
    result = result && getB2BPriceHighArrayList()
        .equals(other.getB2BPriceHighArrayList());
    result = result && getCarAgeLowerArrayList()
        .equals(other.getCarAgeLowerArrayList());
    result = result && getCarAgeHighArrayList()
        .equals(other.getCarAgeHighArrayList());
    result = result && getDrivingMileageLowerArrayList()
        .equals(other.getDrivingMileageLowerArrayList());
    result = result && getDrivingMileageHighArrayList()
        .equals(other.getDrivingMileageHighArrayList());
    result = result && (getSuperiorId()
        == other.getSuperiorId());
    result = result && (getUserType()
        == other.getUserType());
    result = result && (getIsNeglect()
        == other.getIsNeglect());
    result = result && (getIsVideo()
        == other.getIsVideo());
    result = result && (getIsFirstPicTrue()
        == other.getIsFirstPicTrue());
    result = result && (getIsDealerRecommend()
        == other.getIsDealerRecommend());
    result = result && getCarSourceTypeArrayList()
        .equals(other.getCarSourceTypeArrayList());
    result = result && getCarTypeConfigList()
        .equals(other.getCarTypeConfigList());
    result = result && (getIsRecommendGL()
        == other.getIsRecommendGL());
    result = result && (getIsWarranty()
        == other.getIsWarranty());
    result = result && getWarrantyTypeArrayList()
        .equals(other.getWarrantyTypeArrayList());
    result = result && (getIsTop()
        == other.getIsTop());
    result = result && (getIsActivity()
        == other.getIsActivity());
    result = result && (getIsBangmai()
        == other.getIsBangmai());
    result = result && (getIsBangmaiche()
        == other.getIsBangmaiche());
    result = result && (getIsShowMr()
        == other.getIsShowMr());
    result = result && (getIsCarId()
        == other.getIsCarId());
    result = result && (getIsB2B()
        == other.getIsB2B());
    result = result && getCrmCustomerIdArrayList()
        .equals(other.getCrmCustomerIdArrayList());
    result = result && (getIsCheckReportJson()
        == other.getIsCheckReportJson());
    result = result && getEnvirStandardArrayList()
        .equals(other.getEnvirStandardArrayList());
    result = result && getConsumptionLowerArrayList()
        .equals(other.getConsumptionLowerArrayList());
    result = result && getConsumptionHighArrayList()
        .equals(other.getConsumptionHighArrayList());
    result = result && getOilTypeArrayList()
        .equals(other.getOilTypeArrayList());
    result = result && getEngineLocationArrayList()
        .equals(other.getEngineLocationArrayList());
    result = result && getBodyDoorsLowerArrayList()
        .equals(other.getBodyDoorsLowerArrayList());
    result = result && getBodyDoorsHighArrayList()
        .equals(other.getBodyDoorsHighArrayList());
    result = result && getSeatNumLowerArrayList()
        .equals(other.getSeatNumLowerArrayList());
    result = result && getSeatNumHighArrayList()
        .equals(other.getSeatNumHighArrayList());
    result = result && (getIsWagon()
        == other.getIsWagon());
    result = result && getDriveTypeArrayList()
        .equals(other.getDriveTypeArrayList());
    result = result && getCsBodyFormArrayList()
        .equals(other.getCsBodyFormArrayList());
    result = result && getCarLevelArrayList()
        .equals(other.getCarLevelArrayList());
    result = result && getCarLevelSecondArrayList()
        .equals(other.getCarLevelSecondArrayList());
    result = result && getCarYearArrayList()
        .equals(other.getCarYearArrayList());
    result = result && getMainBrandArrayList()
        .equals(other.getMainBrandArrayList());
    result = result && getBrandArrayList()
        .equals(other.getBrandArrayList());
    result = result && getCarSerialArrayList()
        .equals(other.getCarSerialArrayList());
    result = result && getCarIDArrayList()
        .equals(other.getCarIDArrayList());
    result = result && getGearBoxTypeArrayList()
        .equals(other.getGearBoxTypeArrayList());
    result = result && getExhaustLevelLowerArrayList()
        .equals(other.getExhaustLevelLowerArrayList());
    result = result && getExhaustLevelHighArrayList()
        .equals(other.getExhaustLevelHighArrayList());
    result = result && getExhaustLevelArrayList()
        .equals(other.getExhaustLevelArrayList());
    result = result && getCountryArrayList()
        .equals(other.getCountryArrayList());
    result = result && getBrandAttrArrayList()
        .equals(other.getBrandAttrArrayList());
    result = result && (getAdCity()
        == other.getAdCity());
    result = result && (getAdCondition()
        == other.getAdCondition());
    result = result && (
        java.lang.Double.doubleToLongBits(getCarBenefitRateLower())
        == java.lang.Double.doubleToLongBits(
            other.getCarBenefitRateLower()));
    result = result && (
        java.lang.Double.doubleToLongBits(getCarBenefitRateHigh())
        == java.lang.Double.doubleToLongBits(
            other.getCarBenefitRateHigh()));
    result = result && (
        java.lang.Double.doubleToLongBits(getCallConnectRateLower())
        == java.lang.Double.doubleToLongBits(
            other.getCallConnectRateLower()));
    result = result && (
        java.lang.Double.doubleToLongBits(getCallConnectRateHigh())
        == java.lang.Double.doubleToLongBits(
            other.getCallConnectRateHigh()));
    result = result && getVinCodeArrayList()
        .equals(other.getVinCodeArrayList());
    result = result && getLicenseProvinceIdArrayList()
        .equals(other.getLicenseProvinceIdArrayList());
    result = result && getLicenseCityIdArrayList()
        .equals(other.getLicenseCityIdArrayList());
    result = result && (getIsLicensed()
        == other.getIsLicensed());
    result = result && getNoCrmCustomerIdArrayList()
        .equals(other.getNoCrmCustomerIdArrayList());
    result = result && (getCarPvMin()
        == other.getCarPvMin());
    result = result && (getCarPvMax()
        == other.getCarPvMax());
    result = result && getNoSuperiorIdArrayList()
        .equals(other.getNoSuperiorIdArrayList());
    result = result && (getIsDealerAuthorized()
        == other.getIsDealerAuthorized());
    result = result && getLoanFirstPayLowerArrayList()
        .equals(other.getLoanFirstPayLowerArrayList());
    result = result && getLoanFirstPayHighArrayList()
        .equals(other.getLoanFirstPayHighArrayList());
    result = result && getLoanDailyPayLowerArrayList()
        .equals(other.getLoanDailyPayLowerArrayList());
    result = result && getLoanDailyPayHighArrayList()
        .equals(other.getLoanDailyPayHighArrayList());
    result = result && getLoanMonthPayLowerArrayList()
        .equals(other.getLoanMonthPayLowerArrayList());
    result = result && getLoanMonthPayHighArrayList()
        .equals(other.getLoanMonthPayHighArrayList());
    result = result && getDistrictIdArrayList()
        .equals(other.getDistrictIdArrayList());
    result = result && getInhaleTypeArrayList()
        .equals(other.getInhaleTypeArrayList());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + COMMONFLAG_FIELD_NUMBER;
    hash = (53 * hash) + getCommonFlag();
    hash = (37 * hash) + REQUESTSOURCE_FIELD_NUMBER;
    hash = (53 * hash) + getRequestSource();
    if (getReturnFieldArrayCount() > 0) {
      hash = (37 * hash) + RETURNFIELDARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getReturnFieldArrayList().hashCode();
    }
    if (getOrderByFieldArrayCount() > 0) {
      hash = (37 * hash) + ORDERBYFIELDARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getOrderByFieldArrayList().hashCode();
    }
    if (getOrderByIsDESCArrayCount() > 0) {
      hash = (37 * hash) + ORDERBYISDESCARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getOrderByIsDESCArrayList().hashCode();
    }
    hash = (37 * hash) + SORTBOOSTFLAG_FIELD_NUMBER;
    hash = (53 * hash) + getSortBoostFlag();
    hash = (37 * hash) + PAGESIZE_FIELD_NUMBER;
    hash = (53 * hash) + getPageSize();
    hash = (37 * hash) + PAGEINDEX_FIELD_NUMBER;
    hash = (53 * hash) + getPageIndex();
    hash = (37 * hash) + DISTANCEKM_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getDistanceKm()));
    hash = (37 * hash) + LOCATION_FIELD_NUMBER;
    hash = (53 * hash) + getLocation().hashCode();
    hash = (37 * hash) + ISCOUNTSEARCH_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIsCountSearch());
    hash = (37 * hash) + REQUESTPARAMETERSLOG_FIELD_NUMBER;
    hash = (53 * hash) + getRequestParametersLog().hashCode();
    if (getAggrFieldListCount() > 0) {
      hash = (37 * hash) + AGGRFIELDLIST_FIELD_NUMBER;
      hash = (53 * hash) + getAggrFieldListList().hashCode();
    }
    hash = (37 * hash) + STARTNUM_FIELD_NUMBER;
    hash = (53 * hash) + getStartNum();
    if (getUcarIdArrayCount() > 0) {
      hash = (37 * hash) + UCARIDARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getUcarIdArrayList().hashCode();
    }
    if (getSiteIdCount() > 0) {
      hash = (37 * hash) + SITEID_FIELD_NUMBER;
      hash = (53 * hash) + getSiteIdList().hashCode();
    }
    if (getUcarStatusArrayCount() > 0) {
      hash = (37 * hash) + UCARSTATUSARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getUcarStatusArrayList().hashCode();
    }
    if (getNoUcarIdArrayCount() > 0) {
      hash = (37 * hash) + NOUCARIDARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getNoUcarIdArrayList().hashCode();
    }
    hash = (37 * hash) + ISAUTHENTICATED_FIELD_NUMBER;
    hash = (53 * hash) + getIsAuthenticated();
    hash = (37 * hash) + SOURCE_FIELD_NUMBER;
    hash = (53 * hash) + getSource();
    if (getUserIdArrayCount() > 0) {
      hash = (37 * hash) + USERIDARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getUserIdArrayList().hashCode();
    }
    if (getNoUserIdArrayCount() > 0) {
      hash = (37 * hash) + NOUSERIDARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getNoUserIdArrayList().hashCode();
    }
    if (getUcarSerialNumberArrayCount() > 0) {
      hash = (37 * hash) + UCARSERIALNUMBERARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getUcarSerialNumberArrayList().hashCode();
    }
    hash = (37 * hash) + KEYWORD_FIELD_NUMBER;
    hash = (53 * hash) + getKeyWord().hashCode();
    if (getColorArrayCount() > 0) {
      hash = (37 * hash) + COLORARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getColorArrayList().hashCode();
    }
    hash = (37 * hash) + CARSOURCE1L_FIELD_NUMBER;
    hash = (53 * hash) + getCarSource1L();
    hash = (37 * hash) + PICTURECOUNT_FIELD_NUMBER;
    hash = (53 * hash) + getPictureCount();
    if (getBigAreaIdArrayCount() > 0) {
      hash = (37 * hash) + BIGAREAIDARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getBigAreaIdArrayList().hashCode();
    }
    if (getProvinceIdArrayCount() > 0) {
      hash = (37 * hash) + PROVINCEIDARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getProvinceIdArrayList().hashCode();
    }
    if (getCityIdArrayCount() > 0) {
      hash = (37 * hash) + CITYIDARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getCityIdArrayList().hashCode();
    }
    if (getNoCityIdArrayCount() > 0) {
      hash = (37 * hash) + NOCITYIDARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getNoCityIdArrayList().hashCode();
    }
    if (getRelateCityArrayCount() > 0) {
      hash = (37 * hash) + RELATECITYARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getRelateCityArrayList().hashCode();
    }
    if (getPriceLowerArrayCount() > 0) {
      hash = (37 * hash) + PRICELOWERARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getPriceLowerArrayList().hashCode();
    }
    if (getPriceHighArrayCount() > 0) {
      hash = (37 * hash) + PRICEHIGHARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getPriceHighArrayList().hashCode();
    }
    if (getCPriceLowerArrayCount() > 0) {
      hash = (37 * hash) + CPRICELOWERARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getCPriceLowerArrayList().hashCode();
    }
    if (getCPriceHighArrayCount() > 0) {
      hash = (37 * hash) + CPRICEHIGHARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getCPriceHighArrayList().hashCode();
    }
    if (getB2BPriceLowerArrayCount() > 0) {
      hash = (37 * hash) + B2BPRICELOWERARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getB2BPriceLowerArrayList().hashCode();
    }
    if (getB2BPriceHighArrayCount() > 0) {
      hash = (37 * hash) + B2BPRICEHIGHARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getB2BPriceHighArrayList().hashCode();
    }
    if (getCarAgeLowerArrayCount() > 0) {
      hash = (37 * hash) + CARAGELOWERARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getCarAgeLowerArrayList().hashCode();
    }
    if (getCarAgeHighArrayCount() > 0) {
      hash = (37 * hash) + CARAGEHIGHARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getCarAgeHighArrayList().hashCode();
    }
    if (getDrivingMileageLowerArrayCount() > 0) {
      hash = (37 * hash) + DRIVINGMILEAGELOWERARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getDrivingMileageLowerArrayList().hashCode();
    }
    if (getDrivingMileageHighArrayCount() > 0) {
      hash = (37 * hash) + DRIVINGMILEAGEHIGHARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getDrivingMileageHighArrayList().hashCode();
    }
    hash = (37 * hash) + SUPERIORID_FIELD_NUMBER;
    hash = (53 * hash) + getSuperiorId();
    hash = (37 * hash) + USERTYPE_FIELD_NUMBER;
    hash = (53 * hash) + getUserType();
    hash = (37 * hash) + ISNEGLECT_FIELD_NUMBER;
    hash = (53 * hash) + getIsNeglect();
    hash = (37 * hash) + ISVIDEO_FIELD_NUMBER;
    hash = (53 * hash) + getIsVideo();
    hash = (37 * hash) + ISFIRSTPICTRUE_FIELD_NUMBER;
    hash = (53 * hash) + getIsFirstPicTrue();
    hash = (37 * hash) + ISDEALERRECOMMEND_FIELD_NUMBER;
    hash = (53 * hash) + getIsDealerRecommend();
    if (getCarSourceTypeArrayCount() > 0) {
      hash = (37 * hash) + CARSOURCETYPEARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getCarSourceTypeArrayList().hashCode();
    }
    if (getCarTypeConfigCount() > 0) {
      hash = (37 * hash) + CARTYPECONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getCarTypeConfigList().hashCode();
    }
    hash = (37 * hash) + ISRECOMMENDGL_FIELD_NUMBER;
    hash = (53 * hash) + getIsRecommendGL();
    hash = (37 * hash) + ISWARRANTY_FIELD_NUMBER;
    hash = (53 * hash) + getIsWarranty();
    if (getWarrantyTypeArrayCount() > 0) {
      hash = (37 * hash) + WARRANTYTYPEARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getWarrantyTypeArrayList().hashCode();
    }
    hash = (37 * hash) + ISTOP_FIELD_NUMBER;
    hash = (53 * hash) + getIsTop();
    hash = (37 * hash) + ISACTIVITY_FIELD_NUMBER;
    hash = (53 * hash) + getIsActivity();
    hash = (37 * hash) + ISBANGMAI_FIELD_NUMBER;
    hash = (53 * hash) + getIsBangmai();
    hash = (37 * hash) + ISBANGMAICHE_FIELD_NUMBER;
    hash = (53 * hash) + getIsBangmaiche();
    hash = (37 * hash) + ISSHOWMR_FIELD_NUMBER;
    hash = (53 * hash) + getIsShowMr();
    hash = (37 * hash) + ISCARID_FIELD_NUMBER;
    hash = (53 * hash) + getIsCarId();
    hash = (37 * hash) + ISB2B_FIELD_NUMBER;
    hash = (53 * hash) + getIsB2B();
    if (getCrmCustomerIdArrayCount() > 0) {
      hash = (37 * hash) + CRMCUSTOMERIDARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getCrmCustomerIdArrayList().hashCode();
    }
    hash = (37 * hash) + ISCHECKREPORTJSON_FIELD_NUMBER;
    hash = (53 * hash) + getIsCheckReportJson();
    if (getEnvirStandardArrayCount() > 0) {
      hash = (37 * hash) + ENVIRSTANDARDARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getEnvirStandardArrayList().hashCode();
    }
    if (getConsumptionLowerArrayCount() > 0) {
      hash = (37 * hash) + CONSUMPTIONLOWERARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getConsumptionLowerArrayList().hashCode();
    }
    if (getConsumptionHighArrayCount() > 0) {
      hash = (37 * hash) + CONSUMPTIONHIGHARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getConsumptionHighArrayList().hashCode();
    }
    if (getOilTypeArrayCount() > 0) {
      hash = (37 * hash) + OILTYPEARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getOilTypeArrayList().hashCode();
    }
    if (getEngineLocationArrayCount() > 0) {
      hash = (37 * hash) + ENGINELOCATIONARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getEngineLocationArrayList().hashCode();
    }
    if (getBodyDoorsLowerArrayCount() > 0) {
      hash = (37 * hash) + BODYDOORSLOWERARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getBodyDoorsLowerArrayList().hashCode();
    }
    if (getBodyDoorsHighArrayCount() > 0) {
      hash = (37 * hash) + BODYDOORSHIGHARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getBodyDoorsHighArrayList().hashCode();
    }
    if (getSeatNumLowerArrayCount() > 0) {
      hash = (37 * hash) + SEATNUMLOWERARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getSeatNumLowerArrayList().hashCode();
    }
    if (getSeatNumHighArrayCount() > 0) {
      hash = (37 * hash) + SEATNUMHIGHARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getSeatNumHighArrayList().hashCode();
    }
    hash = (37 * hash) + ISWAGON_FIELD_NUMBER;
    hash = (53 * hash) + getIsWagon();
    if (getDriveTypeArrayCount() > 0) {
      hash = (37 * hash) + DRIVETYPEARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getDriveTypeArrayList().hashCode();
    }
    if (getCsBodyFormArrayCount() > 0) {
      hash = (37 * hash) + CSBODYFORMARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getCsBodyFormArrayList().hashCode();
    }
    if (getCarLevelArrayCount() > 0) {
      hash = (37 * hash) + CARLEVELARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getCarLevelArrayList().hashCode();
    }
    if (getCarLevelSecondArrayCount() > 0) {
      hash = (37 * hash) + CARLEVELSECONDARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getCarLevelSecondArrayList().hashCode();
    }
    if (getCarYearArrayCount() > 0) {
      hash = (37 * hash) + CARYEARARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getCarYearArrayList().hashCode();
    }
    if (getMainBrandArrayCount() > 0) {
      hash = (37 * hash) + MAINBRANDARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getMainBrandArrayList().hashCode();
    }
    if (getBrandArrayCount() > 0) {
      hash = (37 * hash) + BRANDARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getBrandArrayList().hashCode();
    }
    if (getCarSerialArrayCount() > 0) {
      hash = (37 * hash) + CARSERIALARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getCarSerialArrayList().hashCode();
    }
    if (getCarIDArrayCount() > 0) {
      hash = (37 * hash) + CARIDARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getCarIDArrayList().hashCode();
    }
    if (getGearBoxTypeArrayCount() > 0) {
      hash = (37 * hash) + GEARBOXTYPEARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getGearBoxTypeArrayList().hashCode();
    }
    if (getExhaustLevelLowerArrayCount() > 0) {
      hash = (37 * hash) + EXHAUSTLEVELLOWERARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getExhaustLevelLowerArrayList().hashCode();
    }
    if (getExhaustLevelHighArrayCount() > 0) {
      hash = (37 * hash) + EXHAUSTLEVELHIGHARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getExhaustLevelHighArrayList().hashCode();
    }
    if (getExhaustLevelArrayCount() > 0) {
      hash = (37 * hash) + EXHAUSTLEVELARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getExhaustLevelArrayList().hashCode();
    }
    if (getCountryArrayCount() > 0) {
      hash = (37 * hash) + COUNTRYARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getCountryArrayList().hashCode();
    }
    if (getBrandAttrArrayCount() > 0) {
      hash = (37 * hash) + BRANDATTRARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getBrandAttrArrayList().hashCode();
    }
    hash = (37 * hash) + ADCITY_FIELD_NUMBER;
    hash = (53 * hash) + getAdCity();
    hash = (37 * hash) + ADCONDITION_FIELD_NUMBER;
    hash = (53 * hash) + getAdCondition();
    hash = (37 * hash) + CARBENEFITRATELOWER_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getCarBenefitRateLower()));
    hash = (37 * hash) + CARBENEFITRATEHIGH_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getCarBenefitRateHigh()));
    hash = (37 * hash) + CALLCONNECTRATELOWER_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getCallConnectRateLower()));
    hash = (37 * hash) + CALLCONNECTRATEHIGH_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getCallConnectRateHigh()));
    if (getVinCodeArrayCount() > 0) {
      hash = (37 * hash) + VINCODEARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getVinCodeArrayList().hashCode();
    }
    if (getLicenseProvinceIdArrayCount() > 0) {
      hash = (37 * hash) + LICENSEPROVINCEIDARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getLicenseProvinceIdArrayList().hashCode();
    }
    if (getLicenseCityIdArrayCount() > 0) {
      hash = (37 * hash) + LICENSECITYIDARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getLicenseCityIdArrayList().hashCode();
    }
    hash = (37 * hash) + ISLICENSED_FIELD_NUMBER;
    hash = (53 * hash) + getIsLicensed();
    if (getNoCrmCustomerIdArrayCount() > 0) {
      hash = (37 * hash) + NOCRMCUSTOMERIDARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getNoCrmCustomerIdArrayList().hashCode();
    }
    hash = (37 * hash) + CARPVMIN_FIELD_NUMBER;
    hash = (53 * hash) + getCarPvMin();
    hash = (37 * hash) + CARPVMAX_FIELD_NUMBER;
    hash = (53 * hash) + getCarPvMax();
    if (getNoSuperiorIdArrayCount() > 0) {
      hash = (37 * hash) + NOSUPERIORIDARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getNoSuperiorIdArrayList().hashCode();
    }
    hash = (37 * hash) + ISDEALERAUTHORIZED_FIELD_NUMBER;
    hash = (53 * hash) + getIsDealerAuthorized();
    if (getLoanFirstPayLowerArrayCount() > 0) {
      hash = (37 * hash) + LOANFIRSTPAYLOWERARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getLoanFirstPayLowerArrayList().hashCode();
    }
    if (getLoanFirstPayHighArrayCount() > 0) {
      hash = (37 * hash) + LOANFIRSTPAYHIGHARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getLoanFirstPayHighArrayList().hashCode();
    }
    if (getLoanDailyPayLowerArrayCount() > 0) {
      hash = (37 * hash) + LOANDAILYPAYLOWERARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getLoanDailyPayLowerArrayList().hashCode();
    }
    if (getLoanDailyPayHighArrayCount() > 0) {
      hash = (37 * hash) + LOANDAILYPAYHIGHARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getLoanDailyPayHighArrayList().hashCode();
    }
    if (getLoanMonthPayLowerArrayCount() > 0) {
      hash = (37 * hash) + LOANMONTHPAYLOWERARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getLoanMonthPayLowerArrayList().hashCode();
    }
    if (getLoanMonthPayHighArrayCount() > 0) {
      hash = (37 * hash) + LOANMONTHPAYHIGHARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getLoanMonthPayHighArrayList().hashCode();
    }
    if (getDistrictIdArrayCount() > 0) {
      hash = (37 * hash) + DISTRICTIDARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getDistrictIdArrayList().hashCode();
    }
    if (getInhaleTypeArrayCount() > 0) {
      hash = (37 * hash) + INHALETYPEARRAY_FIELD_NUMBER;
      hash = (53 * hash) + getInhaleTypeArrayList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static TaocheES.SearchCondition parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static TaocheES.SearchCondition parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static TaocheES.SearchCondition parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static TaocheES.SearchCondition parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static TaocheES.SearchCondition parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static TaocheES.SearchCondition parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static TaocheES.SearchCondition parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static TaocheES.SearchCondition parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static TaocheES.SearchCondition parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static TaocheES.SearchCondition parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static TaocheES.SearchCondition parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static TaocheES.SearchCondition parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(TaocheES.SearchCondition prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   *车源检索条件实体(用于调用grpc 中查询京东车源，cpc车源，一般车时传入的参数)
   * </pre>
   *
   * Protobuf type {@code TaocheES.SearchCondition}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:TaocheES.SearchCondition)
      TaocheES.SearchConditionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TaocheES.Taochees.internal_static_TaocheES_SearchCondition_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TaocheES.Taochees.internal_static_TaocheES_SearchCondition_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TaocheES.SearchCondition.class, TaocheES.SearchCondition.Builder.class);
    }

    // Construct using TaocheES.SearchCondition.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getAggrFieldListFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      commonFlag_ = 0;

      requestSource_ = 0;

      returnFieldArray_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000004);
      orderByFieldArray_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000008);
      orderByIsDESCArray_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000010);
      sortBoostFlag_ = 0;

      pageSize_ = 0;

      pageIndex_ = 0;

      distanceKm_ = 0D;

      location_ = "";

      isCountSearch_ = false;

      requestParametersLog_ = "";

      if (aggrFieldListBuilder_ == null) {
        aggrFieldList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
      } else {
        aggrFieldListBuilder_.clear();
      }
      startNum_ = 0;

      ucarIdArray_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00004000);
      siteId_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00008000);
      ucarStatusArray_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00010000);
      noUcarIdArray_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00020000);
      isAuthenticated_ = 0;

      source_ = 0;

      userIdArray_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00100000);
      noUserIdArray_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00200000);
      ucarSerialNumberArray_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00400000);
      keyWord_ = "";

      colorArray_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x01000000);
      carSource1L_ = 0;

      pictureCount_ = 0;

      bigAreaIdArray_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x08000000);
      provinceIdArray_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x10000000);
      cityIdArray_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x20000000);
      noCityIdArray_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x40000000);
      relateCityArray_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x80000000);
      priceLowerArray_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00000001);
      priceHighArray_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00000002);
      cPriceLowerArray_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00000004);
      cPriceHighArray_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00000008);
      b2BPriceLowerArray_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00000010);
      b2BPriceHighArray_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00000020);
      carAgeLowerArray_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00000040);
      carAgeHighArray_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00000080);
      drivingMileageLowerArray_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00000100);
      drivingMileageHighArray_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00000200);
      superiorId_ = 0;

      userType_ = 0;

      isNeglect_ = 0;

      isVideo_ = 0;

      isFirstPicTrue_ = 0;

      isDealerRecommend_ = 0;

      carSourceTypeArray_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00010000);
      carTypeConfig_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00020000);
      isRecommendGL_ = 0;

      isWarranty_ = 0;

      warrantyTypeArray_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00100000);
      isTop_ = 0;

      isActivity_ = 0;

      isBangmai_ = 0;

      isBangmaiche_ = 0;

      isShowMr_ = 0;

      isCarId_ = 0;

      isB2B_ = 0;

      crmCustomerIdArray_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x10000000);
      isCheckReportJson_ = 0;

      envirStandardArray_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x40000000);
      consumptionLowerArray_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x80000000);
      consumptionHighArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00000001);
      oilTypeArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00000002);
      engineLocationArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00000004);
      bodyDoorsLowerArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00000008);
      bodyDoorsHighArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00000010);
      seatNumLowerArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00000020);
      seatNumHighArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00000040);
      isWagon_ = 0;

      driveTypeArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00000100);
      csBodyFormArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00000200);
      carLevelArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00000400);
      carLevelSecondArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00000800);
      carYearArray_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField2_ = (bitField2_ & ~0x00001000);
      mainBrandArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00002000);
      brandArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00004000);
      carSerialArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00008000);
      carIDArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00010000);
      gearBoxTypeArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00020000);
      exhaustLevelLowerArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00040000);
      exhaustLevelHighArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00080000);
      exhaustLevelArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00100000);
      countryArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00200000);
      brandAttrArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00400000);
      adCity_ = 0;

      adCondition_ = 0;

      carBenefitRateLower_ = 0D;

      carBenefitRateHigh_ = 0D;

      callConnectRateLower_ = 0D;

      callConnectRateHigh_ = 0D;

      vinCodeArray_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField2_ = (bitField2_ & ~0x20000000);
      licenseProvinceIdArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x40000000);
      licenseCityIdArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x80000000);
      isLicensed_ = 0;

      noCrmCustomerIdArray_ = java.util.Collections.emptyList();
      bitField3_ = (bitField3_ & ~0x00000002);
      carPvMin_ = 0;

      carPvMax_ = 0;

      noSuperiorIdArray_ = java.util.Collections.emptyList();
      bitField3_ = (bitField3_ & ~0x00000010);
      isDealerAuthorized_ = 0;

      loanFirstPayLowerArray_ = java.util.Collections.emptyList();
      bitField3_ = (bitField3_ & ~0x00000040);
      loanFirstPayHighArray_ = java.util.Collections.emptyList();
      bitField3_ = (bitField3_ & ~0x00000080);
      loanDailyPayLowerArray_ = java.util.Collections.emptyList();
      bitField3_ = (bitField3_ & ~0x00000100);
      loanDailyPayHighArray_ = java.util.Collections.emptyList();
      bitField3_ = (bitField3_ & ~0x00000200);
      loanMonthPayLowerArray_ = java.util.Collections.emptyList();
      bitField3_ = (bitField3_ & ~0x00000400);
      loanMonthPayHighArray_ = java.util.Collections.emptyList();
      bitField3_ = (bitField3_ & ~0x00000800);
      districtIdArray_ = java.util.Collections.emptyList();
      bitField3_ = (bitField3_ & ~0x00001000);
      inhaleTypeArray_ = java.util.Collections.emptyList();
      bitField3_ = (bitField3_ & ~0x00002000);
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return TaocheES.Taochees.internal_static_TaocheES_SearchCondition_descriptor;
    }

    public TaocheES.SearchCondition getDefaultInstanceForType() {
      return TaocheES.SearchCondition.getDefaultInstance();
    }

    public TaocheES.SearchCondition build() {
      TaocheES.SearchCondition result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public TaocheES.SearchCondition buildPartial() {
      TaocheES.SearchCondition result = new TaocheES.SearchCondition(this);
      int from_bitField0_ = bitField0_;
      int from_bitField1_ = bitField1_;
      int from_bitField2_ = bitField2_;
      int from_bitField3_ = bitField3_;
      int to_bitField0_ = 0;
      int to_bitField1_ = 0;
      result.commonFlag_ = commonFlag_;
      result.requestSource_ = requestSource_;
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        returnFieldArray_ = returnFieldArray_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000004);
      }
      result.returnFieldArray_ = returnFieldArray_;
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        orderByFieldArray_ = orderByFieldArray_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000008);
      }
      result.orderByFieldArray_ = orderByFieldArray_;
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        orderByIsDESCArray_ = java.util.Collections.unmodifiableList(orderByIsDESCArray_);
        bitField0_ = (bitField0_ & ~0x00000010);
      }
      result.orderByIsDESCArray_ = orderByIsDESCArray_;
      result.sortBoostFlag_ = sortBoostFlag_;
      result.pageSize_ = pageSize_;
      result.pageIndex_ = pageIndex_;
      result.distanceKm_ = distanceKm_;
      result.location_ = location_;
      result.isCountSearch_ = isCountSearch_;
      result.requestParametersLog_ = requestParametersLog_;
      if (aggrFieldListBuilder_ == null) {
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          aggrFieldList_ = java.util.Collections.unmodifiableList(aggrFieldList_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.aggrFieldList_ = aggrFieldList_;
      } else {
        result.aggrFieldList_ = aggrFieldListBuilder_.build();
      }
      result.startNum_ = startNum_;
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        ucarIdArray_ = java.util.Collections.unmodifiableList(ucarIdArray_);
        bitField0_ = (bitField0_ & ~0x00004000);
      }
      result.ucarIdArray_ = ucarIdArray_;
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        siteId_ = java.util.Collections.unmodifiableList(siteId_);
        bitField0_ = (bitField0_ & ~0x00008000);
      }
      result.siteId_ = siteId_;
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        ucarStatusArray_ = java.util.Collections.unmodifiableList(ucarStatusArray_);
        bitField0_ = (bitField0_ & ~0x00010000);
      }
      result.ucarStatusArray_ = ucarStatusArray_;
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        noUcarIdArray_ = java.util.Collections.unmodifiableList(noUcarIdArray_);
        bitField0_ = (bitField0_ & ~0x00020000);
      }
      result.noUcarIdArray_ = noUcarIdArray_;
      result.isAuthenticated_ = isAuthenticated_;
      result.source_ = source_;
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        userIdArray_ = java.util.Collections.unmodifiableList(userIdArray_);
        bitField0_ = (bitField0_ & ~0x00100000);
      }
      result.userIdArray_ = userIdArray_;
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        noUserIdArray_ = java.util.Collections.unmodifiableList(noUserIdArray_);
        bitField0_ = (bitField0_ & ~0x00200000);
      }
      result.noUserIdArray_ = noUserIdArray_;
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        ucarSerialNumberArray_ = ucarSerialNumberArray_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00400000);
      }
      result.ucarSerialNumberArray_ = ucarSerialNumberArray_;
      result.keyWord_ = keyWord_;
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        colorArray_ = colorArray_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x01000000);
      }
      result.colorArray_ = colorArray_;
      result.carSource1L_ = carSource1L_;
      result.pictureCount_ = pictureCount_;
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        bigAreaIdArray_ = java.util.Collections.unmodifiableList(bigAreaIdArray_);
        bitField0_ = (bitField0_ & ~0x08000000);
      }
      result.bigAreaIdArray_ = bigAreaIdArray_;
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        provinceIdArray_ = java.util.Collections.unmodifiableList(provinceIdArray_);
        bitField0_ = (bitField0_ & ~0x10000000);
      }
      result.provinceIdArray_ = provinceIdArray_;
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        cityIdArray_ = java.util.Collections.unmodifiableList(cityIdArray_);
        bitField0_ = (bitField0_ & ~0x20000000);
      }
      result.cityIdArray_ = cityIdArray_;
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        noCityIdArray_ = java.util.Collections.unmodifiableList(noCityIdArray_);
        bitField0_ = (bitField0_ & ~0x40000000);
      }
      result.noCityIdArray_ = noCityIdArray_;
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        relateCityArray_ = java.util.Collections.unmodifiableList(relateCityArray_);
        bitField0_ = (bitField0_ & ~0x80000000);
      }
      result.relateCityArray_ = relateCityArray_;
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        priceLowerArray_ = java.util.Collections.unmodifiableList(priceLowerArray_);
        bitField1_ = (bitField1_ & ~0x00000001);
      }
      result.priceLowerArray_ = priceLowerArray_;
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        priceHighArray_ = java.util.Collections.unmodifiableList(priceHighArray_);
        bitField1_ = (bitField1_ & ~0x00000002);
      }
      result.priceHighArray_ = priceHighArray_;
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        cPriceLowerArray_ = java.util.Collections.unmodifiableList(cPriceLowerArray_);
        bitField1_ = (bitField1_ & ~0x00000004);
      }
      result.cPriceLowerArray_ = cPriceLowerArray_;
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        cPriceHighArray_ = java.util.Collections.unmodifiableList(cPriceHighArray_);
        bitField1_ = (bitField1_ & ~0x00000008);
      }
      result.cPriceHighArray_ = cPriceHighArray_;
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        b2BPriceLowerArray_ = java.util.Collections.unmodifiableList(b2BPriceLowerArray_);
        bitField1_ = (bitField1_ & ~0x00000010);
      }
      result.b2BPriceLowerArray_ = b2BPriceLowerArray_;
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        b2BPriceHighArray_ = java.util.Collections.unmodifiableList(b2BPriceHighArray_);
        bitField1_ = (bitField1_ & ~0x00000020);
      }
      result.b2BPriceHighArray_ = b2BPriceHighArray_;
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        carAgeLowerArray_ = java.util.Collections.unmodifiableList(carAgeLowerArray_);
        bitField1_ = (bitField1_ & ~0x00000040);
      }
      result.carAgeLowerArray_ = carAgeLowerArray_;
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        carAgeHighArray_ = java.util.Collections.unmodifiableList(carAgeHighArray_);
        bitField1_ = (bitField1_ & ~0x00000080);
      }
      result.carAgeHighArray_ = carAgeHighArray_;
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        drivingMileageLowerArray_ = java.util.Collections.unmodifiableList(drivingMileageLowerArray_);
        bitField1_ = (bitField1_ & ~0x00000100);
      }
      result.drivingMileageLowerArray_ = drivingMileageLowerArray_;
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        drivingMileageHighArray_ = java.util.Collections.unmodifiableList(drivingMileageHighArray_);
        bitField1_ = (bitField1_ & ~0x00000200);
      }
      result.drivingMileageHighArray_ = drivingMileageHighArray_;
      result.superiorId_ = superiorId_;
      result.userType_ = userType_;
      result.isNeglect_ = isNeglect_;
      result.isVideo_ = isVideo_;
      result.isFirstPicTrue_ = isFirstPicTrue_;
      result.isDealerRecommend_ = isDealerRecommend_;
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        carSourceTypeArray_ = java.util.Collections.unmodifiableList(carSourceTypeArray_);
        bitField1_ = (bitField1_ & ~0x00010000);
      }
      result.carSourceTypeArray_ = carSourceTypeArray_;
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        carTypeConfig_ = java.util.Collections.unmodifiableList(carTypeConfig_);
        bitField1_ = (bitField1_ & ~0x00020000);
      }
      result.carTypeConfig_ = carTypeConfig_;
      result.isRecommendGL_ = isRecommendGL_;
      result.isWarranty_ = isWarranty_;
      if (((bitField1_ & 0x00100000) == 0x00100000)) {
        warrantyTypeArray_ = java.util.Collections.unmodifiableList(warrantyTypeArray_);
        bitField1_ = (bitField1_ & ~0x00100000);
      }
      result.warrantyTypeArray_ = warrantyTypeArray_;
      result.isTop_ = isTop_;
      result.isActivity_ = isActivity_;
      result.isBangmai_ = isBangmai_;
      result.isBangmaiche_ = isBangmaiche_;
      result.isShowMr_ = isShowMr_;
      result.isCarId_ = isCarId_;
      result.isB2B_ = isB2B_;
      if (((bitField1_ & 0x10000000) == 0x10000000)) {
        crmCustomerIdArray_ = java.util.Collections.unmodifiableList(crmCustomerIdArray_);
        bitField1_ = (bitField1_ & ~0x10000000);
      }
      result.crmCustomerIdArray_ = crmCustomerIdArray_;
      result.isCheckReportJson_ = isCheckReportJson_;
      if (((bitField1_ & 0x40000000) == 0x40000000)) {
        envirStandardArray_ = java.util.Collections.unmodifiableList(envirStandardArray_);
        bitField1_ = (bitField1_ & ~0x40000000);
      }
      result.envirStandardArray_ = envirStandardArray_;
      if (((bitField1_ & 0x80000000) == 0x80000000)) {
        consumptionLowerArray_ = java.util.Collections.unmodifiableList(consumptionLowerArray_);
        bitField1_ = (bitField1_ & ~0x80000000);
      }
      result.consumptionLowerArray_ = consumptionLowerArray_;
      if (((bitField2_ & 0x00000001) == 0x00000001)) {
        consumptionHighArray_ = java.util.Collections.unmodifiableList(consumptionHighArray_);
        bitField2_ = (bitField2_ & ~0x00000001);
      }
      result.consumptionHighArray_ = consumptionHighArray_;
      if (((bitField2_ & 0x00000002) == 0x00000002)) {
        oilTypeArray_ = java.util.Collections.unmodifiableList(oilTypeArray_);
        bitField2_ = (bitField2_ & ~0x00000002);
      }
      result.oilTypeArray_ = oilTypeArray_;
      if (((bitField2_ & 0x00000004) == 0x00000004)) {
        engineLocationArray_ = java.util.Collections.unmodifiableList(engineLocationArray_);
        bitField2_ = (bitField2_ & ~0x00000004);
      }
      result.engineLocationArray_ = engineLocationArray_;
      if (((bitField2_ & 0x00000008) == 0x00000008)) {
        bodyDoorsLowerArray_ = java.util.Collections.unmodifiableList(bodyDoorsLowerArray_);
        bitField2_ = (bitField2_ & ~0x00000008);
      }
      result.bodyDoorsLowerArray_ = bodyDoorsLowerArray_;
      if (((bitField2_ & 0x00000010) == 0x00000010)) {
        bodyDoorsHighArray_ = java.util.Collections.unmodifiableList(bodyDoorsHighArray_);
        bitField2_ = (bitField2_ & ~0x00000010);
      }
      result.bodyDoorsHighArray_ = bodyDoorsHighArray_;
      if (((bitField2_ & 0x00000020) == 0x00000020)) {
        seatNumLowerArray_ = java.util.Collections.unmodifiableList(seatNumLowerArray_);
        bitField2_ = (bitField2_ & ~0x00000020);
      }
      result.seatNumLowerArray_ = seatNumLowerArray_;
      if (((bitField2_ & 0x00000040) == 0x00000040)) {
        seatNumHighArray_ = java.util.Collections.unmodifiableList(seatNumHighArray_);
        bitField2_ = (bitField2_ & ~0x00000040);
      }
      result.seatNumHighArray_ = seatNumHighArray_;
      result.isWagon_ = isWagon_;
      if (((bitField2_ & 0x00000100) == 0x00000100)) {
        driveTypeArray_ = java.util.Collections.unmodifiableList(driveTypeArray_);
        bitField2_ = (bitField2_ & ~0x00000100);
      }
      result.driveTypeArray_ = driveTypeArray_;
      if (((bitField2_ & 0x00000200) == 0x00000200)) {
        csBodyFormArray_ = java.util.Collections.unmodifiableList(csBodyFormArray_);
        bitField2_ = (bitField2_ & ~0x00000200);
      }
      result.csBodyFormArray_ = csBodyFormArray_;
      if (((bitField2_ & 0x00000400) == 0x00000400)) {
        carLevelArray_ = java.util.Collections.unmodifiableList(carLevelArray_);
        bitField2_ = (bitField2_ & ~0x00000400);
      }
      result.carLevelArray_ = carLevelArray_;
      if (((bitField2_ & 0x00000800) == 0x00000800)) {
        carLevelSecondArray_ = java.util.Collections.unmodifiableList(carLevelSecondArray_);
        bitField2_ = (bitField2_ & ~0x00000800);
      }
      result.carLevelSecondArray_ = carLevelSecondArray_;
      if (((bitField2_ & 0x00001000) == 0x00001000)) {
        carYearArray_ = carYearArray_.getUnmodifiableView();
        bitField2_ = (bitField2_ & ~0x00001000);
      }
      result.carYearArray_ = carYearArray_;
      if (((bitField2_ & 0x00002000) == 0x00002000)) {
        mainBrandArray_ = java.util.Collections.unmodifiableList(mainBrandArray_);
        bitField2_ = (bitField2_ & ~0x00002000);
      }
      result.mainBrandArray_ = mainBrandArray_;
      if (((bitField2_ & 0x00004000) == 0x00004000)) {
        brandArray_ = java.util.Collections.unmodifiableList(brandArray_);
        bitField2_ = (bitField2_ & ~0x00004000);
      }
      result.brandArray_ = brandArray_;
      if (((bitField2_ & 0x00008000) == 0x00008000)) {
        carSerialArray_ = java.util.Collections.unmodifiableList(carSerialArray_);
        bitField2_ = (bitField2_ & ~0x00008000);
      }
      result.carSerialArray_ = carSerialArray_;
      if (((bitField2_ & 0x00010000) == 0x00010000)) {
        carIDArray_ = java.util.Collections.unmodifiableList(carIDArray_);
        bitField2_ = (bitField2_ & ~0x00010000);
      }
      result.carIDArray_ = carIDArray_;
      if (((bitField2_ & 0x00020000) == 0x00020000)) {
        gearBoxTypeArray_ = java.util.Collections.unmodifiableList(gearBoxTypeArray_);
        bitField2_ = (bitField2_ & ~0x00020000);
      }
      result.gearBoxTypeArray_ = gearBoxTypeArray_;
      if (((bitField2_ & 0x00040000) == 0x00040000)) {
        exhaustLevelLowerArray_ = java.util.Collections.unmodifiableList(exhaustLevelLowerArray_);
        bitField2_ = (bitField2_ & ~0x00040000);
      }
      result.exhaustLevelLowerArray_ = exhaustLevelLowerArray_;
      if (((bitField2_ & 0x00080000) == 0x00080000)) {
        exhaustLevelHighArray_ = java.util.Collections.unmodifiableList(exhaustLevelHighArray_);
        bitField2_ = (bitField2_ & ~0x00080000);
      }
      result.exhaustLevelHighArray_ = exhaustLevelHighArray_;
      if (((bitField2_ & 0x00100000) == 0x00100000)) {
        exhaustLevelArray_ = java.util.Collections.unmodifiableList(exhaustLevelArray_);
        bitField2_ = (bitField2_ & ~0x00100000);
      }
      result.exhaustLevelArray_ = exhaustLevelArray_;
      if (((bitField2_ & 0x00200000) == 0x00200000)) {
        countryArray_ = java.util.Collections.unmodifiableList(countryArray_);
        bitField2_ = (bitField2_ & ~0x00200000);
      }
      result.countryArray_ = countryArray_;
      if (((bitField2_ & 0x00400000) == 0x00400000)) {
        brandAttrArray_ = java.util.Collections.unmodifiableList(brandAttrArray_);
        bitField2_ = (bitField2_ & ~0x00400000);
      }
      result.brandAttrArray_ = brandAttrArray_;
      result.adCity_ = adCity_;
      result.adCondition_ = adCondition_;
      result.carBenefitRateLower_ = carBenefitRateLower_;
      result.carBenefitRateHigh_ = carBenefitRateHigh_;
      result.callConnectRateLower_ = callConnectRateLower_;
      result.callConnectRateHigh_ = callConnectRateHigh_;
      if (((bitField2_ & 0x20000000) == 0x20000000)) {
        vinCodeArray_ = vinCodeArray_.getUnmodifiableView();
        bitField2_ = (bitField2_ & ~0x20000000);
      }
      result.vinCodeArray_ = vinCodeArray_;
      if (((bitField2_ & 0x40000000) == 0x40000000)) {
        licenseProvinceIdArray_ = java.util.Collections.unmodifiableList(licenseProvinceIdArray_);
        bitField2_ = (bitField2_ & ~0x40000000);
      }
      result.licenseProvinceIdArray_ = licenseProvinceIdArray_;
      if (((bitField2_ & 0x80000000) == 0x80000000)) {
        licenseCityIdArray_ = java.util.Collections.unmodifiableList(licenseCityIdArray_);
        bitField2_ = (bitField2_ & ~0x80000000);
      }
      result.licenseCityIdArray_ = licenseCityIdArray_;
      result.isLicensed_ = isLicensed_;
      if (((bitField3_ & 0x00000002) == 0x00000002)) {
        noCrmCustomerIdArray_ = java.util.Collections.unmodifiableList(noCrmCustomerIdArray_);
        bitField3_ = (bitField3_ & ~0x00000002);
      }
      result.noCrmCustomerIdArray_ = noCrmCustomerIdArray_;
      result.carPvMin_ = carPvMin_;
      result.carPvMax_ = carPvMax_;
      if (((bitField3_ & 0x00000010) == 0x00000010)) {
        noSuperiorIdArray_ = java.util.Collections.unmodifiableList(noSuperiorIdArray_);
        bitField3_ = (bitField3_ & ~0x00000010);
      }
      result.noSuperiorIdArray_ = noSuperiorIdArray_;
      result.isDealerAuthorized_ = isDealerAuthorized_;
      if (((bitField3_ & 0x00000040) == 0x00000040)) {
        loanFirstPayLowerArray_ = java.util.Collections.unmodifiableList(loanFirstPayLowerArray_);
        bitField3_ = (bitField3_ & ~0x00000040);
      }
      result.loanFirstPayLowerArray_ = loanFirstPayLowerArray_;
      if (((bitField3_ & 0x00000080) == 0x00000080)) {
        loanFirstPayHighArray_ = java.util.Collections.unmodifiableList(loanFirstPayHighArray_);
        bitField3_ = (bitField3_ & ~0x00000080);
      }
      result.loanFirstPayHighArray_ = loanFirstPayHighArray_;
      if (((bitField3_ & 0x00000100) == 0x00000100)) {
        loanDailyPayLowerArray_ = java.util.Collections.unmodifiableList(loanDailyPayLowerArray_);
        bitField3_ = (bitField3_ & ~0x00000100);
      }
      result.loanDailyPayLowerArray_ = loanDailyPayLowerArray_;
      if (((bitField3_ & 0x00000200) == 0x00000200)) {
        loanDailyPayHighArray_ = java.util.Collections.unmodifiableList(loanDailyPayHighArray_);
        bitField3_ = (bitField3_ & ~0x00000200);
      }
      result.loanDailyPayHighArray_ = loanDailyPayHighArray_;
      if (((bitField3_ & 0x00000400) == 0x00000400)) {
        loanMonthPayLowerArray_ = java.util.Collections.unmodifiableList(loanMonthPayLowerArray_);
        bitField3_ = (bitField3_ & ~0x00000400);
      }
      result.loanMonthPayLowerArray_ = loanMonthPayLowerArray_;
      if (((bitField3_ & 0x00000800) == 0x00000800)) {
        loanMonthPayHighArray_ = java.util.Collections.unmodifiableList(loanMonthPayHighArray_);
        bitField3_ = (bitField3_ & ~0x00000800);
      }
      result.loanMonthPayHighArray_ = loanMonthPayHighArray_;
      if (((bitField3_ & 0x00001000) == 0x00001000)) {
        districtIdArray_ = java.util.Collections.unmodifiableList(districtIdArray_);
        bitField3_ = (bitField3_ & ~0x00001000);
      }
      result.districtIdArray_ = districtIdArray_;
      if (((bitField3_ & 0x00002000) == 0x00002000)) {
        inhaleTypeArray_ = java.util.Collections.unmodifiableList(inhaleTypeArray_);
        bitField3_ = (bitField3_ & ~0x00002000);
      }
      result.inhaleTypeArray_ = inhaleTypeArray_;
      result.bitField0_ = to_bitField0_;
      result.bitField1_ = to_bitField1_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof TaocheES.SearchCondition) {
        return mergeFrom((TaocheES.SearchCondition)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(TaocheES.SearchCondition other) {
      if (other == TaocheES.SearchCondition.getDefaultInstance()) return this;
      if (other.getCommonFlag() != 0) {
        setCommonFlag(other.getCommonFlag());
      }
      if (other.getRequestSource() != 0) {
        setRequestSource(other.getRequestSource());
      }
      if (!other.returnFieldArray_.isEmpty()) {
        if (returnFieldArray_.isEmpty()) {
          returnFieldArray_ = other.returnFieldArray_;
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          ensureReturnFieldArrayIsMutable();
          returnFieldArray_.addAll(other.returnFieldArray_);
        }
        onChanged();
      }
      if (!other.orderByFieldArray_.isEmpty()) {
        if (orderByFieldArray_.isEmpty()) {
          orderByFieldArray_ = other.orderByFieldArray_;
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          ensureOrderByFieldArrayIsMutable();
          orderByFieldArray_.addAll(other.orderByFieldArray_);
        }
        onChanged();
      }
      if (!other.orderByIsDESCArray_.isEmpty()) {
        if (orderByIsDESCArray_.isEmpty()) {
          orderByIsDESCArray_ = other.orderByIsDESCArray_;
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          ensureOrderByIsDESCArrayIsMutable();
          orderByIsDESCArray_.addAll(other.orderByIsDESCArray_);
        }
        onChanged();
      }
      if (other.getSortBoostFlag() != 0) {
        setSortBoostFlag(other.getSortBoostFlag());
      }
      if (other.getPageSize() != 0) {
        setPageSize(other.getPageSize());
      }
      if (other.getPageIndex() != 0) {
        setPageIndex(other.getPageIndex());
      }
      if (other.getDistanceKm() != 0D) {
        setDistanceKm(other.getDistanceKm());
      }
      if (!other.getLocation().isEmpty()) {
        location_ = other.location_;
        onChanged();
      }
      if (other.getIsCountSearch() != false) {
        setIsCountSearch(other.getIsCountSearch());
      }
      if (!other.getRequestParametersLog().isEmpty()) {
        requestParametersLog_ = other.requestParametersLog_;
        onChanged();
      }
      if (aggrFieldListBuilder_ == null) {
        if (!other.aggrFieldList_.isEmpty()) {
          if (aggrFieldList_.isEmpty()) {
            aggrFieldList_ = other.aggrFieldList_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureAggrFieldListIsMutable();
            aggrFieldList_.addAll(other.aggrFieldList_);
          }
          onChanged();
        }
      } else {
        if (!other.aggrFieldList_.isEmpty()) {
          if (aggrFieldListBuilder_.isEmpty()) {
            aggrFieldListBuilder_.dispose();
            aggrFieldListBuilder_ = null;
            aggrFieldList_ = other.aggrFieldList_;
            bitField0_ = (bitField0_ & ~0x00001000);
            aggrFieldListBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getAggrFieldListFieldBuilder() : null;
          } else {
            aggrFieldListBuilder_.addAllMessages(other.aggrFieldList_);
          }
        }
      }
      if (other.getStartNum() != 0) {
        setStartNum(other.getStartNum());
      }
      if (!other.ucarIdArray_.isEmpty()) {
        if (ucarIdArray_.isEmpty()) {
          ucarIdArray_ = other.ucarIdArray_;
          bitField0_ = (bitField0_ & ~0x00004000);
        } else {
          ensureUcarIdArrayIsMutable();
          ucarIdArray_.addAll(other.ucarIdArray_);
        }
        onChanged();
      }
      if (!other.siteId_.isEmpty()) {
        if (siteId_.isEmpty()) {
          siteId_ = other.siteId_;
          bitField0_ = (bitField0_ & ~0x00008000);
        } else {
          ensureSiteIdIsMutable();
          siteId_.addAll(other.siteId_);
        }
        onChanged();
      }
      if (!other.ucarStatusArray_.isEmpty()) {
        if (ucarStatusArray_.isEmpty()) {
          ucarStatusArray_ = other.ucarStatusArray_;
          bitField0_ = (bitField0_ & ~0x00010000);
        } else {
          ensureUcarStatusArrayIsMutable();
          ucarStatusArray_.addAll(other.ucarStatusArray_);
        }
        onChanged();
      }
      if (!other.noUcarIdArray_.isEmpty()) {
        if (noUcarIdArray_.isEmpty()) {
          noUcarIdArray_ = other.noUcarIdArray_;
          bitField0_ = (bitField0_ & ~0x00020000);
        } else {
          ensureNoUcarIdArrayIsMutable();
          noUcarIdArray_.addAll(other.noUcarIdArray_);
        }
        onChanged();
      }
      if (other.getIsAuthenticated() != 0) {
        setIsAuthenticated(other.getIsAuthenticated());
      }
      if (other.getSource() != 0) {
        setSource(other.getSource());
      }
      if (!other.userIdArray_.isEmpty()) {
        if (userIdArray_.isEmpty()) {
          userIdArray_ = other.userIdArray_;
          bitField0_ = (bitField0_ & ~0x00100000);
        } else {
          ensureUserIdArrayIsMutable();
          userIdArray_.addAll(other.userIdArray_);
        }
        onChanged();
      }
      if (!other.noUserIdArray_.isEmpty()) {
        if (noUserIdArray_.isEmpty()) {
          noUserIdArray_ = other.noUserIdArray_;
          bitField0_ = (bitField0_ & ~0x00200000);
        } else {
          ensureNoUserIdArrayIsMutable();
          noUserIdArray_.addAll(other.noUserIdArray_);
        }
        onChanged();
      }
      if (!other.ucarSerialNumberArray_.isEmpty()) {
        if (ucarSerialNumberArray_.isEmpty()) {
          ucarSerialNumberArray_ = other.ucarSerialNumberArray_;
          bitField0_ = (bitField0_ & ~0x00400000);
        } else {
          ensureUcarSerialNumberArrayIsMutable();
          ucarSerialNumberArray_.addAll(other.ucarSerialNumberArray_);
        }
        onChanged();
      }
      if (!other.getKeyWord().isEmpty()) {
        keyWord_ = other.keyWord_;
        onChanged();
      }
      if (!other.colorArray_.isEmpty()) {
        if (colorArray_.isEmpty()) {
          colorArray_ = other.colorArray_;
          bitField0_ = (bitField0_ & ~0x01000000);
        } else {
          ensureColorArrayIsMutable();
          colorArray_.addAll(other.colorArray_);
        }
        onChanged();
      }
      if (other.getCarSource1L() != 0) {
        setCarSource1L(other.getCarSource1L());
      }
      if (other.getPictureCount() != 0) {
        setPictureCount(other.getPictureCount());
      }
      if (!other.bigAreaIdArray_.isEmpty()) {
        if (bigAreaIdArray_.isEmpty()) {
          bigAreaIdArray_ = other.bigAreaIdArray_;
          bitField0_ = (bitField0_ & ~0x08000000);
        } else {
          ensureBigAreaIdArrayIsMutable();
          bigAreaIdArray_.addAll(other.bigAreaIdArray_);
        }
        onChanged();
      }
      if (!other.provinceIdArray_.isEmpty()) {
        if (provinceIdArray_.isEmpty()) {
          provinceIdArray_ = other.provinceIdArray_;
          bitField0_ = (bitField0_ & ~0x10000000);
        } else {
          ensureProvinceIdArrayIsMutable();
          provinceIdArray_.addAll(other.provinceIdArray_);
        }
        onChanged();
      }
      if (!other.cityIdArray_.isEmpty()) {
        if (cityIdArray_.isEmpty()) {
          cityIdArray_ = other.cityIdArray_;
          bitField0_ = (bitField0_ & ~0x20000000);
        } else {
          ensureCityIdArrayIsMutable();
          cityIdArray_.addAll(other.cityIdArray_);
        }
        onChanged();
      }
      if (!other.noCityIdArray_.isEmpty()) {
        if (noCityIdArray_.isEmpty()) {
          noCityIdArray_ = other.noCityIdArray_;
          bitField0_ = (bitField0_ & ~0x40000000);
        } else {
          ensureNoCityIdArrayIsMutable();
          noCityIdArray_.addAll(other.noCityIdArray_);
        }
        onChanged();
      }
      if (!other.relateCityArray_.isEmpty()) {
        if (relateCityArray_.isEmpty()) {
          relateCityArray_ = other.relateCityArray_;
          bitField0_ = (bitField0_ & ~0x80000000);
        } else {
          ensureRelateCityArrayIsMutable();
          relateCityArray_.addAll(other.relateCityArray_);
        }
        onChanged();
      }
      if (!other.priceLowerArray_.isEmpty()) {
        if (priceLowerArray_.isEmpty()) {
          priceLowerArray_ = other.priceLowerArray_;
          bitField1_ = (bitField1_ & ~0x00000001);
        } else {
          ensurePriceLowerArrayIsMutable();
          priceLowerArray_.addAll(other.priceLowerArray_);
        }
        onChanged();
      }
      if (!other.priceHighArray_.isEmpty()) {
        if (priceHighArray_.isEmpty()) {
          priceHighArray_ = other.priceHighArray_;
          bitField1_ = (bitField1_ & ~0x00000002);
        } else {
          ensurePriceHighArrayIsMutable();
          priceHighArray_.addAll(other.priceHighArray_);
        }
        onChanged();
      }
      if (!other.cPriceLowerArray_.isEmpty()) {
        if (cPriceLowerArray_.isEmpty()) {
          cPriceLowerArray_ = other.cPriceLowerArray_;
          bitField1_ = (bitField1_ & ~0x00000004);
        } else {
          ensureCPriceLowerArrayIsMutable();
          cPriceLowerArray_.addAll(other.cPriceLowerArray_);
        }
        onChanged();
      }
      if (!other.cPriceHighArray_.isEmpty()) {
        if (cPriceHighArray_.isEmpty()) {
          cPriceHighArray_ = other.cPriceHighArray_;
          bitField1_ = (bitField1_ & ~0x00000008);
        } else {
          ensureCPriceHighArrayIsMutable();
          cPriceHighArray_.addAll(other.cPriceHighArray_);
        }
        onChanged();
      }
      if (!other.b2BPriceLowerArray_.isEmpty()) {
        if (b2BPriceLowerArray_.isEmpty()) {
          b2BPriceLowerArray_ = other.b2BPriceLowerArray_;
          bitField1_ = (bitField1_ & ~0x00000010);
        } else {
          ensureB2BPriceLowerArrayIsMutable();
          b2BPriceLowerArray_.addAll(other.b2BPriceLowerArray_);
        }
        onChanged();
      }
      if (!other.b2BPriceHighArray_.isEmpty()) {
        if (b2BPriceHighArray_.isEmpty()) {
          b2BPriceHighArray_ = other.b2BPriceHighArray_;
          bitField1_ = (bitField1_ & ~0x00000020);
        } else {
          ensureB2BPriceHighArrayIsMutable();
          b2BPriceHighArray_.addAll(other.b2BPriceHighArray_);
        }
        onChanged();
      }
      if (!other.carAgeLowerArray_.isEmpty()) {
        if (carAgeLowerArray_.isEmpty()) {
          carAgeLowerArray_ = other.carAgeLowerArray_;
          bitField1_ = (bitField1_ & ~0x00000040);
        } else {
          ensureCarAgeLowerArrayIsMutable();
          carAgeLowerArray_.addAll(other.carAgeLowerArray_);
        }
        onChanged();
      }
      if (!other.carAgeHighArray_.isEmpty()) {
        if (carAgeHighArray_.isEmpty()) {
          carAgeHighArray_ = other.carAgeHighArray_;
          bitField1_ = (bitField1_ & ~0x00000080);
        } else {
          ensureCarAgeHighArrayIsMutable();
          carAgeHighArray_.addAll(other.carAgeHighArray_);
        }
        onChanged();
      }
      if (!other.drivingMileageLowerArray_.isEmpty()) {
        if (drivingMileageLowerArray_.isEmpty()) {
          drivingMileageLowerArray_ = other.drivingMileageLowerArray_;
          bitField1_ = (bitField1_ & ~0x00000100);
        } else {
          ensureDrivingMileageLowerArrayIsMutable();
          drivingMileageLowerArray_.addAll(other.drivingMileageLowerArray_);
        }
        onChanged();
      }
      if (!other.drivingMileageHighArray_.isEmpty()) {
        if (drivingMileageHighArray_.isEmpty()) {
          drivingMileageHighArray_ = other.drivingMileageHighArray_;
          bitField1_ = (bitField1_ & ~0x00000200);
        } else {
          ensureDrivingMileageHighArrayIsMutable();
          drivingMileageHighArray_.addAll(other.drivingMileageHighArray_);
        }
        onChanged();
      }
      if (other.getSuperiorId() != 0) {
        setSuperiorId(other.getSuperiorId());
      }
      if (other.getUserType() != 0) {
        setUserType(other.getUserType());
      }
      if (other.getIsNeglect() != 0) {
        setIsNeglect(other.getIsNeglect());
      }
      if (other.getIsVideo() != 0) {
        setIsVideo(other.getIsVideo());
      }
      if (other.getIsFirstPicTrue() != 0) {
        setIsFirstPicTrue(other.getIsFirstPicTrue());
      }
      if (other.getIsDealerRecommend() != 0) {
        setIsDealerRecommend(other.getIsDealerRecommend());
      }
      if (!other.carSourceTypeArray_.isEmpty()) {
        if (carSourceTypeArray_.isEmpty()) {
          carSourceTypeArray_ = other.carSourceTypeArray_;
          bitField1_ = (bitField1_ & ~0x00010000);
        } else {
          ensureCarSourceTypeArrayIsMutable();
          carSourceTypeArray_.addAll(other.carSourceTypeArray_);
        }
        onChanged();
      }
      if (!other.carTypeConfig_.isEmpty()) {
        if (carTypeConfig_.isEmpty()) {
          carTypeConfig_ = other.carTypeConfig_;
          bitField1_ = (bitField1_ & ~0x00020000);
        } else {
          ensureCarTypeConfigIsMutable();
          carTypeConfig_.addAll(other.carTypeConfig_);
        }
        onChanged();
      }
      if (other.getIsRecommendGL() != 0) {
        setIsRecommendGL(other.getIsRecommendGL());
      }
      if (other.getIsWarranty() != 0) {
        setIsWarranty(other.getIsWarranty());
      }
      if (!other.warrantyTypeArray_.isEmpty()) {
        if (warrantyTypeArray_.isEmpty()) {
          warrantyTypeArray_ = other.warrantyTypeArray_;
          bitField1_ = (bitField1_ & ~0x00100000);
        } else {
          ensureWarrantyTypeArrayIsMutable();
          warrantyTypeArray_.addAll(other.warrantyTypeArray_);
        }
        onChanged();
      }
      if (other.getIsTop() != 0) {
        setIsTop(other.getIsTop());
      }
      if (other.getIsActivity() != 0) {
        setIsActivity(other.getIsActivity());
      }
      if (other.getIsBangmai() != 0) {
        setIsBangmai(other.getIsBangmai());
      }
      if (other.getIsBangmaiche() != 0) {
        setIsBangmaiche(other.getIsBangmaiche());
      }
      if (other.getIsShowMr() != 0) {
        setIsShowMr(other.getIsShowMr());
      }
      if (other.getIsCarId() != 0) {
        setIsCarId(other.getIsCarId());
      }
      if (other.getIsB2B() != 0) {
        setIsB2B(other.getIsB2B());
      }
      if (!other.crmCustomerIdArray_.isEmpty()) {
        if (crmCustomerIdArray_.isEmpty()) {
          crmCustomerIdArray_ = other.crmCustomerIdArray_;
          bitField1_ = (bitField1_ & ~0x10000000);
        } else {
          ensureCrmCustomerIdArrayIsMutable();
          crmCustomerIdArray_.addAll(other.crmCustomerIdArray_);
        }
        onChanged();
      }
      if (other.getIsCheckReportJson() != 0) {
        setIsCheckReportJson(other.getIsCheckReportJson());
      }
      if (!other.envirStandardArray_.isEmpty()) {
        if (envirStandardArray_.isEmpty()) {
          envirStandardArray_ = other.envirStandardArray_;
          bitField1_ = (bitField1_ & ~0x40000000);
        } else {
          ensureEnvirStandardArrayIsMutable();
          envirStandardArray_.addAll(other.envirStandardArray_);
        }
        onChanged();
      }
      if (!other.consumptionLowerArray_.isEmpty()) {
        if (consumptionLowerArray_.isEmpty()) {
          consumptionLowerArray_ = other.consumptionLowerArray_;
          bitField1_ = (bitField1_ & ~0x80000000);
        } else {
          ensureConsumptionLowerArrayIsMutable();
          consumptionLowerArray_.addAll(other.consumptionLowerArray_);
        }
        onChanged();
      }
      if (!other.consumptionHighArray_.isEmpty()) {
        if (consumptionHighArray_.isEmpty()) {
          consumptionHighArray_ = other.consumptionHighArray_;
          bitField2_ = (bitField2_ & ~0x00000001);
        } else {
          ensureConsumptionHighArrayIsMutable();
          consumptionHighArray_.addAll(other.consumptionHighArray_);
        }
        onChanged();
      }
      if (!other.oilTypeArray_.isEmpty()) {
        if (oilTypeArray_.isEmpty()) {
          oilTypeArray_ = other.oilTypeArray_;
          bitField2_ = (bitField2_ & ~0x00000002);
        } else {
          ensureOilTypeArrayIsMutable();
          oilTypeArray_.addAll(other.oilTypeArray_);
        }
        onChanged();
      }
      if (!other.engineLocationArray_.isEmpty()) {
        if (engineLocationArray_.isEmpty()) {
          engineLocationArray_ = other.engineLocationArray_;
          bitField2_ = (bitField2_ & ~0x00000004);
        } else {
          ensureEngineLocationArrayIsMutable();
          engineLocationArray_.addAll(other.engineLocationArray_);
        }
        onChanged();
      }
      if (!other.bodyDoorsLowerArray_.isEmpty()) {
        if (bodyDoorsLowerArray_.isEmpty()) {
          bodyDoorsLowerArray_ = other.bodyDoorsLowerArray_;
          bitField2_ = (bitField2_ & ~0x00000008);
        } else {
          ensureBodyDoorsLowerArrayIsMutable();
          bodyDoorsLowerArray_.addAll(other.bodyDoorsLowerArray_);
        }
        onChanged();
      }
      if (!other.bodyDoorsHighArray_.isEmpty()) {
        if (bodyDoorsHighArray_.isEmpty()) {
          bodyDoorsHighArray_ = other.bodyDoorsHighArray_;
          bitField2_ = (bitField2_ & ~0x00000010);
        } else {
          ensureBodyDoorsHighArrayIsMutable();
          bodyDoorsHighArray_.addAll(other.bodyDoorsHighArray_);
        }
        onChanged();
      }
      if (!other.seatNumLowerArray_.isEmpty()) {
        if (seatNumLowerArray_.isEmpty()) {
          seatNumLowerArray_ = other.seatNumLowerArray_;
          bitField2_ = (bitField2_ & ~0x00000020);
        } else {
          ensureSeatNumLowerArrayIsMutable();
          seatNumLowerArray_.addAll(other.seatNumLowerArray_);
        }
        onChanged();
      }
      if (!other.seatNumHighArray_.isEmpty()) {
        if (seatNumHighArray_.isEmpty()) {
          seatNumHighArray_ = other.seatNumHighArray_;
          bitField2_ = (bitField2_ & ~0x00000040);
        } else {
          ensureSeatNumHighArrayIsMutable();
          seatNumHighArray_.addAll(other.seatNumHighArray_);
        }
        onChanged();
      }
      if (other.getIsWagon() != 0) {
        setIsWagon(other.getIsWagon());
      }
      if (!other.driveTypeArray_.isEmpty()) {
        if (driveTypeArray_.isEmpty()) {
          driveTypeArray_ = other.driveTypeArray_;
          bitField2_ = (bitField2_ & ~0x00000100);
        } else {
          ensureDriveTypeArrayIsMutable();
          driveTypeArray_.addAll(other.driveTypeArray_);
        }
        onChanged();
      }
      if (!other.csBodyFormArray_.isEmpty()) {
        if (csBodyFormArray_.isEmpty()) {
          csBodyFormArray_ = other.csBodyFormArray_;
          bitField2_ = (bitField2_ & ~0x00000200);
        } else {
          ensureCsBodyFormArrayIsMutable();
          csBodyFormArray_.addAll(other.csBodyFormArray_);
        }
        onChanged();
      }
      if (!other.carLevelArray_.isEmpty()) {
        if (carLevelArray_.isEmpty()) {
          carLevelArray_ = other.carLevelArray_;
          bitField2_ = (bitField2_ & ~0x00000400);
        } else {
          ensureCarLevelArrayIsMutable();
          carLevelArray_.addAll(other.carLevelArray_);
        }
        onChanged();
      }
      if (!other.carLevelSecondArray_.isEmpty()) {
        if (carLevelSecondArray_.isEmpty()) {
          carLevelSecondArray_ = other.carLevelSecondArray_;
          bitField2_ = (bitField2_ & ~0x00000800);
        } else {
          ensureCarLevelSecondArrayIsMutable();
          carLevelSecondArray_.addAll(other.carLevelSecondArray_);
        }
        onChanged();
      }
      if (!other.carYearArray_.isEmpty()) {
        if (carYearArray_.isEmpty()) {
          carYearArray_ = other.carYearArray_;
          bitField2_ = (bitField2_ & ~0x00001000);
        } else {
          ensureCarYearArrayIsMutable();
          carYearArray_.addAll(other.carYearArray_);
        }
        onChanged();
      }
      if (!other.mainBrandArray_.isEmpty()) {
        if (mainBrandArray_.isEmpty()) {
          mainBrandArray_ = other.mainBrandArray_;
          bitField2_ = (bitField2_ & ~0x00002000);
        } else {
          ensureMainBrandArrayIsMutable();
          mainBrandArray_.addAll(other.mainBrandArray_);
        }
        onChanged();
      }
      if (!other.brandArray_.isEmpty()) {
        if (brandArray_.isEmpty()) {
          brandArray_ = other.brandArray_;
          bitField2_ = (bitField2_ & ~0x00004000);
        } else {
          ensureBrandArrayIsMutable();
          brandArray_.addAll(other.brandArray_);
        }
        onChanged();
      }
      if (!other.carSerialArray_.isEmpty()) {
        if (carSerialArray_.isEmpty()) {
          carSerialArray_ = other.carSerialArray_;
          bitField2_ = (bitField2_ & ~0x00008000);
        } else {
          ensureCarSerialArrayIsMutable();
          carSerialArray_.addAll(other.carSerialArray_);
        }
        onChanged();
      }
      if (!other.carIDArray_.isEmpty()) {
        if (carIDArray_.isEmpty()) {
          carIDArray_ = other.carIDArray_;
          bitField2_ = (bitField2_ & ~0x00010000);
        } else {
          ensureCarIDArrayIsMutable();
          carIDArray_.addAll(other.carIDArray_);
        }
        onChanged();
      }
      if (!other.gearBoxTypeArray_.isEmpty()) {
        if (gearBoxTypeArray_.isEmpty()) {
          gearBoxTypeArray_ = other.gearBoxTypeArray_;
          bitField2_ = (bitField2_ & ~0x00020000);
        } else {
          ensureGearBoxTypeArrayIsMutable();
          gearBoxTypeArray_.addAll(other.gearBoxTypeArray_);
        }
        onChanged();
      }
      if (!other.exhaustLevelLowerArray_.isEmpty()) {
        if (exhaustLevelLowerArray_.isEmpty()) {
          exhaustLevelLowerArray_ = other.exhaustLevelLowerArray_;
          bitField2_ = (bitField2_ & ~0x00040000);
        } else {
          ensureExhaustLevelLowerArrayIsMutable();
          exhaustLevelLowerArray_.addAll(other.exhaustLevelLowerArray_);
        }
        onChanged();
      }
      if (!other.exhaustLevelHighArray_.isEmpty()) {
        if (exhaustLevelHighArray_.isEmpty()) {
          exhaustLevelHighArray_ = other.exhaustLevelHighArray_;
          bitField2_ = (bitField2_ & ~0x00080000);
        } else {
          ensureExhaustLevelHighArrayIsMutable();
          exhaustLevelHighArray_.addAll(other.exhaustLevelHighArray_);
        }
        onChanged();
      }
      if (!other.exhaustLevelArray_.isEmpty()) {
        if (exhaustLevelArray_.isEmpty()) {
          exhaustLevelArray_ = other.exhaustLevelArray_;
          bitField2_ = (bitField2_ & ~0x00100000);
        } else {
          ensureExhaustLevelArrayIsMutable();
          exhaustLevelArray_.addAll(other.exhaustLevelArray_);
        }
        onChanged();
      }
      if (!other.countryArray_.isEmpty()) {
        if (countryArray_.isEmpty()) {
          countryArray_ = other.countryArray_;
          bitField2_ = (bitField2_ & ~0x00200000);
        } else {
          ensureCountryArrayIsMutable();
          countryArray_.addAll(other.countryArray_);
        }
        onChanged();
      }
      if (!other.brandAttrArray_.isEmpty()) {
        if (brandAttrArray_.isEmpty()) {
          brandAttrArray_ = other.brandAttrArray_;
          bitField2_ = (bitField2_ & ~0x00400000);
        } else {
          ensureBrandAttrArrayIsMutable();
          brandAttrArray_.addAll(other.brandAttrArray_);
        }
        onChanged();
      }
      if (other.getAdCity() != 0) {
        setAdCity(other.getAdCity());
      }
      if (other.getAdCondition() != 0) {
        setAdCondition(other.getAdCondition());
      }
      if (other.getCarBenefitRateLower() != 0D) {
        setCarBenefitRateLower(other.getCarBenefitRateLower());
      }
      if (other.getCarBenefitRateHigh() != 0D) {
        setCarBenefitRateHigh(other.getCarBenefitRateHigh());
      }
      if (other.getCallConnectRateLower() != 0D) {
        setCallConnectRateLower(other.getCallConnectRateLower());
      }
      if (other.getCallConnectRateHigh() != 0D) {
        setCallConnectRateHigh(other.getCallConnectRateHigh());
      }
      if (!other.vinCodeArray_.isEmpty()) {
        if (vinCodeArray_.isEmpty()) {
          vinCodeArray_ = other.vinCodeArray_;
          bitField2_ = (bitField2_ & ~0x20000000);
        } else {
          ensureVinCodeArrayIsMutable();
          vinCodeArray_.addAll(other.vinCodeArray_);
        }
        onChanged();
      }
      if (!other.licenseProvinceIdArray_.isEmpty()) {
        if (licenseProvinceIdArray_.isEmpty()) {
          licenseProvinceIdArray_ = other.licenseProvinceIdArray_;
          bitField2_ = (bitField2_ & ~0x40000000);
        } else {
          ensureLicenseProvinceIdArrayIsMutable();
          licenseProvinceIdArray_.addAll(other.licenseProvinceIdArray_);
        }
        onChanged();
      }
      if (!other.licenseCityIdArray_.isEmpty()) {
        if (licenseCityIdArray_.isEmpty()) {
          licenseCityIdArray_ = other.licenseCityIdArray_;
          bitField2_ = (bitField2_ & ~0x80000000);
        } else {
          ensureLicenseCityIdArrayIsMutable();
          licenseCityIdArray_.addAll(other.licenseCityIdArray_);
        }
        onChanged();
      }
      if (other.getIsLicensed() != 0) {
        setIsLicensed(other.getIsLicensed());
      }
      if (!other.noCrmCustomerIdArray_.isEmpty()) {
        if (noCrmCustomerIdArray_.isEmpty()) {
          noCrmCustomerIdArray_ = other.noCrmCustomerIdArray_;
          bitField3_ = (bitField3_ & ~0x00000002);
        } else {
          ensureNoCrmCustomerIdArrayIsMutable();
          noCrmCustomerIdArray_.addAll(other.noCrmCustomerIdArray_);
        }
        onChanged();
      }
      if (other.getCarPvMin() != 0) {
        setCarPvMin(other.getCarPvMin());
      }
      if (other.getCarPvMax() != 0) {
        setCarPvMax(other.getCarPvMax());
      }
      if (!other.noSuperiorIdArray_.isEmpty()) {
        if (noSuperiorIdArray_.isEmpty()) {
          noSuperiorIdArray_ = other.noSuperiorIdArray_;
          bitField3_ = (bitField3_ & ~0x00000010);
        } else {
          ensureNoSuperiorIdArrayIsMutable();
          noSuperiorIdArray_.addAll(other.noSuperiorIdArray_);
        }
        onChanged();
      }
      if (other.getIsDealerAuthorized() != 0) {
        setIsDealerAuthorized(other.getIsDealerAuthorized());
      }
      if (!other.loanFirstPayLowerArray_.isEmpty()) {
        if (loanFirstPayLowerArray_.isEmpty()) {
          loanFirstPayLowerArray_ = other.loanFirstPayLowerArray_;
          bitField3_ = (bitField3_ & ~0x00000040);
        } else {
          ensureLoanFirstPayLowerArrayIsMutable();
          loanFirstPayLowerArray_.addAll(other.loanFirstPayLowerArray_);
        }
        onChanged();
      }
      if (!other.loanFirstPayHighArray_.isEmpty()) {
        if (loanFirstPayHighArray_.isEmpty()) {
          loanFirstPayHighArray_ = other.loanFirstPayHighArray_;
          bitField3_ = (bitField3_ & ~0x00000080);
        } else {
          ensureLoanFirstPayHighArrayIsMutable();
          loanFirstPayHighArray_.addAll(other.loanFirstPayHighArray_);
        }
        onChanged();
      }
      if (!other.loanDailyPayLowerArray_.isEmpty()) {
        if (loanDailyPayLowerArray_.isEmpty()) {
          loanDailyPayLowerArray_ = other.loanDailyPayLowerArray_;
          bitField3_ = (bitField3_ & ~0x00000100);
        } else {
          ensureLoanDailyPayLowerArrayIsMutable();
          loanDailyPayLowerArray_.addAll(other.loanDailyPayLowerArray_);
        }
        onChanged();
      }
      if (!other.loanDailyPayHighArray_.isEmpty()) {
        if (loanDailyPayHighArray_.isEmpty()) {
          loanDailyPayHighArray_ = other.loanDailyPayHighArray_;
          bitField3_ = (bitField3_ & ~0x00000200);
        } else {
          ensureLoanDailyPayHighArrayIsMutable();
          loanDailyPayHighArray_.addAll(other.loanDailyPayHighArray_);
        }
        onChanged();
      }
      if (!other.loanMonthPayLowerArray_.isEmpty()) {
        if (loanMonthPayLowerArray_.isEmpty()) {
          loanMonthPayLowerArray_ = other.loanMonthPayLowerArray_;
          bitField3_ = (bitField3_ & ~0x00000400);
        } else {
          ensureLoanMonthPayLowerArrayIsMutable();
          loanMonthPayLowerArray_.addAll(other.loanMonthPayLowerArray_);
        }
        onChanged();
      }
      if (!other.loanMonthPayHighArray_.isEmpty()) {
        if (loanMonthPayHighArray_.isEmpty()) {
          loanMonthPayHighArray_ = other.loanMonthPayHighArray_;
          bitField3_ = (bitField3_ & ~0x00000800);
        } else {
          ensureLoanMonthPayHighArrayIsMutable();
          loanMonthPayHighArray_.addAll(other.loanMonthPayHighArray_);
        }
        onChanged();
      }
      if (!other.districtIdArray_.isEmpty()) {
        if (districtIdArray_.isEmpty()) {
          districtIdArray_ = other.districtIdArray_;
          bitField3_ = (bitField3_ & ~0x00001000);
        } else {
          ensureDistrictIdArrayIsMutable();
          districtIdArray_.addAll(other.districtIdArray_);
        }
        onChanged();
      }
      if (!other.inhaleTypeArray_.isEmpty()) {
        if (inhaleTypeArray_.isEmpty()) {
          inhaleTypeArray_ = other.inhaleTypeArray_;
          bitField3_ = (bitField3_ & ~0x00002000);
        } else {
          ensureInhaleTypeArrayIsMutable();
          inhaleTypeArray_.addAll(other.inhaleTypeArray_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      TaocheES.SearchCondition parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (TaocheES.SearchCondition) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;
    private int bitField1_;
    private int bitField2_;
    private int bitField3_;

    private int commonFlag_ ;
    /**
     * <pre>
     *全局标识位
     * </pre>
     *
     * <code>int32 CommonFlag = 1;</code>
     */
    public int getCommonFlag() {
      return commonFlag_;
    }
    /**
     * <pre>
     *全局标识位
     * </pre>
     *
     * <code>int32 CommonFlag = 1;</code>
     */
    public Builder setCommonFlag(int value) {
      
      commonFlag_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *全局标识位
     * </pre>
     *
     * <code>int32 CommonFlag = 1;</code>
     */
    public Builder clearCommonFlag() {
      
      commonFlag_ = 0;
      onChanged();
      return this;
    }

    private int requestSource_ ;
    /**
     * <pre>
     *访问来源（站点或项目）
     * </pre>
     *
     * <code>int32 RequestSource = 2;</code>
     */
    public int getRequestSource() {
      return requestSource_;
    }
    /**
     * <pre>
     *访问来源（站点或项目）
     * </pre>
     *
     * <code>int32 RequestSource = 2;</code>
     */
    public Builder setRequestSource(int value) {
      
      requestSource_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *访问来源（站点或项目）
     * </pre>
     *
     * <code>int32 RequestSource = 2;</code>
     */
    public Builder clearRequestSource() {
      
      requestSource_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList returnFieldArray_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureReturnFieldArrayIsMutable() {
      if (!((bitField0_ & 0x00000004) == 0x00000004)) {
        returnFieldArray_ = new com.google.protobuf.LazyStringArrayList(returnFieldArray_);
        bitField0_ |= 0x00000004;
       }
    }
    /**
     * <pre>
     *[必填]返回结果集字段,如果不填寫默認只返回 id.
     * </pre>
     *
     * <code>repeated string ReturnFieldArray = 3;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getReturnFieldArrayList() {
      return returnFieldArray_.getUnmodifiableView();
    }
    /**
     * <pre>
     *[必填]返回结果集字段,如果不填寫默認只返回 id.
     * </pre>
     *
     * <code>repeated string ReturnFieldArray = 3;</code>
     */
    public int getReturnFieldArrayCount() {
      return returnFieldArray_.size();
    }
    /**
     * <pre>
     *[必填]返回结果集字段,如果不填寫默認只返回 id.
     * </pre>
     *
     * <code>repeated string ReturnFieldArray = 3;</code>
     */
    public java.lang.String getReturnFieldArray(int index) {
      return returnFieldArray_.get(index);
    }
    /**
     * <pre>
     *[必填]返回结果集字段,如果不填寫默認只返回 id.
     * </pre>
     *
     * <code>repeated string ReturnFieldArray = 3;</code>
     */
    public com.google.protobuf.ByteString
        getReturnFieldArrayBytes(int index) {
      return returnFieldArray_.getByteString(index);
    }
    /**
     * <pre>
     *[必填]返回结果集字段,如果不填寫默認只返回 id.
     * </pre>
     *
     * <code>repeated string ReturnFieldArray = 3;</code>
     */
    public Builder setReturnFieldArray(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureReturnFieldArrayIsMutable();
      returnFieldArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *[必填]返回结果集字段,如果不填寫默認只返回 id.
     * </pre>
     *
     * <code>repeated string ReturnFieldArray = 3;</code>
     */
    public Builder addReturnFieldArray(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureReturnFieldArrayIsMutable();
      returnFieldArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *[必填]返回结果集字段,如果不填寫默認只返回 id.
     * </pre>
     *
     * <code>repeated string ReturnFieldArray = 3;</code>
     */
    public Builder addAllReturnFieldArray(
        java.lang.Iterable<java.lang.String> values) {
      ensureReturnFieldArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, returnFieldArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *[必填]返回结果集字段,如果不填寫默認只返回 id.
     * </pre>
     *
     * <code>repeated string ReturnFieldArray = 3;</code>
     */
    public Builder clearReturnFieldArray() {
      returnFieldArray_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *[必填]返回结果集字段,如果不填寫默認只返回 id.
     * </pre>
     *
     * <code>repeated string ReturnFieldArray = 3;</code>
     */
    public Builder addReturnFieldArrayBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureReturnFieldArrayIsMutable();
      returnFieldArray_.add(value);
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList orderByFieldArray_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureOrderByFieldArrayIsMutable() {
      if (!((bitField0_ & 0x00000008) == 0x00000008)) {
        orderByFieldArray_ = new com.google.protobuf.LazyStringArrayList(orderByFieldArray_);
        bitField0_ |= 0x00000008;
       }
    }
    /**
     * <pre>
     *排序字段(与 IsDESC 同时使用)
     * </pre>
     *
     * <code>repeated string OrderByFieldArray = 4;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getOrderByFieldArrayList() {
      return orderByFieldArray_.getUnmodifiableView();
    }
    /**
     * <pre>
     *排序字段(与 IsDESC 同时使用)
     * </pre>
     *
     * <code>repeated string OrderByFieldArray = 4;</code>
     */
    public int getOrderByFieldArrayCount() {
      return orderByFieldArray_.size();
    }
    /**
     * <pre>
     *排序字段(与 IsDESC 同时使用)
     * </pre>
     *
     * <code>repeated string OrderByFieldArray = 4;</code>
     */
    public java.lang.String getOrderByFieldArray(int index) {
      return orderByFieldArray_.get(index);
    }
    /**
     * <pre>
     *排序字段(与 IsDESC 同时使用)
     * </pre>
     *
     * <code>repeated string OrderByFieldArray = 4;</code>
     */
    public com.google.protobuf.ByteString
        getOrderByFieldArrayBytes(int index) {
      return orderByFieldArray_.getByteString(index);
    }
    /**
     * <pre>
     *排序字段(与 IsDESC 同时使用)
     * </pre>
     *
     * <code>repeated string OrderByFieldArray = 4;</code>
     */
    public Builder setOrderByFieldArray(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureOrderByFieldArrayIsMutable();
      orderByFieldArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *排序字段(与 IsDESC 同时使用)
     * </pre>
     *
     * <code>repeated string OrderByFieldArray = 4;</code>
     */
    public Builder addOrderByFieldArray(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureOrderByFieldArrayIsMutable();
      orderByFieldArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *排序字段(与 IsDESC 同时使用)
     * </pre>
     *
     * <code>repeated string OrderByFieldArray = 4;</code>
     */
    public Builder addAllOrderByFieldArray(
        java.lang.Iterable<java.lang.String> values) {
      ensureOrderByFieldArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, orderByFieldArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *排序字段(与 IsDESC 同时使用)
     * </pre>
     *
     * <code>repeated string OrderByFieldArray = 4;</code>
     */
    public Builder clearOrderByFieldArray() {
      orderByFieldArray_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *排序字段(与 IsDESC 同时使用)
     * </pre>
     *
     * <code>repeated string OrderByFieldArray = 4;</code>
     */
    public Builder addOrderByFieldArrayBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureOrderByFieldArrayIsMutable();
      orderByFieldArray_.add(value);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Boolean> orderByIsDESCArray_ = java.util.Collections.emptyList();
    private void ensureOrderByIsDESCArrayIsMutable() {
      if (!((bitField0_ & 0x00000010) == 0x00000010)) {
        orderByIsDESCArray_ = new java.util.ArrayList<java.lang.Boolean>(orderByIsDESCArray_);
        bitField0_ |= 0x00000010;
       }
    }
    /**
     * <pre>
     *是否倒序 true desc, false asc ;(与 OrderByFieldArray 同时使用)
     * </pre>
     *
     * <code>repeated bool OrderByIsDESCArray = 5;</code>
     */
    public java.util.List<java.lang.Boolean>
        getOrderByIsDESCArrayList() {
      return java.util.Collections.unmodifiableList(orderByIsDESCArray_);
    }
    /**
     * <pre>
     *是否倒序 true desc, false asc ;(与 OrderByFieldArray 同时使用)
     * </pre>
     *
     * <code>repeated bool OrderByIsDESCArray = 5;</code>
     */
    public int getOrderByIsDESCArrayCount() {
      return orderByIsDESCArray_.size();
    }
    /**
     * <pre>
     *是否倒序 true desc, false asc ;(与 OrderByFieldArray 同时使用)
     * </pre>
     *
     * <code>repeated bool OrderByIsDESCArray = 5;</code>
     */
    public boolean getOrderByIsDESCArray(int index) {
      return orderByIsDESCArray_.get(index);
    }
    /**
     * <pre>
     *是否倒序 true desc, false asc ;(与 OrderByFieldArray 同时使用)
     * </pre>
     *
     * <code>repeated bool OrderByIsDESCArray = 5;</code>
     */
    public Builder setOrderByIsDESCArray(
        int index, boolean value) {
      ensureOrderByIsDESCArrayIsMutable();
      orderByIsDESCArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *是否倒序 true desc, false asc ;(与 OrderByFieldArray 同时使用)
     * </pre>
     *
     * <code>repeated bool OrderByIsDESCArray = 5;</code>
     */
    public Builder addOrderByIsDESCArray(boolean value) {
      ensureOrderByIsDESCArrayIsMutable();
      orderByIsDESCArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *是否倒序 true desc, false asc ;(与 OrderByFieldArray 同时使用)
     * </pre>
     *
     * <code>repeated bool OrderByIsDESCArray = 5;</code>
     */
    public Builder addAllOrderByIsDESCArray(
        java.lang.Iterable<? extends java.lang.Boolean> values) {
      ensureOrderByIsDESCArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, orderByIsDESCArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *是否倒序 true desc, false asc ;(与 OrderByFieldArray 同时使用)
     * </pre>
     *
     * <code>repeated bool OrderByIsDESCArray = 5;</code>
     */
    public Builder clearOrderByIsDESCArray() {
      orderByIsDESCArray_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }

    private int sortBoostFlag_ ;
    /**
     * <pre>
     *排序标识：0为常规；1为以boostapp为基础权重，刷新时间权重衰减(Groovy脚本方式)；2为boostapp为基础权重，刷新时间衰减（jar包方式）
     * </pre>
     *
     * <code>int32 SortBoostFlag = 6;</code>
     */
    public int getSortBoostFlag() {
      return sortBoostFlag_;
    }
    /**
     * <pre>
     *排序标识：0为常规；1为以boostapp为基础权重，刷新时间权重衰减(Groovy脚本方式)；2为boostapp为基础权重，刷新时间衰减（jar包方式）
     * </pre>
     *
     * <code>int32 SortBoostFlag = 6;</code>
     */
    public Builder setSortBoostFlag(int value) {
      
      sortBoostFlag_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *排序标识：0为常规；1为以boostapp为基础权重，刷新时间权重衰减(Groovy脚本方式)；2为boostapp为基础权重，刷新时间衰减（jar包方式）
     * </pre>
     *
     * <code>int32 SortBoostFlag = 6;</code>
     */
    public Builder clearSortBoostFlag() {
      
      sortBoostFlag_ = 0;
      onChanged();
      return this;
    }

    private int pageSize_ ;
    /**
     * <pre>
     *页大小，即需要返回的数据记录条数
     * </pre>
     *
     * <code>int32 PageSize = 7;</code>
     */
    public int getPageSize() {
      return pageSize_;
    }
    /**
     * <pre>
     *页大小，即需要返回的数据记录条数
     * </pre>
     *
     * <code>int32 PageSize = 7;</code>
     */
    public Builder setPageSize(int value) {
      
      pageSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *页大小，即需要返回的数据记录条数
     * </pre>
     *
     * <code>int32 PageSize = 7;</code>
     */
    public Builder clearPageSize() {
      
      pageSize_ = 0;
      onChanged();
      return this;
    }

    private int pageIndex_ ;
    /**
     * <pre>
     *当前页码，最大值为500
     * </pre>
     *
     * <code>int32 PageIndex = 8;</code>
     */
    public int getPageIndex() {
      return pageIndex_;
    }
    /**
     * <pre>
     *当前页码，最大值为500
     * </pre>
     *
     * <code>int32 PageIndex = 8;</code>
     */
    public Builder setPageIndex(int value) {
      
      pageIndex_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *当前页码，最大值为500
     * </pre>
     *
     * <code>int32 PageIndex = 8;</code>
     */
    public Builder clearPageIndex() {
      
      pageIndex_ = 0;
      onChanged();
      return this;
    }

    private double distanceKm_ ;
    /**
     * <pre>
     *距离检索：20151201
     * </pre>
     *
     * <code>double DistanceKm = 9;</code>
     */
    public double getDistanceKm() {
      return distanceKm_;
    }
    /**
     * <pre>
     *距离检索：20151201
     * </pre>
     *
     * <code>double DistanceKm = 9;</code>
     */
    public Builder setDistanceKm(double value) {
      
      distanceKm_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *距离检索：20151201
     * </pre>
     *
     * <code>double DistanceKm = 9;</code>
     */
    public Builder clearDistanceKm() {
      
      distanceKm_ = 0D;
      onChanged();
      return this;
    }

    private java.lang.Object location_ = "";
    /**
     * <pre>
     *当前坐标点，用于按距离筛选或排序：----20151201  数据格式：X,Y，示例：112.124,332.22
     * </pre>
     *
     * <code>string Location = 10;</code>
     */
    public java.lang.String getLocation() {
      java.lang.Object ref = location_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        location_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *当前坐标点，用于按距离筛选或排序：----20151201  数据格式：X,Y，示例：112.124,332.22
     * </pre>
     *
     * <code>string Location = 10;</code>
     */
    public com.google.protobuf.ByteString
        getLocationBytes() {
      java.lang.Object ref = location_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        location_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *当前坐标点，用于按距离筛选或排序：----20151201  数据格式：X,Y，示例：112.124,332.22
     * </pre>
     *
     * <code>string Location = 10;</code>
     */
    public Builder setLocation(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      location_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *当前坐标点，用于按距离筛选或排序：----20151201  数据格式：X,Y，示例：112.124,332.22
     * </pre>
     *
     * <code>string Location = 10;</code>
     */
    public Builder clearLocation() {
      
      location_ = getDefaultInstance().getLocation();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *当前坐标点，用于按距离筛选或排序：----20151201  数据格式：X,Y，示例：112.124,332.22
     * </pre>
     *
     * <code>string Location = 10;</code>
     */
    public Builder setLocationBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      location_ = value;
      onChanged();
      return this;
    }

    private boolean isCountSearch_ ;
    /**
     * <pre>
     *是否只返回符合条件的记录条数，不返回具体数据
     * </pre>
     *
     * <code>bool IsCountSearch = 11;</code>
     */
    public boolean getIsCountSearch() {
      return isCountSearch_;
    }
    /**
     * <pre>
     *是否只返回符合条件的记录条数，不返回具体数据
     * </pre>
     *
     * <code>bool IsCountSearch = 11;</code>
     */
    public Builder setIsCountSearch(boolean value) {
      
      isCountSearch_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *是否只返回符合条件的记录条数，不返回具体数据
     * </pre>
     *
     * <code>bool IsCountSearch = 11;</code>
     */
    public Builder clearIsCountSearch() {
      
      isCountSearch_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object requestParametersLog_ = "";
    /**
     * <pre>
     *是否返回请求日志：get为返回日志
     * </pre>
     *
     * <code>string RequestParametersLog = 12;</code>
     */
    public java.lang.String getRequestParametersLog() {
      java.lang.Object ref = requestParametersLog_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        requestParametersLog_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *是否返回请求日志：get为返回日志
     * </pre>
     *
     * <code>string RequestParametersLog = 12;</code>
     */
    public com.google.protobuf.ByteString
        getRequestParametersLogBytes() {
      java.lang.Object ref = requestParametersLog_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        requestParametersLog_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *是否返回请求日志：get为返回日志
     * </pre>
     *
     * <code>string RequestParametersLog = 12;</code>
     */
    public Builder setRequestParametersLog(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      requestParametersLog_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *是否返回请求日志：get为返回日志
     * </pre>
     *
     * <code>string RequestParametersLog = 12;</code>
     */
    public Builder clearRequestParametersLog() {
      
      requestParametersLog_ = getDefaultInstance().getRequestParametersLog();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *是否返回请求日志：get为返回日志
     * </pre>
     *
     * <code>string RequestParametersLog = 12;</code>
     */
    public Builder setRequestParametersLogBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      requestParametersLog_ = value;
      onChanged();
      return this;
    }

    private java.util.List<TaocheES.AggrCondition> aggrFieldList_ =
      java.util.Collections.emptyList();
    private void ensureAggrFieldListIsMutable() {
      if (!((bitField0_ & 0x00001000) == 0x00001000)) {
        aggrFieldList_ = new java.util.ArrayList<TaocheES.AggrCondition>(aggrFieldList_);
        bitField0_ |= 0x00001000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        TaocheES.AggrCondition, TaocheES.AggrCondition.Builder, TaocheES.AggrConditionOrBuilder> aggrFieldListBuilder_;

    /**
     * <pre>
     *切面聚合检索条件
     * </pre>
     *
     * <code>repeated .TaocheES.AggrCondition AggrFieldList = 13;</code>
     */
    public java.util.List<TaocheES.AggrCondition> getAggrFieldListList() {
      if (aggrFieldListBuilder_ == null) {
        return java.util.Collections.unmodifiableList(aggrFieldList_);
      } else {
        return aggrFieldListBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *切面聚合检索条件
     * </pre>
     *
     * <code>repeated .TaocheES.AggrCondition AggrFieldList = 13;</code>
     */
    public int getAggrFieldListCount() {
      if (aggrFieldListBuilder_ == null) {
        return aggrFieldList_.size();
      } else {
        return aggrFieldListBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *切面聚合检索条件
     * </pre>
     *
     * <code>repeated .TaocheES.AggrCondition AggrFieldList = 13;</code>
     */
    public TaocheES.AggrCondition getAggrFieldList(int index) {
      if (aggrFieldListBuilder_ == null) {
        return aggrFieldList_.get(index);
      } else {
        return aggrFieldListBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *切面聚合检索条件
     * </pre>
     *
     * <code>repeated .TaocheES.AggrCondition AggrFieldList = 13;</code>
     */
    public Builder setAggrFieldList(
        int index, TaocheES.AggrCondition value) {
      if (aggrFieldListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAggrFieldListIsMutable();
        aggrFieldList_.set(index, value);
        onChanged();
      } else {
        aggrFieldListBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *切面聚合检索条件
     * </pre>
     *
     * <code>repeated .TaocheES.AggrCondition AggrFieldList = 13;</code>
     */
    public Builder setAggrFieldList(
        int index, TaocheES.AggrCondition.Builder builderForValue) {
      if (aggrFieldListBuilder_ == null) {
        ensureAggrFieldListIsMutable();
        aggrFieldList_.set(index, builderForValue.build());
        onChanged();
      } else {
        aggrFieldListBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *切面聚合检索条件
     * </pre>
     *
     * <code>repeated .TaocheES.AggrCondition AggrFieldList = 13;</code>
     */
    public Builder addAggrFieldList(TaocheES.AggrCondition value) {
      if (aggrFieldListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAggrFieldListIsMutable();
        aggrFieldList_.add(value);
        onChanged();
      } else {
        aggrFieldListBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *切面聚合检索条件
     * </pre>
     *
     * <code>repeated .TaocheES.AggrCondition AggrFieldList = 13;</code>
     */
    public Builder addAggrFieldList(
        int index, TaocheES.AggrCondition value) {
      if (aggrFieldListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAggrFieldListIsMutable();
        aggrFieldList_.add(index, value);
        onChanged();
      } else {
        aggrFieldListBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *切面聚合检索条件
     * </pre>
     *
     * <code>repeated .TaocheES.AggrCondition AggrFieldList = 13;</code>
     */
    public Builder addAggrFieldList(
        TaocheES.AggrCondition.Builder builderForValue) {
      if (aggrFieldListBuilder_ == null) {
        ensureAggrFieldListIsMutable();
        aggrFieldList_.add(builderForValue.build());
        onChanged();
      } else {
        aggrFieldListBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *切面聚合检索条件
     * </pre>
     *
     * <code>repeated .TaocheES.AggrCondition AggrFieldList = 13;</code>
     */
    public Builder addAggrFieldList(
        int index, TaocheES.AggrCondition.Builder builderForValue) {
      if (aggrFieldListBuilder_ == null) {
        ensureAggrFieldListIsMutable();
        aggrFieldList_.add(index, builderForValue.build());
        onChanged();
      } else {
        aggrFieldListBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *切面聚合检索条件
     * </pre>
     *
     * <code>repeated .TaocheES.AggrCondition AggrFieldList = 13;</code>
     */
    public Builder addAllAggrFieldList(
        java.lang.Iterable<? extends TaocheES.AggrCondition> values) {
      if (aggrFieldListBuilder_ == null) {
        ensureAggrFieldListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, aggrFieldList_);
        onChanged();
      } else {
        aggrFieldListBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *切面聚合检索条件
     * </pre>
     *
     * <code>repeated .TaocheES.AggrCondition AggrFieldList = 13;</code>
     */
    public Builder clearAggrFieldList() {
      if (aggrFieldListBuilder_ == null) {
        aggrFieldList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
      } else {
        aggrFieldListBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *切面聚合检索条件
     * </pre>
     *
     * <code>repeated .TaocheES.AggrCondition AggrFieldList = 13;</code>
     */
    public Builder removeAggrFieldList(int index) {
      if (aggrFieldListBuilder_ == null) {
        ensureAggrFieldListIsMutable();
        aggrFieldList_.remove(index);
        onChanged();
      } else {
        aggrFieldListBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *切面聚合检索条件
     * </pre>
     *
     * <code>repeated .TaocheES.AggrCondition AggrFieldList = 13;</code>
     */
    public TaocheES.AggrCondition.Builder getAggrFieldListBuilder(
        int index) {
      return getAggrFieldListFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *切面聚合检索条件
     * </pre>
     *
     * <code>repeated .TaocheES.AggrCondition AggrFieldList = 13;</code>
     */
    public TaocheES.AggrConditionOrBuilder getAggrFieldListOrBuilder(
        int index) {
      if (aggrFieldListBuilder_ == null) {
        return aggrFieldList_.get(index);  } else {
        return aggrFieldListBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *切面聚合检索条件
     * </pre>
     *
     * <code>repeated .TaocheES.AggrCondition AggrFieldList = 13;</code>
     */
    public java.util.List<? extends TaocheES.AggrConditionOrBuilder> 
         getAggrFieldListOrBuilderList() {
      if (aggrFieldListBuilder_ != null) {
        return aggrFieldListBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(aggrFieldList_);
      }
    }
    /**
     * <pre>
     *切面聚合检索条件
     * </pre>
     *
     * <code>repeated .TaocheES.AggrCondition AggrFieldList = 13;</code>
     */
    public TaocheES.AggrCondition.Builder addAggrFieldListBuilder() {
      return getAggrFieldListFieldBuilder().addBuilder(
          TaocheES.AggrCondition.getDefaultInstance());
    }
    /**
     * <pre>
     *切面聚合检索条件
     * </pre>
     *
     * <code>repeated .TaocheES.AggrCondition AggrFieldList = 13;</code>
     */
    public TaocheES.AggrCondition.Builder addAggrFieldListBuilder(
        int index) {
      return getAggrFieldListFieldBuilder().addBuilder(
          index, TaocheES.AggrCondition.getDefaultInstance());
    }
    /**
     * <pre>
     *切面聚合检索条件
     * </pre>
     *
     * <code>repeated .TaocheES.AggrCondition AggrFieldList = 13;</code>
     */
    public java.util.List<TaocheES.AggrCondition.Builder> 
         getAggrFieldListBuilderList() {
      return getAggrFieldListFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        TaocheES.AggrCondition, TaocheES.AggrCondition.Builder, TaocheES.AggrConditionOrBuilder> 
        getAggrFieldListFieldBuilder() {
      if (aggrFieldListBuilder_ == null) {
        aggrFieldListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            TaocheES.AggrCondition, TaocheES.AggrCondition.Builder, TaocheES.AggrConditionOrBuilder>(
                aggrFieldList_,
                ((bitField0_ & 0x00001000) == 0x00001000),
                getParentForChildren(),
                isClean());
        aggrFieldList_ = null;
      }
      return aggrFieldListBuilder_;
    }

    private int startNum_ ;
    /**
     * <pre>
     *起始条数，即跳过前N条数据
     * </pre>
     *
     * <code>int32 StartNum = 14;</code>
     */
    public int getStartNum() {
      return startNum_;
    }
    /**
     * <pre>
     *起始条数，即跳过前N条数据
     * </pre>
     *
     * <code>int32 StartNum = 14;</code>
     */
    public Builder setStartNum(int value) {
      
      startNum_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *起始条数，即跳过前N条数据
     * </pre>
     *
     * <code>int32 StartNum = 14;</code>
     */
    public Builder clearStartNum() {
      
      startNum_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> ucarIdArray_ = java.util.Collections.emptyList();
    private void ensureUcarIdArrayIsMutable() {
      if (!((bitField0_ & 0x00004000) == 0x00004000)) {
        ucarIdArray_ = new java.util.ArrayList<java.lang.Integer>(ucarIdArray_);
        bitField0_ |= 0x00004000;
       }
    }
    /**
     * <pre>
     *包含车源ID数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 UcarIdArray = 101;</code>
     */
    public java.util.List<java.lang.Integer>
        getUcarIdArrayList() {
      return java.util.Collections.unmodifiableList(ucarIdArray_);
    }
    /**
     * <pre>
     *包含车源ID数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 UcarIdArray = 101;</code>
     */
    public int getUcarIdArrayCount() {
      return ucarIdArray_.size();
    }
    /**
     * <pre>
     *包含车源ID数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 UcarIdArray = 101;</code>
     */
    public int getUcarIdArray(int index) {
      return ucarIdArray_.get(index);
    }
    /**
     * <pre>
     *包含车源ID数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 UcarIdArray = 101;</code>
     */
    public Builder setUcarIdArray(
        int index, int value) {
      ensureUcarIdArrayIsMutable();
      ucarIdArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *包含车源ID数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 UcarIdArray = 101;</code>
     */
    public Builder addUcarIdArray(int value) {
      ensureUcarIdArrayIsMutable();
      ucarIdArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *包含车源ID数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 UcarIdArray = 101;</code>
     */
    public Builder addAllUcarIdArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureUcarIdArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, ucarIdArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *包含车源ID数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 UcarIdArray = 101;</code>
     */
    public Builder clearUcarIdArray() {
      ucarIdArray_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00004000);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> siteId_ = java.util.Collections.emptyList();
    private void ensureSiteIdIsMutable() {
      if (!((bitField0_ & 0x00008000) == 0x00008000)) {
        siteId_ = new java.util.ArrayList<java.lang.Integer>(siteId_);
        bitField0_ |= 0x00008000;
       }
    }
    /**
     * <pre>
     *车源数据来源：1	58二手车，2	车168，3	51汽车，4	第一车网，5	淘车网 【默认为5】
     * </pre>
     *
     * <code>repeated int32 SiteId = 102;</code>
     */
    public java.util.List<java.lang.Integer>
        getSiteIdList() {
      return java.util.Collections.unmodifiableList(siteId_);
    }
    /**
     * <pre>
     *车源数据来源：1	58二手车，2	车168，3	51汽车，4	第一车网，5	淘车网 【默认为5】
     * </pre>
     *
     * <code>repeated int32 SiteId = 102;</code>
     */
    public int getSiteIdCount() {
      return siteId_.size();
    }
    /**
     * <pre>
     *车源数据来源：1	58二手车，2	车168，3	51汽车，4	第一车网，5	淘车网 【默认为5】
     * </pre>
     *
     * <code>repeated int32 SiteId = 102;</code>
     */
    public int getSiteId(int index) {
      return siteId_.get(index);
    }
    /**
     * <pre>
     *车源数据来源：1	58二手车，2	车168，3	51汽车，4	第一车网，5	淘车网 【默认为5】
     * </pre>
     *
     * <code>repeated int32 SiteId = 102;</code>
     */
    public Builder setSiteId(
        int index, int value) {
      ensureSiteIdIsMutable();
      siteId_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车源数据来源：1	58二手车，2	车168，3	51汽车，4	第一车网，5	淘车网 【默认为5】
     * </pre>
     *
     * <code>repeated int32 SiteId = 102;</code>
     */
    public Builder addSiteId(int value) {
      ensureSiteIdIsMutable();
      siteId_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车源数据来源：1	58二手车，2	车168，3	51汽车，4	第一车网，5	淘车网 【默认为5】
     * </pre>
     *
     * <code>repeated int32 SiteId = 102;</code>
     */
    public Builder addAllSiteId(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureSiteIdIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, siteId_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车源数据来源：1	58二手车，2	车168，3	51汽车，4	第一车网，5	淘车网 【默认为5】
     * </pre>
     *
     * <code>repeated int32 SiteId = 102;</code>
     */
    public Builder clearSiteId() {
      siteId_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00008000);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> ucarStatusArray_ = java.util.Collections.emptyList();
    private void ensureUcarStatusArrayIsMutable() {
      if (!((bitField0_ & 0x00010000) == 0x00010000)) {
        ucarStatusArray_ = new java.util.ArrayList<java.lang.Integer>(ucarStatusArray_);
        bitField0_ |= 0x00010000;
       }
    }
    /**
     * <pre>
     *车源状态(1为在售,4为售出,100 为查询所有车源)  
     * </pre>
     *
     * <code>repeated int32 UcarStatusArray = 103;</code>
     */
    public java.util.List<java.lang.Integer>
        getUcarStatusArrayList() {
      return java.util.Collections.unmodifiableList(ucarStatusArray_);
    }
    /**
     * <pre>
     *车源状态(1为在售,4为售出,100 为查询所有车源)  
     * </pre>
     *
     * <code>repeated int32 UcarStatusArray = 103;</code>
     */
    public int getUcarStatusArrayCount() {
      return ucarStatusArray_.size();
    }
    /**
     * <pre>
     *车源状态(1为在售,4为售出,100 为查询所有车源)  
     * </pre>
     *
     * <code>repeated int32 UcarStatusArray = 103;</code>
     */
    public int getUcarStatusArray(int index) {
      return ucarStatusArray_.get(index);
    }
    /**
     * <pre>
     *车源状态(1为在售,4为售出,100 为查询所有车源)  
     * </pre>
     *
     * <code>repeated int32 UcarStatusArray = 103;</code>
     */
    public Builder setUcarStatusArray(
        int index, int value) {
      ensureUcarStatusArrayIsMutable();
      ucarStatusArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车源状态(1为在售,4为售出,100 为查询所有车源)  
     * </pre>
     *
     * <code>repeated int32 UcarStatusArray = 103;</code>
     */
    public Builder addUcarStatusArray(int value) {
      ensureUcarStatusArrayIsMutable();
      ucarStatusArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车源状态(1为在售,4为售出,100 为查询所有车源)  
     * </pre>
     *
     * <code>repeated int32 UcarStatusArray = 103;</code>
     */
    public Builder addAllUcarStatusArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureUcarStatusArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, ucarStatusArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车源状态(1为在售,4为售出,100 为查询所有车源)  
     * </pre>
     *
     * <code>repeated int32 UcarStatusArray = 103;</code>
     */
    public Builder clearUcarStatusArray() {
      ucarStatusArray_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00010000);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> noUcarIdArray_ = java.util.Collections.emptyList();
    private void ensureNoUcarIdArrayIsMutable() {
      if (!((bitField0_ & 0x00020000) == 0x00020000)) {
        noUcarIdArray_ = new java.util.ArrayList<java.lang.Integer>(noUcarIdArray_);
        bitField0_ |= 0x00020000;
       }
    }
    /**
     * <pre>
     *排除车源ID数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 NoUcarIdArray = 104;</code>
     */
    public java.util.List<java.lang.Integer>
        getNoUcarIdArrayList() {
      return java.util.Collections.unmodifiableList(noUcarIdArray_);
    }
    /**
     * <pre>
     *排除车源ID数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 NoUcarIdArray = 104;</code>
     */
    public int getNoUcarIdArrayCount() {
      return noUcarIdArray_.size();
    }
    /**
     * <pre>
     *排除车源ID数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 NoUcarIdArray = 104;</code>
     */
    public int getNoUcarIdArray(int index) {
      return noUcarIdArray_.get(index);
    }
    /**
     * <pre>
     *排除车源ID数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 NoUcarIdArray = 104;</code>
     */
    public Builder setNoUcarIdArray(
        int index, int value) {
      ensureNoUcarIdArrayIsMutable();
      noUcarIdArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *排除车源ID数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 NoUcarIdArray = 104;</code>
     */
    public Builder addNoUcarIdArray(int value) {
      ensureNoUcarIdArrayIsMutable();
      noUcarIdArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *排除车源ID数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 NoUcarIdArray = 104;</code>
     */
    public Builder addAllNoUcarIdArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureNoUcarIdArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, noUcarIdArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *排除车源ID数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 NoUcarIdArray = 104;</code>
     */
    public Builder clearNoUcarIdArray() {
      noUcarIdArray_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00020000);
      onChanged();
      return this;
    }

    private int isAuthenticated_ ;
    /**
     * <pre>
     *是否是品牌认证车：-1-未知 0-否 1-是 (厂商认证)
     * </pre>
     *
     * <code>int32 IsAuthenticated = 105;</code>
     */
    public int getIsAuthenticated() {
      return isAuthenticated_;
    }
    /**
     * <pre>
     *是否是品牌认证车：-1-未知 0-否 1-是 (厂商认证)
     * </pre>
     *
     * <code>int32 IsAuthenticated = 105;</code>
     */
    public Builder setIsAuthenticated(int value) {
      
      isAuthenticated_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *是否是品牌认证车：-1-未知 0-否 1-是 (厂商认证)
     * </pre>
     *
     * <code>int32 IsAuthenticated = 105;</code>
     */
    public Builder clearIsAuthenticated() {
      
      isAuthenticated_ = 0;
      onChanged();
      return this;
    }

    private int source_ ;
    /**
     * <pre>
     *是否可跨区(1为不可跨区,2为可跨区(即全国营销车源)) 
     * </pre>
     *
     * <code>int32 Source = 106;</code>
     */
    public int getSource() {
      return source_;
    }
    /**
     * <pre>
     *是否可跨区(1为不可跨区,2为可跨区(即全国营销车源)) 
     * </pre>
     *
     * <code>int32 Source = 106;</code>
     */
    public Builder setSource(int value) {
      
      source_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *是否可跨区(1为不可跨区,2为可跨区(即全国营销车源)) 
     * </pre>
     *
     * <code>int32 Source = 106;</code>
     */
    public Builder clearSource() {
      
      source_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> userIdArray_ = java.util.Collections.emptyList();
    private void ensureUserIdArrayIsMutable() {
      if (!((bitField0_ & 0x00100000) == 0x00100000)) {
        userIdArray_ = new java.util.ArrayList<java.lang.Integer>(userIdArray_);
        bitField0_ |= 0x00100000;
       }
    }
    /**
     * <pre>
     *用户ID(经销商ID)【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 UserIdArray = 107;</code>
     */
    public java.util.List<java.lang.Integer>
        getUserIdArrayList() {
      return java.util.Collections.unmodifiableList(userIdArray_);
    }
    /**
     * <pre>
     *用户ID(经销商ID)【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 UserIdArray = 107;</code>
     */
    public int getUserIdArrayCount() {
      return userIdArray_.size();
    }
    /**
     * <pre>
     *用户ID(经销商ID)【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 UserIdArray = 107;</code>
     */
    public int getUserIdArray(int index) {
      return userIdArray_.get(index);
    }
    /**
     * <pre>
     *用户ID(经销商ID)【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 UserIdArray = 107;</code>
     */
    public Builder setUserIdArray(
        int index, int value) {
      ensureUserIdArrayIsMutable();
      userIdArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *用户ID(经销商ID)【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 UserIdArray = 107;</code>
     */
    public Builder addUserIdArray(int value) {
      ensureUserIdArrayIsMutable();
      userIdArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *用户ID(经销商ID)【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 UserIdArray = 107;</code>
     */
    public Builder addAllUserIdArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureUserIdArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, userIdArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *用户ID(经销商ID)【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 UserIdArray = 107;</code>
     */
    public Builder clearUserIdArray() {
      userIdArray_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00100000);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> noUserIdArray_ = java.util.Collections.emptyList();
    private void ensureNoUserIdArrayIsMutable() {
      if (!((bitField0_ & 0x00200000) == 0x00200000)) {
        noUserIdArray_ = new java.util.ArrayList<java.lang.Integer>(noUserIdArray_);
        bitField0_ |= 0x00200000;
       }
    }
    /**
     * <pre>
     *排除用户ID(经销商ID)【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 NoUserIdArray = 108;</code>
     */
    public java.util.List<java.lang.Integer>
        getNoUserIdArrayList() {
      return java.util.Collections.unmodifiableList(noUserIdArray_);
    }
    /**
     * <pre>
     *排除用户ID(经销商ID)【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 NoUserIdArray = 108;</code>
     */
    public int getNoUserIdArrayCount() {
      return noUserIdArray_.size();
    }
    /**
     * <pre>
     *排除用户ID(经销商ID)【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 NoUserIdArray = 108;</code>
     */
    public int getNoUserIdArray(int index) {
      return noUserIdArray_.get(index);
    }
    /**
     * <pre>
     *排除用户ID(经销商ID)【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 NoUserIdArray = 108;</code>
     */
    public Builder setNoUserIdArray(
        int index, int value) {
      ensureNoUserIdArrayIsMutable();
      noUserIdArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *排除用户ID(经销商ID)【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 NoUserIdArray = 108;</code>
     */
    public Builder addNoUserIdArray(int value) {
      ensureNoUserIdArrayIsMutable();
      noUserIdArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *排除用户ID(经销商ID)【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 NoUserIdArray = 108;</code>
     */
    public Builder addAllNoUserIdArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureNoUserIdArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, noUserIdArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *排除用户ID(经销商ID)【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 NoUserIdArray = 108;</code>
     */
    public Builder clearNoUserIdArray() {
      noUserIdArray_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00200000);
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList ucarSerialNumberArray_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureUcarSerialNumberArrayIsMutable() {
      if (!((bitField0_ & 0x00400000) == 0x00400000)) {
        ucarSerialNumberArray_ = new com.google.protobuf.LazyStringArrayList(ucarSerialNumberArray_);
        bitField0_ |= 0x00400000;
       }
    }
    /**
     * <pre>
     *包含车源编号数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated string UcarSerialNumberArray = 109;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getUcarSerialNumberArrayList() {
      return ucarSerialNumberArray_.getUnmodifiableView();
    }
    /**
     * <pre>
     *包含车源编号数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated string UcarSerialNumberArray = 109;</code>
     */
    public int getUcarSerialNumberArrayCount() {
      return ucarSerialNumberArray_.size();
    }
    /**
     * <pre>
     *包含车源编号数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated string UcarSerialNumberArray = 109;</code>
     */
    public java.lang.String getUcarSerialNumberArray(int index) {
      return ucarSerialNumberArray_.get(index);
    }
    /**
     * <pre>
     *包含车源编号数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated string UcarSerialNumberArray = 109;</code>
     */
    public com.google.protobuf.ByteString
        getUcarSerialNumberArrayBytes(int index) {
      return ucarSerialNumberArray_.getByteString(index);
    }
    /**
     * <pre>
     *包含车源编号数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated string UcarSerialNumberArray = 109;</code>
     */
    public Builder setUcarSerialNumberArray(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureUcarSerialNumberArrayIsMutable();
      ucarSerialNumberArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *包含车源编号数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated string UcarSerialNumberArray = 109;</code>
     */
    public Builder addUcarSerialNumberArray(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureUcarSerialNumberArrayIsMutable();
      ucarSerialNumberArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *包含车源编号数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated string UcarSerialNumberArray = 109;</code>
     */
    public Builder addAllUcarSerialNumberArray(
        java.lang.Iterable<java.lang.String> values) {
      ensureUcarSerialNumberArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, ucarSerialNumberArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *包含车源编号数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated string UcarSerialNumberArray = 109;</code>
     */
    public Builder clearUcarSerialNumberArray() {
      ucarSerialNumberArray_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00400000);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *包含车源编号数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated string UcarSerialNumberArray = 109;</code>
     */
    public Builder addUcarSerialNumberArrayBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureUcarSerialNumberArrayIsMutable();
      ucarSerialNumberArray_.add(value);
      onChanged();
      return this;
    }

    private java.lang.Object keyWord_ = "";
    /**
     * <pre>
     *搜索关键词
     * </pre>
     *
     * <code>string KeyWord = 110;</code>
     */
    public java.lang.String getKeyWord() {
      java.lang.Object ref = keyWord_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        keyWord_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *搜索关键词
     * </pre>
     *
     * <code>string KeyWord = 110;</code>
     */
    public com.google.protobuf.ByteString
        getKeyWordBytes() {
      java.lang.Object ref = keyWord_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        keyWord_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *搜索关键词
     * </pre>
     *
     * <code>string KeyWord = 110;</code>
     */
    public Builder setKeyWord(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      keyWord_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *搜索关键词
     * </pre>
     *
     * <code>string KeyWord = 110;</code>
     */
    public Builder clearKeyWord() {
      
      keyWord_ = getDefaultInstance().getKeyWord();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *搜索关键词
     * </pre>
     *
     * <code>string KeyWord = 110;</code>
     */
    public Builder setKeyWordBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      keyWord_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList colorArray_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureColorArrayIsMutable() {
      if (!((bitField0_ & 0x01000000) == 0x01000000)) {
        colorArray_ = new com.google.protobuf.LazyStringArrayList(colorArray_);
        bitField0_ |= 0x01000000;
       }
    }
    /**
     * <pre>
     *车辆颜色
     * </pre>
     *
     * <code>repeated string ColorArray = 111;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getColorArrayList() {
      return colorArray_.getUnmodifiableView();
    }
    /**
     * <pre>
     *车辆颜色
     * </pre>
     *
     * <code>repeated string ColorArray = 111;</code>
     */
    public int getColorArrayCount() {
      return colorArray_.size();
    }
    /**
     * <pre>
     *车辆颜色
     * </pre>
     *
     * <code>repeated string ColorArray = 111;</code>
     */
    public java.lang.String getColorArray(int index) {
      return colorArray_.get(index);
    }
    /**
     * <pre>
     *车辆颜色
     * </pre>
     *
     * <code>repeated string ColorArray = 111;</code>
     */
    public com.google.protobuf.ByteString
        getColorArrayBytes(int index) {
      return colorArray_.getByteString(index);
    }
    /**
     * <pre>
     *车辆颜色
     * </pre>
     *
     * <code>repeated string ColorArray = 111;</code>
     */
    public Builder setColorArray(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureColorArrayIsMutable();
      colorArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车辆颜色
     * </pre>
     *
     * <code>repeated string ColorArray = 111;</code>
     */
    public Builder addColorArray(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureColorArrayIsMutable();
      colorArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车辆颜色
     * </pre>
     *
     * <code>repeated string ColorArray = 111;</code>
     */
    public Builder addAllColorArray(
        java.lang.Iterable<java.lang.String> values) {
      ensureColorArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, colorArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车辆颜色
     * </pre>
     *
     * <code>repeated string ColorArray = 111;</code>
     */
    public Builder clearColorArray() {
      colorArray_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x01000000);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车辆颜色
     * </pre>
     *
     * <code>repeated string ColorArray = 111;</code>
     */
    public Builder addColorArrayBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureColorArrayIsMutable();
      colorArray_.add(value);
      onChanged();
      return this;
    }

    private int carSource1L_ ;
    /**
     * <pre>
     *车辆来源（1为个人；2为商家） 
     * </pre>
     *
     * <code>int32 CarSource1L = 112;</code>
     */
    public int getCarSource1L() {
      return carSource1L_;
    }
    /**
     * <pre>
     *车辆来源（1为个人；2为商家） 
     * </pre>
     *
     * <code>int32 CarSource1L = 112;</code>
     */
    public Builder setCarSource1L(int value) {
      
      carSource1L_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车辆来源（1为个人；2为商家） 
     * </pre>
     *
     * <code>int32 CarSource1L = 112;</code>
     */
    public Builder clearCarSource1L() {
      
      carSource1L_ = 0;
      onChanged();
      return this;
    }

    private int pictureCount_ ;
    /**
     * <pre>
     *车源图片数量,搜索包含图片最小数量,搜索有图车源时传入1,无图车源传入0,
     * </pre>
     *
     * <code>int32 PictureCount = 113;</code>
     */
    public int getPictureCount() {
      return pictureCount_;
    }
    /**
     * <pre>
     *车源图片数量,搜索包含图片最小数量,搜索有图车源时传入1,无图车源传入0,
     * </pre>
     *
     * <code>int32 PictureCount = 113;</code>
     */
    public Builder setPictureCount(int value) {
      
      pictureCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车源图片数量,搜索包含图片最小数量,搜索有图车源时传入1,无图车源传入0,
     * </pre>
     *
     * <code>int32 PictureCount = 113;</code>
     */
    public Builder clearPictureCount() {
      
      pictureCount_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> bigAreaIdArray_ = java.util.Collections.emptyList();
    private void ensureBigAreaIdArrayIsMutable() {
      if (!((bitField0_ & 0x08000000) == 0x08000000)) {
        bigAreaIdArray_ = new java.util.ArrayList<java.lang.Integer>(bigAreaIdArray_);
        bitField0_ |= 0x08000000;
       }
    }
    /**
     * <pre>
     *大区ID数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 BigAreaIdArray = 114;</code>
     */
    public java.util.List<java.lang.Integer>
        getBigAreaIdArrayList() {
      return java.util.Collections.unmodifiableList(bigAreaIdArray_);
    }
    /**
     * <pre>
     *大区ID数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 BigAreaIdArray = 114;</code>
     */
    public int getBigAreaIdArrayCount() {
      return bigAreaIdArray_.size();
    }
    /**
     * <pre>
     *大区ID数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 BigAreaIdArray = 114;</code>
     */
    public int getBigAreaIdArray(int index) {
      return bigAreaIdArray_.get(index);
    }
    /**
     * <pre>
     *大区ID数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 BigAreaIdArray = 114;</code>
     */
    public Builder setBigAreaIdArray(
        int index, int value) {
      ensureBigAreaIdArrayIsMutable();
      bigAreaIdArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *大区ID数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 BigAreaIdArray = 114;</code>
     */
    public Builder addBigAreaIdArray(int value) {
      ensureBigAreaIdArrayIsMutable();
      bigAreaIdArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *大区ID数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 BigAreaIdArray = 114;</code>
     */
    public Builder addAllBigAreaIdArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureBigAreaIdArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, bigAreaIdArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *大区ID数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 BigAreaIdArray = 114;</code>
     */
    public Builder clearBigAreaIdArray() {
      bigAreaIdArray_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x08000000);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> provinceIdArray_ = java.util.Collections.emptyList();
    private void ensureProvinceIdArrayIsMutable() {
      if (!((bitField0_ & 0x10000000) == 0x10000000)) {
        provinceIdArray_ = new java.util.ArrayList<java.lang.Integer>(provinceIdArray_);
        bitField0_ |= 0x10000000;
       }
    }
    /**
     * <pre>
     *车源所在地--省份ID ,注意只有CityIdArray不傳參數時改屬性才生效
     * </pre>
     *
     * <code>repeated int32 ProvinceIdArray = 115;</code>
     */
    public java.util.List<java.lang.Integer>
        getProvinceIdArrayList() {
      return java.util.Collections.unmodifiableList(provinceIdArray_);
    }
    /**
     * <pre>
     *车源所在地--省份ID ,注意只有CityIdArray不傳參數時改屬性才生效
     * </pre>
     *
     * <code>repeated int32 ProvinceIdArray = 115;</code>
     */
    public int getProvinceIdArrayCount() {
      return provinceIdArray_.size();
    }
    /**
     * <pre>
     *车源所在地--省份ID ,注意只有CityIdArray不傳參數時改屬性才生效
     * </pre>
     *
     * <code>repeated int32 ProvinceIdArray = 115;</code>
     */
    public int getProvinceIdArray(int index) {
      return provinceIdArray_.get(index);
    }
    /**
     * <pre>
     *车源所在地--省份ID ,注意只有CityIdArray不傳參數時改屬性才生效
     * </pre>
     *
     * <code>repeated int32 ProvinceIdArray = 115;</code>
     */
    public Builder setProvinceIdArray(
        int index, int value) {
      ensureProvinceIdArrayIsMutable();
      provinceIdArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车源所在地--省份ID ,注意只有CityIdArray不傳參數時改屬性才生效
     * </pre>
     *
     * <code>repeated int32 ProvinceIdArray = 115;</code>
     */
    public Builder addProvinceIdArray(int value) {
      ensureProvinceIdArrayIsMutable();
      provinceIdArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车源所在地--省份ID ,注意只有CityIdArray不傳參數時改屬性才生效
     * </pre>
     *
     * <code>repeated int32 ProvinceIdArray = 115;</code>
     */
    public Builder addAllProvinceIdArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureProvinceIdArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, provinceIdArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车源所在地--省份ID ,注意只有CityIdArray不傳參數時改屬性才生效
     * </pre>
     *
     * <code>repeated int32 ProvinceIdArray = 115;</code>
     */
    public Builder clearProvinceIdArray() {
      provinceIdArray_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x10000000);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> cityIdArray_ = java.util.Collections.emptyList();
    private void ensureCityIdArrayIsMutable() {
      if (!((bitField0_ & 0x20000000) == 0x20000000)) {
        cityIdArray_ = new java.util.ArrayList<java.lang.Integer>(cityIdArray_);
        bitField0_ |= 0x20000000;
       }
    }
    /**
     * <pre>
     *车源所在城市ID
     * </pre>
     *
     * <code>repeated int32 CityIdArray = 116;</code>
     */
    public java.util.List<java.lang.Integer>
        getCityIdArrayList() {
      return java.util.Collections.unmodifiableList(cityIdArray_);
    }
    /**
     * <pre>
     *车源所在城市ID
     * </pre>
     *
     * <code>repeated int32 CityIdArray = 116;</code>
     */
    public int getCityIdArrayCount() {
      return cityIdArray_.size();
    }
    /**
     * <pre>
     *车源所在城市ID
     * </pre>
     *
     * <code>repeated int32 CityIdArray = 116;</code>
     */
    public int getCityIdArray(int index) {
      return cityIdArray_.get(index);
    }
    /**
     * <pre>
     *车源所在城市ID
     * </pre>
     *
     * <code>repeated int32 CityIdArray = 116;</code>
     */
    public Builder setCityIdArray(
        int index, int value) {
      ensureCityIdArrayIsMutable();
      cityIdArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车源所在城市ID
     * </pre>
     *
     * <code>repeated int32 CityIdArray = 116;</code>
     */
    public Builder addCityIdArray(int value) {
      ensureCityIdArrayIsMutable();
      cityIdArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车源所在城市ID
     * </pre>
     *
     * <code>repeated int32 CityIdArray = 116;</code>
     */
    public Builder addAllCityIdArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureCityIdArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, cityIdArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车源所在城市ID
     * </pre>
     *
     * <code>repeated int32 CityIdArray = 116;</code>
     */
    public Builder clearCityIdArray() {
      cityIdArray_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x20000000);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> noCityIdArray_ = java.util.Collections.emptyList();
    private void ensureNoCityIdArrayIsMutable() {
      if (!((bitField0_ & 0x40000000) == 0x40000000)) {
        noCityIdArray_ = new java.util.ArrayList<java.lang.Integer>(noCityIdArray_);
        bitField0_ |= 0x40000000;
       }
    }
    /**
     * <pre>
     *排除车源所在城市ID【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 NoCityIdArray = 117;</code>
     */
    public java.util.List<java.lang.Integer>
        getNoCityIdArrayList() {
      return java.util.Collections.unmodifiableList(noCityIdArray_);
    }
    /**
     * <pre>
     *排除车源所在城市ID【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 NoCityIdArray = 117;</code>
     */
    public int getNoCityIdArrayCount() {
      return noCityIdArray_.size();
    }
    /**
     * <pre>
     *排除车源所在城市ID【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 NoCityIdArray = 117;</code>
     */
    public int getNoCityIdArray(int index) {
      return noCityIdArray_.get(index);
    }
    /**
     * <pre>
     *排除车源所在城市ID【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 NoCityIdArray = 117;</code>
     */
    public Builder setNoCityIdArray(
        int index, int value) {
      ensureNoCityIdArrayIsMutable();
      noCityIdArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *排除车源所在城市ID【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 NoCityIdArray = 117;</code>
     */
    public Builder addNoCityIdArray(int value) {
      ensureNoCityIdArrayIsMutable();
      noCityIdArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *排除车源所在城市ID【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 NoCityIdArray = 117;</code>
     */
    public Builder addAllNoCityIdArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureNoCityIdArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, noCityIdArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *排除车源所在城市ID【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 NoCityIdArray = 117;</code>
     */
    public Builder clearNoCityIdArray() {
      noCityIdArray_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x40000000);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> relateCityArray_ = java.util.Collections.emptyList();
    private void ensureRelateCityArrayIsMutable() {
      if (!((bitField0_ & 0x80000000) == 0x80000000)) {
        relateCityArray_ = new java.util.ArrayList<java.lang.Integer>(relateCityArray_);
        bitField0_ |= 0x80000000;
       }
    }
    /**
     * <pre>
     *周边城市ID
     * </pre>
     *
     * <code>repeated int32 RelateCityArray = 118;</code>
     */
    public java.util.List<java.lang.Integer>
        getRelateCityArrayList() {
      return java.util.Collections.unmodifiableList(relateCityArray_);
    }
    /**
     * <pre>
     *周边城市ID
     * </pre>
     *
     * <code>repeated int32 RelateCityArray = 118;</code>
     */
    public int getRelateCityArrayCount() {
      return relateCityArray_.size();
    }
    /**
     * <pre>
     *周边城市ID
     * </pre>
     *
     * <code>repeated int32 RelateCityArray = 118;</code>
     */
    public int getRelateCityArray(int index) {
      return relateCityArray_.get(index);
    }
    /**
     * <pre>
     *周边城市ID
     * </pre>
     *
     * <code>repeated int32 RelateCityArray = 118;</code>
     */
    public Builder setRelateCityArray(
        int index, int value) {
      ensureRelateCityArrayIsMutable();
      relateCityArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *周边城市ID
     * </pre>
     *
     * <code>repeated int32 RelateCityArray = 118;</code>
     */
    public Builder addRelateCityArray(int value) {
      ensureRelateCityArrayIsMutable();
      relateCityArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *周边城市ID
     * </pre>
     *
     * <code>repeated int32 RelateCityArray = 118;</code>
     */
    public Builder addAllRelateCityArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureRelateCityArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, relateCityArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *周边城市ID
     * </pre>
     *
     * <code>repeated int32 RelateCityArray = 118;</code>
     */
    public Builder clearRelateCityArray() {
      relateCityArray_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x80000000);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Double> priceLowerArray_ = java.util.Collections.emptyList();
    private void ensurePriceLowerArrayIsMutable() {
      if (!((bitField1_ & 0x00000001) == 0x00000001)) {
        priceLowerArray_ = new java.util.ArrayList<java.lang.Double>(priceLowerArray_);
        bitField1_ |= 0x00000001;
       }
    }
    /**
     * <pre>
     *价格范围--最低价(单位"万") 
     * </pre>
     *
     * <code>repeated double PriceLowerArray = 119;</code>
     */
    public java.util.List<java.lang.Double>
        getPriceLowerArrayList() {
      return java.util.Collections.unmodifiableList(priceLowerArray_);
    }
    /**
     * <pre>
     *价格范围--最低价(单位"万") 
     * </pre>
     *
     * <code>repeated double PriceLowerArray = 119;</code>
     */
    public int getPriceLowerArrayCount() {
      return priceLowerArray_.size();
    }
    /**
     * <pre>
     *价格范围--最低价(单位"万") 
     * </pre>
     *
     * <code>repeated double PriceLowerArray = 119;</code>
     */
    public double getPriceLowerArray(int index) {
      return priceLowerArray_.get(index);
    }
    /**
     * <pre>
     *价格范围--最低价(单位"万") 
     * </pre>
     *
     * <code>repeated double PriceLowerArray = 119;</code>
     */
    public Builder setPriceLowerArray(
        int index, double value) {
      ensurePriceLowerArrayIsMutable();
      priceLowerArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *价格范围--最低价(单位"万") 
     * </pre>
     *
     * <code>repeated double PriceLowerArray = 119;</code>
     */
    public Builder addPriceLowerArray(double value) {
      ensurePriceLowerArrayIsMutable();
      priceLowerArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *价格范围--最低价(单位"万") 
     * </pre>
     *
     * <code>repeated double PriceLowerArray = 119;</code>
     */
    public Builder addAllPriceLowerArray(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensurePriceLowerArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, priceLowerArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *价格范围--最低价(单位"万") 
     * </pre>
     *
     * <code>repeated double PriceLowerArray = 119;</code>
     */
    public Builder clearPriceLowerArray() {
      priceLowerArray_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00000001);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Double> priceHighArray_ = java.util.Collections.emptyList();
    private void ensurePriceHighArrayIsMutable() {
      if (!((bitField1_ & 0x00000002) == 0x00000002)) {
        priceHighArray_ = new java.util.ArrayList<java.lang.Double>(priceHighArray_);
        bitField1_ |= 0x00000002;
       }
    }
    /**
     * <pre>
     *价格范围--最高价(单位"万") 
     * </pre>
     *
     * <code>repeated double PriceHighArray = 120;</code>
     */
    public java.util.List<java.lang.Double>
        getPriceHighArrayList() {
      return java.util.Collections.unmodifiableList(priceHighArray_);
    }
    /**
     * <pre>
     *价格范围--最高价(单位"万") 
     * </pre>
     *
     * <code>repeated double PriceHighArray = 120;</code>
     */
    public int getPriceHighArrayCount() {
      return priceHighArray_.size();
    }
    /**
     * <pre>
     *价格范围--最高价(单位"万") 
     * </pre>
     *
     * <code>repeated double PriceHighArray = 120;</code>
     */
    public double getPriceHighArray(int index) {
      return priceHighArray_.get(index);
    }
    /**
     * <pre>
     *价格范围--最高价(单位"万") 
     * </pre>
     *
     * <code>repeated double PriceHighArray = 120;</code>
     */
    public Builder setPriceHighArray(
        int index, double value) {
      ensurePriceHighArrayIsMutable();
      priceHighArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *价格范围--最高价(单位"万") 
     * </pre>
     *
     * <code>repeated double PriceHighArray = 120;</code>
     */
    public Builder addPriceHighArray(double value) {
      ensurePriceHighArrayIsMutable();
      priceHighArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *价格范围--最高价(单位"万") 
     * </pre>
     *
     * <code>repeated double PriceHighArray = 120;</code>
     */
    public Builder addAllPriceHighArray(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensurePriceHighArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, priceHighArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *价格范围--最高价(单位"万") 
     * </pre>
     *
     * <code>repeated double PriceHighArray = 120;</code>
     */
    public Builder clearPriceHighArray() {
      priceHighArray_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00000002);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Double> cPriceLowerArray_ = java.util.Collections.emptyList();
    private void ensureCPriceLowerArrayIsMutable() {
      if (!((bitField1_ & 0x00000004) == 0x00000004)) {
        cPriceLowerArray_ = new java.util.ArrayList<java.lang.Double>(cPriceLowerArray_);
        bitField1_ |= 0x00000004;
       }
    }
    /**
     * <pre>
     *厂商指导&gt;价格范围--最低价(单位"万") 
     * </pre>
     *
     * <code>repeated double CPriceLowerArray = 121;</code>
     */
    public java.util.List<java.lang.Double>
        getCPriceLowerArrayList() {
      return java.util.Collections.unmodifiableList(cPriceLowerArray_);
    }
    /**
     * <pre>
     *厂商指导&gt;价格范围--最低价(单位"万") 
     * </pre>
     *
     * <code>repeated double CPriceLowerArray = 121;</code>
     */
    public int getCPriceLowerArrayCount() {
      return cPriceLowerArray_.size();
    }
    /**
     * <pre>
     *厂商指导&gt;价格范围--最低价(单位"万") 
     * </pre>
     *
     * <code>repeated double CPriceLowerArray = 121;</code>
     */
    public double getCPriceLowerArray(int index) {
      return cPriceLowerArray_.get(index);
    }
    /**
     * <pre>
     *厂商指导&gt;价格范围--最低价(单位"万") 
     * </pre>
     *
     * <code>repeated double CPriceLowerArray = 121;</code>
     */
    public Builder setCPriceLowerArray(
        int index, double value) {
      ensureCPriceLowerArrayIsMutable();
      cPriceLowerArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *厂商指导&gt;价格范围--最低价(单位"万") 
     * </pre>
     *
     * <code>repeated double CPriceLowerArray = 121;</code>
     */
    public Builder addCPriceLowerArray(double value) {
      ensureCPriceLowerArrayIsMutable();
      cPriceLowerArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *厂商指导&gt;价格范围--最低价(单位"万") 
     * </pre>
     *
     * <code>repeated double CPriceLowerArray = 121;</code>
     */
    public Builder addAllCPriceLowerArray(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensureCPriceLowerArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, cPriceLowerArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *厂商指导&gt;价格范围--最低价(单位"万") 
     * </pre>
     *
     * <code>repeated double CPriceLowerArray = 121;</code>
     */
    public Builder clearCPriceLowerArray() {
      cPriceLowerArray_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00000004);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Double> cPriceHighArray_ = java.util.Collections.emptyList();
    private void ensureCPriceHighArrayIsMutable() {
      if (!((bitField1_ & 0x00000008) == 0x00000008)) {
        cPriceHighArray_ = new java.util.ArrayList<java.lang.Double>(cPriceHighArray_);
        bitField1_ |= 0x00000008;
       }
    }
    /**
     * <pre>
     *厂商指导&gt;价格范围--最高价(单位"万") 
     * </pre>
     *
     * <code>repeated double CPriceHighArray = 122;</code>
     */
    public java.util.List<java.lang.Double>
        getCPriceHighArrayList() {
      return java.util.Collections.unmodifiableList(cPriceHighArray_);
    }
    /**
     * <pre>
     *厂商指导&gt;价格范围--最高价(单位"万") 
     * </pre>
     *
     * <code>repeated double CPriceHighArray = 122;</code>
     */
    public int getCPriceHighArrayCount() {
      return cPriceHighArray_.size();
    }
    /**
     * <pre>
     *厂商指导&gt;价格范围--最高价(单位"万") 
     * </pre>
     *
     * <code>repeated double CPriceHighArray = 122;</code>
     */
    public double getCPriceHighArray(int index) {
      return cPriceHighArray_.get(index);
    }
    /**
     * <pre>
     *厂商指导&gt;价格范围--最高价(单位"万") 
     * </pre>
     *
     * <code>repeated double CPriceHighArray = 122;</code>
     */
    public Builder setCPriceHighArray(
        int index, double value) {
      ensureCPriceHighArrayIsMutable();
      cPriceHighArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *厂商指导&gt;价格范围--最高价(单位"万") 
     * </pre>
     *
     * <code>repeated double CPriceHighArray = 122;</code>
     */
    public Builder addCPriceHighArray(double value) {
      ensureCPriceHighArrayIsMutable();
      cPriceHighArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *厂商指导&gt;价格范围--最高价(单位"万") 
     * </pre>
     *
     * <code>repeated double CPriceHighArray = 122;</code>
     */
    public Builder addAllCPriceHighArray(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensureCPriceHighArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, cPriceHighArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *厂商指导&gt;价格范围--最高价(单位"万") 
     * </pre>
     *
     * <code>repeated double CPriceHighArray = 122;</code>
     */
    public Builder clearCPriceHighArray() {
      cPriceHighArray_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00000008);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Double> b2BPriceLowerArray_ = java.util.Collections.emptyList();
    private void ensureB2BPriceLowerArrayIsMutable() {
      if (!((bitField1_ & 0x00000010) == 0x00000010)) {
        b2BPriceLowerArray_ = new java.util.ArrayList<java.lang.Double>(b2BPriceLowerArray_);
        bitField1_ |= 0x00000010;
       }
    }
    /**
     * <pre>
     *批发价（B2BPrice）-价格范围--最低价(单位"万")  --2016-04-28
     * </pre>
     *
     * <code>repeated double B2BPriceLowerArray = 123;</code>
     */
    public java.util.List<java.lang.Double>
        getB2BPriceLowerArrayList() {
      return java.util.Collections.unmodifiableList(b2BPriceLowerArray_);
    }
    /**
     * <pre>
     *批发价（B2BPrice）-价格范围--最低价(单位"万")  --2016-04-28
     * </pre>
     *
     * <code>repeated double B2BPriceLowerArray = 123;</code>
     */
    public int getB2BPriceLowerArrayCount() {
      return b2BPriceLowerArray_.size();
    }
    /**
     * <pre>
     *批发价（B2BPrice）-价格范围--最低价(单位"万")  --2016-04-28
     * </pre>
     *
     * <code>repeated double B2BPriceLowerArray = 123;</code>
     */
    public double getB2BPriceLowerArray(int index) {
      return b2BPriceLowerArray_.get(index);
    }
    /**
     * <pre>
     *批发价（B2BPrice）-价格范围--最低价(单位"万")  --2016-04-28
     * </pre>
     *
     * <code>repeated double B2BPriceLowerArray = 123;</code>
     */
    public Builder setB2BPriceLowerArray(
        int index, double value) {
      ensureB2BPriceLowerArrayIsMutable();
      b2BPriceLowerArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *批发价（B2BPrice）-价格范围--最低价(单位"万")  --2016-04-28
     * </pre>
     *
     * <code>repeated double B2BPriceLowerArray = 123;</code>
     */
    public Builder addB2BPriceLowerArray(double value) {
      ensureB2BPriceLowerArrayIsMutable();
      b2BPriceLowerArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *批发价（B2BPrice）-价格范围--最低价(单位"万")  --2016-04-28
     * </pre>
     *
     * <code>repeated double B2BPriceLowerArray = 123;</code>
     */
    public Builder addAllB2BPriceLowerArray(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensureB2BPriceLowerArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, b2BPriceLowerArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *批发价（B2BPrice）-价格范围--最低价(单位"万")  --2016-04-28
     * </pre>
     *
     * <code>repeated double B2BPriceLowerArray = 123;</code>
     */
    public Builder clearB2BPriceLowerArray() {
      b2BPriceLowerArray_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00000010);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Double> b2BPriceHighArray_ = java.util.Collections.emptyList();
    private void ensureB2BPriceHighArrayIsMutable() {
      if (!((bitField1_ & 0x00000020) == 0x00000020)) {
        b2BPriceHighArray_ = new java.util.ArrayList<java.lang.Double>(b2BPriceHighArray_);
        bitField1_ |= 0x00000020;
       }
    }
    /**
     * <pre>
     *批发价（B2BPrice）-价格范围--最高价(单位"万")   --2016-04-28
     * </pre>
     *
     * <code>repeated double B2BPriceHighArray = 124;</code>
     */
    public java.util.List<java.lang.Double>
        getB2BPriceHighArrayList() {
      return java.util.Collections.unmodifiableList(b2BPriceHighArray_);
    }
    /**
     * <pre>
     *批发价（B2BPrice）-价格范围--最高价(单位"万")   --2016-04-28
     * </pre>
     *
     * <code>repeated double B2BPriceHighArray = 124;</code>
     */
    public int getB2BPriceHighArrayCount() {
      return b2BPriceHighArray_.size();
    }
    /**
     * <pre>
     *批发价（B2BPrice）-价格范围--最高价(单位"万")   --2016-04-28
     * </pre>
     *
     * <code>repeated double B2BPriceHighArray = 124;</code>
     */
    public double getB2BPriceHighArray(int index) {
      return b2BPriceHighArray_.get(index);
    }
    /**
     * <pre>
     *批发价（B2BPrice）-价格范围--最高价(单位"万")   --2016-04-28
     * </pre>
     *
     * <code>repeated double B2BPriceHighArray = 124;</code>
     */
    public Builder setB2BPriceHighArray(
        int index, double value) {
      ensureB2BPriceHighArrayIsMutable();
      b2BPriceHighArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *批发价（B2BPrice）-价格范围--最高价(单位"万")   --2016-04-28
     * </pre>
     *
     * <code>repeated double B2BPriceHighArray = 124;</code>
     */
    public Builder addB2BPriceHighArray(double value) {
      ensureB2BPriceHighArrayIsMutable();
      b2BPriceHighArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *批发价（B2BPrice）-价格范围--最高价(单位"万")   --2016-04-28
     * </pre>
     *
     * <code>repeated double B2BPriceHighArray = 124;</code>
     */
    public Builder addAllB2BPriceHighArray(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensureB2BPriceHighArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, b2BPriceHighArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *批发价（B2BPrice）-价格范围--最高价(单位"万")   --2016-04-28
     * </pre>
     *
     * <code>repeated double B2BPriceHighArray = 124;</code>
     */
    public Builder clearB2BPriceHighArray() {
      b2BPriceHighArray_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00000020);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> carAgeLowerArray_ = java.util.Collections.emptyList();
    private void ensureCarAgeLowerArrayIsMutable() {
      if (!((bitField1_ & 0x00000040) == 0x00000040)) {
        carAgeLowerArray_ = new java.util.ArrayList<java.lang.Integer>(carAgeLowerArray_);
        bitField1_ |= 0x00000040;
       }
    }
    /**
     * <pre>
     *车龄范围--最低值 
     * </pre>
     *
     * <code>repeated int32 CarAgeLowerArray = 125;</code>
     */
    public java.util.List<java.lang.Integer>
        getCarAgeLowerArrayList() {
      return java.util.Collections.unmodifiableList(carAgeLowerArray_);
    }
    /**
     * <pre>
     *车龄范围--最低值 
     * </pre>
     *
     * <code>repeated int32 CarAgeLowerArray = 125;</code>
     */
    public int getCarAgeLowerArrayCount() {
      return carAgeLowerArray_.size();
    }
    /**
     * <pre>
     *车龄范围--最低值 
     * </pre>
     *
     * <code>repeated int32 CarAgeLowerArray = 125;</code>
     */
    public int getCarAgeLowerArray(int index) {
      return carAgeLowerArray_.get(index);
    }
    /**
     * <pre>
     *车龄范围--最低值 
     * </pre>
     *
     * <code>repeated int32 CarAgeLowerArray = 125;</code>
     */
    public Builder setCarAgeLowerArray(
        int index, int value) {
      ensureCarAgeLowerArrayIsMutable();
      carAgeLowerArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车龄范围--最低值 
     * </pre>
     *
     * <code>repeated int32 CarAgeLowerArray = 125;</code>
     */
    public Builder addCarAgeLowerArray(int value) {
      ensureCarAgeLowerArrayIsMutable();
      carAgeLowerArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车龄范围--最低值 
     * </pre>
     *
     * <code>repeated int32 CarAgeLowerArray = 125;</code>
     */
    public Builder addAllCarAgeLowerArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureCarAgeLowerArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, carAgeLowerArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车龄范围--最低值 
     * </pre>
     *
     * <code>repeated int32 CarAgeLowerArray = 125;</code>
     */
    public Builder clearCarAgeLowerArray() {
      carAgeLowerArray_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00000040);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> carAgeHighArray_ = java.util.Collections.emptyList();
    private void ensureCarAgeHighArrayIsMutable() {
      if (!((bitField1_ & 0x00000080) == 0x00000080)) {
        carAgeHighArray_ = new java.util.ArrayList<java.lang.Integer>(carAgeHighArray_);
        bitField1_ |= 0x00000080;
       }
    }
    /**
     * <pre>
     *车龄范围--最高值 
     * </pre>
     *
     * <code>repeated int32 CarAgeHighArray = 126;</code>
     */
    public java.util.List<java.lang.Integer>
        getCarAgeHighArrayList() {
      return java.util.Collections.unmodifiableList(carAgeHighArray_);
    }
    /**
     * <pre>
     *车龄范围--最高值 
     * </pre>
     *
     * <code>repeated int32 CarAgeHighArray = 126;</code>
     */
    public int getCarAgeHighArrayCount() {
      return carAgeHighArray_.size();
    }
    /**
     * <pre>
     *车龄范围--最高值 
     * </pre>
     *
     * <code>repeated int32 CarAgeHighArray = 126;</code>
     */
    public int getCarAgeHighArray(int index) {
      return carAgeHighArray_.get(index);
    }
    /**
     * <pre>
     *车龄范围--最高值 
     * </pre>
     *
     * <code>repeated int32 CarAgeHighArray = 126;</code>
     */
    public Builder setCarAgeHighArray(
        int index, int value) {
      ensureCarAgeHighArrayIsMutable();
      carAgeHighArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车龄范围--最高值 
     * </pre>
     *
     * <code>repeated int32 CarAgeHighArray = 126;</code>
     */
    public Builder addCarAgeHighArray(int value) {
      ensureCarAgeHighArrayIsMutable();
      carAgeHighArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车龄范围--最高值 
     * </pre>
     *
     * <code>repeated int32 CarAgeHighArray = 126;</code>
     */
    public Builder addAllCarAgeHighArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureCarAgeHighArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, carAgeHighArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车龄范围--最高值 
     * </pre>
     *
     * <code>repeated int32 CarAgeHighArray = 126;</code>
     */
    public Builder clearCarAgeHighArray() {
      carAgeHighArray_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00000080);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> drivingMileageLowerArray_ = java.util.Collections.emptyList();
    private void ensureDrivingMileageLowerArrayIsMutable() {
      if (!((bitField1_ & 0x00000100) == 0x00000100)) {
        drivingMileageLowerArray_ = new java.util.ArrayList<java.lang.Integer>(drivingMileageLowerArray_);
        bitField1_ |= 0x00000100;
       }
    }
    /**
     * <pre>
     *行驶里程--最低值（单位：万公里）
     * </pre>
     *
     * <code>repeated int32 DrivingMileageLowerArray = 127;</code>
     */
    public java.util.List<java.lang.Integer>
        getDrivingMileageLowerArrayList() {
      return java.util.Collections.unmodifiableList(drivingMileageLowerArray_);
    }
    /**
     * <pre>
     *行驶里程--最低值（单位：万公里）
     * </pre>
     *
     * <code>repeated int32 DrivingMileageLowerArray = 127;</code>
     */
    public int getDrivingMileageLowerArrayCount() {
      return drivingMileageLowerArray_.size();
    }
    /**
     * <pre>
     *行驶里程--最低值（单位：万公里）
     * </pre>
     *
     * <code>repeated int32 DrivingMileageLowerArray = 127;</code>
     */
    public int getDrivingMileageLowerArray(int index) {
      return drivingMileageLowerArray_.get(index);
    }
    /**
     * <pre>
     *行驶里程--最低值（单位：万公里）
     * </pre>
     *
     * <code>repeated int32 DrivingMileageLowerArray = 127;</code>
     */
    public Builder setDrivingMileageLowerArray(
        int index, int value) {
      ensureDrivingMileageLowerArrayIsMutable();
      drivingMileageLowerArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *行驶里程--最低值（单位：万公里）
     * </pre>
     *
     * <code>repeated int32 DrivingMileageLowerArray = 127;</code>
     */
    public Builder addDrivingMileageLowerArray(int value) {
      ensureDrivingMileageLowerArrayIsMutable();
      drivingMileageLowerArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *行驶里程--最低值（单位：万公里）
     * </pre>
     *
     * <code>repeated int32 DrivingMileageLowerArray = 127;</code>
     */
    public Builder addAllDrivingMileageLowerArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureDrivingMileageLowerArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, drivingMileageLowerArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *行驶里程--最低值（单位：万公里）
     * </pre>
     *
     * <code>repeated int32 DrivingMileageLowerArray = 127;</code>
     */
    public Builder clearDrivingMileageLowerArray() {
      drivingMileageLowerArray_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00000100);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> drivingMileageHighArray_ = java.util.Collections.emptyList();
    private void ensureDrivingMileageHighArrayIsMutable() {
      if (!((bitField1_ & 0x00000200) == 0x00000200)) {
        drivingMileageHighArray_ = new java.util.ArrayList<java.lang.Integer>(drivingMileageHighArray_);
        bitField1_ |= 0x00000200;
       }
    }
    /**
     * <pre>
     *行驶里程--最高值（单位：万公里）
     * </pre>
     *
     * <code>repeated int32 DrivingMileageHighArray = 128;</code>
     */
    public java.util.List<java.lang.Integer>
        getDrivingMileageHighArrayList() {
      return java.util.Collections.unmodifiableList(drivingMileageHighArray_);
    }
    /**
     * <pre>
     *行驶里程--最高值（单位：万公里）
     * </pre>
     *
     * <code>repeated int32 DrivingMileageHighArray = 128;</code>
     */
    public int getDrivingMileageHighArrayCount() {
      return drivingMileageHighArray_.size();
    }
    /**
     * <pre>
     *行驶里程--最高值（单位：万公里）
     * </pre>
     *
     * <code>repeated int32 DrivingMileageHighArray = 128;</code>
     */
    public int getDrivingMileageHighArray(int index) {
      return drivingMileageHighArray_.get(index);
    }
    /**
     * <pre>
     *行驶里程--最高值（单位：万公里）
     * </pre>
     *
     * <code>repeated int32 DrivingMileageHighArray = 128;</code>
     */
    public Builder setDrivingMileageHighArray(
        int index, int value) {
      ensureDrivingMileageHighArrayIsMutable();
      drivingMileageHighArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *行驶里程--最高值（单位：万公里）
     * </pre>
     *
     * <code>repeated int32 DrivingMileageHighArray = 128;</code>
     */
    public Builder addDrivingMileageHighArray(int value) {
      ensureDrivingMileageHighArrayIsMutable();
      drivingMileageHighArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *行驶里程--最高值（单位：万公里）
     * </pre>
     *
     * <code>repeated int32 DrivingMileageHighArray = 128;</code>
     */
    public Builder addAllDrivingMileageHighArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureDrivingMileageHighArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, drivingMileageHighArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *行驶里程--最高值（单位：万公里）
     * </pre>
     *
     * <code>repeated int32 DrivingMileageHighArray = 128;</code>
     */
    public Builder clearDrivingMileageHighArray() {
      drivingMileageHighArray_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00000200);
      onChanged();
      return this;
    }

    private int superiorId_ ;
    /**
     * <pre>
     *经销商上级公司ID（即厂商ID）(针对商家车源)
     * </pre>
     *
     * <code>int32 SuperiorId = 129;</code>
     */
    public int getSuperiorId() {
      return superiorId_;
    }
    /**
     * <pre>
     *经销商上级公司ID（即厂商ID）(针对商家车源)
     * </pre>
     *
     * <code>int32 SuperiorId = 129;</code>
     */
    public Builder setSuperiorId(int value) {
      
      superiorId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *经销商上级公司ID（即厂商ID）(针对商家车源)
     * </pre>
     *
     * <code>int32 SuperiorId = 129;</code>
     */
    public Builder clearSuperiorId() {
      
      superiorId_ = 0;
      onChanged();
      return this;
    }

    private int userType_ ;
    /**
     * <pre>
     *商家车源来源类型(UserType字段)
     * </pre>
     *
     * <code>int32 UserType = 130;</code>
     */
    public int getUserType() {
      return userType_;
    }
    /**
     * <pre>
     *商家车源来源类型(UserType字段)
     * </pre>
     *
     * <code>int32 UserType = 130;</code>
     */
    public Builder setUserType(int value) {
      
      userType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *商家车源来源类型(UserType字段)
     * </pre>
     *
     * <code>int32 UserType = 130;</code>
     */
    public Builder clearUserType() {
      
      userType_ = 0;
      onChanged();
      return this;
    }

    private int isNeglect_ ;
    /**
     * <pre>
     *审核状态 0为待审核；1为已审核；2为待复审；-1为暂不审核；-2为暂不复审   
     * </pre>
     *
     * <code>int32 IsNeglect = 131;</code>
     */
    public int getIsNeglect() {
      return isNeglect_;
    }
    /**
     * <pre>
     *审核状态 0为待审核；1为已审核；2为待复审；-1为暂不审核；-2为暂不复审   
     * </pre>
     *
     * <code>int32 IsNeglect = 131;</code>
     */
    public Builder setIsNeglect(int value) {
      
      isNeglect_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *审核状态 0为待审核；1为已审核；2为待复审；-1为暂不审核；-2为暂不复审   
     * </pre>
     *
     * <code>int32 IsNeglect = 131;</code>
     */
    public Builder clearIsNeglect() {
      
      isNeglect_ = 0;
      onChanged();
      return this;
    }

    private int isVideo_ ;
    /**
     * <pre>
     *是否包含视频(参数含义：按照数据库中IsVideoCar定义)
     * </pre>
     *
     * <code>int32 IsVideo = 132;</code>
     */
    public int getIsVideo() {
      return isVideo_;
    }
    /**
     * <pre>
     *是否包含视频(参数含义：按照数据库中IsVideoCar定义)
     * </pre>
     *
     * <code>int32 IsVideo = 132;</code>
     */
    public Builder setIsVideo(int value) {
      
      isVideo_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *是否包含视频(参数含义：按照数据库中IsVideoCar定义)
     * </pre>
     *
     * <code>int32 IsVideo = 132;</code>
     */
    public Builder clearIsVideo() {
      
      isVideo_ = 0;
      onChanged();
      return this;
    }

    private int isFirstPicTrue_ ;
    /**
     * <pre>
     *是否首图确认  -1为不合格；0为待审核；1为首图合格
     * </pre>
     *
     * <code>int32 IsFirstPicTrue = 133;</code>
     */
    public int getIsFirstPicTrue() {
      return isFirstPicTrue_;
    }
    /**
     * <pre>
     *是否首图确认  -1为不合格；0为待审核；1为首图合格
     * </pre>
     *
     * <code>int32 IsFirstPicTrue = 133;</code>
     */
    public Builder setIsFirstPicTrue(int value) {
      
      isFirstPicTrue_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *是否首图确认  -1为不合格；0为待审核；1为首图合格
     * </pre>
     *
     * <code>int32 IsFirstPicTrue = 133;</code>
     */
    public Builder clearIsFirstPicTrue() {
      
      isFirstPicTrue_ = 0;
      onChanged();
      return this;
    }

    private int isDealerRecommend_ ;
    /**
     * <pre>
     *是否商家推荐车源
     * </pre>
     *
     * <code>int32 IsDealerRecommend = 134;</code>
     */
    public int getIsDealerRecommend() {
      return isDealerRecommend_;
    }
    /**
     * <pre>
     *是否商家推荐车源
     * </pre>
     *
     * <code>int32 IsDealerRecommend = 134;</code>
     */
    public Builder setIsDealerRecommend(int value) {
      
      isDealerRecommend_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *是否商家推荐车源
     * </pre>
     *
     * <code>int32 IsDealerRecommend = 134;</code>
     */
    public Builder clearIsDealerRecommend() {
      
      isDealerRecommend_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> carSourceTypeArray_ = java.util.Collections.emptyList();
    private void ensureCarSourceTypeArrayIsMutable() {
      if (!((bitField1_ & 0x00010000) == 0x00010000)) {
        carSourceTypeArray_ = new java.util.ArrayList<java.lang.Integer>(carSourceTypeArray_);
        bitField1_ |= 0x00010000;
       }
    }
    /**
     * <pre>
     *车源来源类型  车辆类别(用途)：0-非营运 1-营运 2-营转非 3-租赁
     * </pre>
     *
     * <code>repeated int32 CarSourceTypeArray = 135;</code>
     */
    public java.util.List<java.lang.Integer>
        getCarSourceTypeArrayList() {
      return java.util.Collections.unmodifiableList(carSourceTypeArray_);
    }
    /**
     * <pre>
     *车源来源类型  车辆类别(用途)：0-非营运 1-营运 2-营转非 3-租赁
     * </pre>
     *
     * <code>repeated int32 CarSourceTypeArray = 135;</code>
     */
    public int getCarSourceTypeArrayCount() {
      return carSourceTypeArray_.size();
    }
    /**
     * <pre>
     *车源来源类型  车辆类别(用途)：0-非营运 1-营运 2-营转非 3-租赁
     * </pre>
     *
     * <code>repeated int32 CarSourceTypeArray = 135;</code>
     */
    public int getCarSourceTypeArray(int index) {
      return carSourceTypeArray_.get(index);
    }
    /**
     * <pre>
     *车源来源类型  车辆类别(用途)：0-非营运 1-营运 2-营转非 3-租赁
     * </pre>
     *
     * <code>repeated int32 CarSourceTypeArray = 135;</code>
     */
    public Builder setCarSourceTypeArray(
        int index, int value) {
      ensureCarSourceTypeArrayIsMutable();
      carSourceTypeArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车源来源类型  车辆类别(用途)：0-非营运 1-营运 2-营转非 3-租赁
     * </pre>
     *
     * <code>repeated int32 CarSourceTypeArray = 135;</code>
     */
    public Builder addCarSourceTypeArray(int value) {
      ensureCarSourceTypeArrayIsMutable();
      carSourceTypeArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车源来源类型  车辆类别(用途)：0-非营运 1-营运 2-营转非 3-租赁
     * </pre>
     *
     * <code>repeated int32 CarSourceTypeArray = 135;</code>
     */
    public Builder addAllCarSourceTypeArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureCarSourceTypeArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, carSourceTypeArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车源来源类型  车辆类别(用途)：0-非营运 1-营运 2-营转非 3-租赁
     * </pre>
     *
     * <code>repeated int32 CarSourceTypeArray = 135;</code>
     */
    public Builder clearCarSourceTypeArray() {
      carSourceTypeArray_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00010000);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> carTypeConfig_ = java.util.Collections.emptyList();
    private void ensureCarTypeConfigIsMutable() {
      if (!((bitField1_ & 0x00020000) == 0x00020000)) {
        carTypeConfig_ = new java.util.ArrayList<java.lang.Integer>(carTypeConfig_);
        bitField1_ |= 0x00020000;
       }
    }
    /**
     * <pre>
     *车型配置 ： 010100000110111110 共计18位,将参数转化为18位的数组传入,如果那“一位”不参与查询 设置为-1 ,例如：new int[] { 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 };
     * </pre>
     *
     * <code>repeated int32 CarTypeConfig = 136;</code>
     */
    public java.util.List<java.lang.Integer>
        getCarTypeConfigList() {
      return java.util.Collections.unmodifiableList(carTypeConfig_);
    }
    /**
     * <pre>
     *车型配置 ： 010100000110111110 共计18位,将参数转化为18位的数组传入,如果那“一位”不参与查询 设置为-1 ,例如：new int[] { 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 };
     * </pre>
     *
     * <code>repeated int32 CarTypeConfig = 136;</code>
     */
    public int getCarTypeConfigCount() {
      return carTypeConfig_.size();
    }
    /**
     * <pre>
     *车型配置 ： 010100000110111110 共计18位,将参数转化为18位的数组传入,如果那“一位”不参与查询 设置为-1 ,例如：new int[] { 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 };
     * </pre>
     *
     * <code>repeated int32 CarTypeConfig = 136;</code>
     */
    public int getCarTypeConfig(int index) {
      return carTypeConfig_.get(index);
    }
    /**
     * <pre>
     *车型配置 ： 010100000110111110 共计18位,将参数转化为18位的数组传入,如果那“一位”不参与查询 设置为-1 ,例如：new int[] { 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 };
     * </pre>
     *
     * <code>repeated int32 CarTypeConfig = 136;</code>
     */
    public Builder setCarTypeConfig(
        int index, int value) {
      ensureCarTypeConfigIsMutable();
      carTypeConfig_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车型配置 ： 010100000110111110 共计18位,将参数转化为18位的数组传入,如果那“一位”不参与查询 设置为-1 ,例如：new int[] { 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 };
     * </pre>
     *
     * <code>repeated int32 CarTypeConfig = 136;</code>
     */
    public Builder addCarTypeConfig(int value) {
      ensureCarTypeConfigIsMutable();
      carTypeConfig_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车型配置 ： 010100000110111110 共计18位,将参数转化为18位的数组传入,如果那“一位”不参与查询 设置为-1 ,例如：new int[] { 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 };
     * </pre>
     *
     * <code>repeated int32 CarTypeConfig = 136;</code>
     */
    public Builder addAllCarTypeConfig(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureCarTypeConfigIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, carTypeConfig_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车型配置 ： 010100000110111110 共计18位,将参数转化为18位的数组传入,如果那“一位”不参与查询 设置为-1 ,例如：new int[] { 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 };
     * </pre>
     *
     * <code>repeated int32 CarTypeConfig = 136;</code>
     */
    public Builder clearCarTypeConfig() {
      carTypeConfig_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00020000);
      onChanged();
      return this;
    }

    private int isRecommendGL_ ;
    /**
     * <pre>
     *是否豪车：  1 是
     * </pre>
     *
     * <code>int32 IsRecommendGL = 137;</code>
     */
    public int getIsRecommendGL() {
      return isRecommendGL_;
    }
    /**
     * <pre>
     *是否豪车：  1 是
     * </pre>
     *
     * <code>int32 IsRecommendGL = 137;</code>
     */
    public Builder setIsRecommendGL(int value) {
      
      isRecommendGL_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *是否豪车：  1 是
     * </pre>
     *
     * <code>int32 IsRecommendGL = 137;</code>
     */
    public Builder clearIsRecommendGL() {
      
      isRecommendGL_ = 0;
      onChanged();
      return this;
    }

    private int isWarranty_ ;
    /**
     * <pre>
     *是否保障车：  1 是 ,默认0(不参与查询)
     * </pre>
     *
     * <code>int32 IsWarranty = 138;</code>
     */
    public int getIsWarranty() {
      return isWarranty_;
    }
    /**
     * <pre>
     *是否保障车：  1 是 ,默认0(不参与查询)
     * </pre>
     *
     * <code>int32 IsWarranty = 138;</code>
     */
    public Builder setIsWarranty(int value) {
      
      isWarranty_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *是否保障车：  1 是 ,默认0(不参与查询)
     * </pre>
     *
     * <code>int32 IsWarranty = 138;</code>
     */
    public Builder clearIsWarranty() {
      
      isWarranty_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> warrantyTypeArray_ = java.util.Collections.emptyList();
    private void ensureWarrantyTypeArrayIsMutable() {
      if (!((bitField1_ & 0x00100000) == 0x00100000)) {
        warrantyTypeArray_ = new java.util.ArrayList<java.lang.Integer>(warrantyTypeArray_);
        bitField1_ |= 0x00100000;
       }
    }
    /**
     * <pre>
     *保障服务类型 ： 101 共计3位,将参数转化为3位的数组传入,如果那“一位”不参与查询 设置为-1 ,例如：new int[] { 0, 1, -1};  注：可能会大于3位长度(查询会自适应)  lijunhao 2015-02-26
     * </pre>
     *
     * <code>repeated int32 WarrantyTypeArray = 139;</code>
     */
    public java.util.List<java.lang.Integer>
        getWarrantyTypeArrayList() {
      return java.util.Collections.unmodifiableList(warrantyTypeArray_);
    }
    /**
     * <pre>
     *保障服务类型 ： 101 共计3位,将参数转化为3位的数组传入,如果那“一位”不参与查询 设置为-1 ,例如：new int[] { 0, 1, -1};  注：可能会大于3位长度(查询会自适应)  lijunhao 2015-02-26
     * </pre>
     *
     * <code>repeated int32 WarrantyTypeArray = 139;</code>
     */
    public int getWarrantyTypeArrayCount() {
      return warrantyTypeArray_.size();
    }
    /**
     * <pre>
     *保障服务类型 ： 101 共计3位,将参数转化为3位的数组传入,如果那“一位”不参与查询 设置为-1 ,例如：new int[] { 0, 1, -1};  注：可能会大于3位长度(查询会自适应)  lijunhao 2015-02-26
     * </pre>
     *
     * <code>repeated int32 WarrantyTypeArray = 139;</code>
     */
    public int getWarrantyTypeArray(int index) {
      return warrantyTypeArray_.get(index);
    }
    /**
     * <pre>
     *保障服务类型 ： 101 共计3位,将参数转化为3位的数组传入,如果那“一位”不参与查询 设置为-1 ,例如：new int[] { 0, 1, -1};  注：可能会大于3位长度(查询会自适应)  lijunhao 2015-02-26
     * </pre>
     *
     * <code>repeated int32 WarrantyTypeArray = 139;</code>
     */
    public Builder setWarrantyTypeArray(
        int index, int value) {
      ensureWarrantyTypeArrayIsMutable();
      warrantyTypeArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *保障服务类型 ： 101 共计3位,将参数转化为3位的数组传入,如果那“一位”不参与查询 设置为-1 ,例如：new int[] { 0, 1, -1};  注：可能会大于3位长度(查询会自适应)  lijunhao 2015-02-26
     * </pre>
     *
     * <code>repeated int32 WarrantyTypeArray = 139;</code>
     */
    public Builder addWarrantyTypeArray(int value) {
      ensureWarrantyTypeArrayIsMutable();
      warrantyTypeArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *保障服务类型 ： 101 共计3位,将参数转化为3位的数组传入,如果那“一位”不参与查询 设置为-1 ,例如：new int[] { 0, 1, -1};  注：可能会大于3位长度(查询会自适应)  lijunhao 2015-02-26
     * </pre>
     *
     * <code>repeated int32 WarrantyTypeArray = 139;</code>
     */
    public Builder addAllWarrantyTypeArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureWarrantyTypeArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, warrantyTypeArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *保障服务类型 ： 101 共计3位,将参数转化为3位的数组传入,如果那“一位”不参与查询 设置为-1 ,例如：new int[] { 0, 1, -1};  注：可能会大于3位长度(查询会自适应)  lijunhao 2015-02-26
     * </pre>
     *
     * <code>repeated int32 WarrantyTypeArray = 139;</code>
     */
    public Builder clearWarrantyTypeArray() {
      warrantyTypeArray_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x00100000);
      onChanged();
      return this;
    }

    private int isTop_ ;
    /**
     * <pre>
     *是否置顶车源（车源营销---置顶推广）：  1 是,默认0(不参与查询)
     * </pre>
     *
     * <code>int32 IsTop = 140;</code>
     */
    public int getIsTop() {
      return isTop_;
    }
    /**
     * <pre>
     *是否置顶车源（车源营销---置顶推广）：  1 是,默认0(不参与查询)
     * </pre>
     *
     * <code>int32 IsTop = 140;</code>
     */
    public Builder setIsTop(int value) {
      
      isTop_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *是否置顶车源（车源营销---置顶推广）：  1 是,默认0(不参与查询)
     * </pre>
     *
     * <code>int32 IsTop = 140;</code>
     */
    public Builder clearIsTop() {
      
      isTop_ = 0;
      onChanged();
      return this;
    }

    private int isActivity_ ;
    /**
     * <pre>
     *是否参加特定活动的车源：1为参加，0为不参加    --- 20151016 当前：2015年双十一活动,2016年66购车节活动
     * </pre>
     *
     * <code>int32 IsActivity = 141;</code>
     */
    public int getIsActivity() {
      return isActivity_;
    }
    /**
     * <pre>
     *是否参加特定活动的车源：1为参加，0为不参加    --- 20151016 当前：2015年双十一活动,2016年66购车节活动
     * </pre>
     *
     * <code>int32 IsActivity = 141;</code>
     */
    public Builder setIsActivity(int value) {
      
      isActivity_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *是否参加特定活动的车源：1为参加，0为不参加    --- 20151016 当前：2015年双十一活动,2016年66购车节活动
     * </pre>
     *
     * <code>int32 IsActivity = 141;</code>
     */
    public Builder clearIsActivity() {
      
      isActivity_ = 0;
      onChanged();
      return this;
    }

    private int isBangmai_ ;
    /**
     * <pre>
     *是否帮买车源：1为参加，0为不参加    --- 20151208
     * </pre>
     *
     * <code>int32 IsBangmai = 142;</code>
     */
    public int getIsBangmai() {
      return isBangmai_;
    }
    /**
     * <pre>
     *是否帮买车源：1为参加，0为不参加    --- 20151208
     * </pre>
     *
     * <code>int32 IsBangmai = 142;</code>
     */
    public Builder setIsBangmai(int value) {
      
      isBangmai_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *是否帮买车源：1为参加，0为不参加    --- 20151208
     * </pre>
     *
     * <code>int32 IsBangmai = 142;</code>
     */
    public Builder clearIsBangmai() {
      
      isBangmai_ = 0;
      onChanged();
      return this;
    }

    private int isBangmaiche_ ;
    /**
     * <pre>
     *是否参加淘车的帮买车APP车源：1为参加，0为不参加    --- 20160217
     * </pre>
     *
     * <code>int32 IsBangmaiche = 143;</code>
     */
    public int getIsBangmaiche() {
      return isBangmaiche_;
    }
    /**
     * <pre>
     *是否参加淘车的帮买车APP车源：1为参加，0为不参加    --- 20160217
     * </pre>
     *
     * <code>int32 IsBangmaiche = 143;</code>
     */
    public Builder setIsBangmaiche(int value) {
      
      isBangmaiche_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *是否参加淘车的帮买车APP车源：1为参加，0为不参加    --- 20160217
     * </pre>
     *
     * <code>int32 IsBangmaiche = 143;</code>
     */
    public Builder clearIsBangmaiche() {
      
      isBangmaiche_ = 0;
      onChanged();
      return this;
    }

    private int isShowMr_ ;
    /**
     * <pre>
     *是否显示维保记录：1为显示，0为不显示    --- 20160202
     * </pre>
     *
     * <code>int32 IsShowMr = 144;</code>
     */
    public int getIsShowMr() {
      return isShowMr_;
    }
    /**
     * <pre>
     *是否显示维保记录：1为显示，0为不显示    --- 20160202
     * </pre>
     *
     * <code>int32 IsShowMr = 144;</code>
     */
    public Builder setIsShowMr(int value) {
      
      isShowMr_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *是否显示维保记录：1为显示，0为不显示    --- 20160202
     * </pre>
     *
     * <code>int32 IsShowMr = 144;</code>
     */
    public Builder clearIsShowMr() {
      
      isShowMr_ = 0;
      onChanged();
      return this;
    }

    private int isCarId_ ;
    /**
     * <pre>
     *是否包含车型ID，即车型ID是否大于0    ----2016-02-22
     * </pre>
     *
     * <code>int32 IsCarId = 145;</code>
     */
    public int getIsCarId() {
      return isCarId_;
    }
    /**
     * <pre>
     *是否包含车型ID，即车型ID是否大于0    ----2016-02-22
     * </pre>
     *
     * <code>int32 IsCarId = 145;</code>
     */
    public Builder setIsCarId(int value) {
      
      isCarId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *是否包含车型ID，即车型ID是否大于0    ----2016-02-22
     * </pre>
     *
     * <code>int32 IsCarId = 145;</code>
     */
    public Builder clearIsCarId() {
      
      isCarId_ = 0;
      onChanged();
      return this;
    }

    private int isB2B_ ;
    /**
     * <pre>
     *是否B2B串车车源：1为是  ----20160413
     * </pre>
     *
     * <code>int32 IsB2B = 146;</code>
     */
    public int getIsB2B() {
      return isB2B_;
    }
    /**
     * <pre>
     *是否B2B串车车源：1为是  ----20160413
     * </pre>
     *
     * <code>int32 IsB2B = 146;</code>
     */
    public Builder setIsB2B(int value) {
      
      isB2B_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *是否B2B串车车源：1为是  ----20160413
     * </pre>
     *
     * <code>int32 IsB2B = 146;</code>
     */
    public Builder clearIsB2B() {
      
      isB2B_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> crmCustomerIdArray_ = java.util.Collections.emptyList();
    private void ensureCrmCustomerIdArrayIsMutable() {
      if (!((bitField1_ & 0x10000000) == 0x10000000)) {
        crmCustomerIdArray_ = new java.util.ArrayList<java.lang.Integer>(crmCustomerIdArray_);
        bitField1_ |= 0x10000000;
       }
    }
    /**
     * <pre>
     *客户编号数组检索
     * </pre>
     *
     * <code>repeated int32 CrmCustomerIdArray = 147;</code>
     */
    public java.util.List<java.lang.Integer>
        getCrmCustomerIdArrayList() {
      return java.util.Collections.unmodifiableList(crmCustomerIdArray_);
    }
    /**
     * <pre>
     *客户编号数组检索
     * </pre>
     *
     * <code>repeated int32 CrmCustomerIdArray = 147;</code>
     */
    public int getCrmCustomerIdArrayCount() {
      return crmCustomerIdArray_.size();
    }
    /**
     * <pre>
     *客户编号数组检索
     * </pre>
     *
     * <code>repeated int32 CrmCustomerIdArray = 147;</code>
     */
    public int getCrmCustomerIdArray(int index) {
      return crmCustomerIdArray_.get(index);
    }
    /**
     * <pre>
     *客户编号数组检索
     * </pre>
     *
     * <code>repeated int32 CrmCustomerIdArray = 147;</code>
     */
    public Builder setCrmCustomerIdArray(
        int index, int value) {
      ensureCrmCustomerIdArrayIsMutable();
      crmCustomerIdArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *客户编号数组检索
     * </pre>
     *
     * <code>repeated int32 CrmCustomerIdArray = 147;</code>
     */
    public Builder addCrmCustomerIdArray(int value) {
      ensureCrmCustomerIdArrayIsMutable();
      crmCustomerIdArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *客户编号数组检索
     * </pre>
     *
     * <code>repeated int32 CrmCustomerIdArray = 147;</code>
     */
    public Builder addAllCrmCustomerIdArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureCrmCustomerIdArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, crmCustomerIdArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *客户编号数组检索
     * </pre>
     *
     * <code>repeated int32 CrmCustomerIdArray = 147;</code>
     */
    public Builder clearCrmCustomerIdArray() {
      crmCustomerIdArray_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x10000000);
      onChanged();
      return this;
    }

    private int isCheckReportJson_ ;
    /**
     * <pre>
     *是否显示车源质检报告
     * </pre>
     *
     * <code>int32 IsCheckReportJson = 148;</code>
     */
    public int getIsCheckReportJson() {
      return isCheckReportJson_;
    }
    /**
     * <pre>
     *是否显示车源质检报告
     * </pre>
     *
     * <code>int32 IsCheckReportJson = 148;</code>
     */
    public Builder setIsCheckReportJson(int value) {
      
      isCheckReportJson_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *是否显示车源质检报告
     * </pre>
     *
     * <code>int32 IsCheckReportJson = 148;</code>
     */
    public Builder clearIsCheckReportJson() {
      
      isCheckReportJson_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> envirStandardArray_ = java.util.Collections.emptyList();
    private void ensureEnvirStandardArrayIsMutable() {
      if (!((bitField1_ & 0x40000000) == 0x40000000)) {
        envirStandardArray_ = new java.util.ArrayList<java.lang.Integer>(envirStandardArray_);
        bitField1_ |= 0x40000000;
       }
    }
    /**
     * <pre>
     *排放标准：1:国2, 2:国3, 3:国4, 4:国5, 5:欧3, 6:欧4, 7:欧5, 8:京5, 9:OBD   ---  20150629  用0,1设置搜索条件，如“0,0,0,1,0,0,0,0,1” 代表 “国5或OBD”
     * </pre>
     *
     * <code>repeated int32 EnvirStandardArray = 149;</code>
     */
    public java.util.List<java.lang.Integer>
        getEnvirStandardArrayList() {
      return java.util.Collections.unmodifiableList(envirStandardArray_);
    }
    /**
     * <pre>
     *排放标准：1:国2, 2:国3, 3:国4, 4:国5, 5:欧3, 6:欧4, 7:欧5, 8:京5, 9:OBD   ---  20150629  用0,1设置搜索条件，如“0,0,0,1,0,0,0,0,1” 代表 “国5或OBD”
     * </pre>
     *
     * <code>repeated int32 EnvirStandardArray = 149;</code>
     */
    public int getEnvirStandardArrayCount() {
      return envirStandardArray_.size();
    }
    /**
     * <pre>
     *排放标准：1:国2, 2:国3, 3:国4, 4:国5, 5:欧3, 6:欧4, 7:欧5, 8:京5, 9:OBD   ---  20150629  用0,1设置搜索条件，如“0,0,0,1,0,0,0,0,1” 代表 “国5或OBD”
     * </pre>
     *
     * <code>repeated int32 EnvirStandardArray = 149;</code>
     */
    public int getEnvirStandardArray(int index) {
      return envirStandardArray_.get(index);
    }
    /**
     * <pre>
     *排放标准：1:国2, 2:国3, 3:国4, 4:国5, 5:欧3, 6:欧4, 7:欧5, 8:京5, 9:OBD   ---  20150629  用0,1设置搜索条件，如“0,0,0,1,0,0,0,0,1” 代表 “国5或OBD”
     * </pre>
     *
     * <code>repeated int32 EnvirStandardArray = 149;</code>
     */
    public Builder setEnvirStandardArray(
        int index, int value) {
      ensureEnvirStandardArrayIsMutable();
      envirStandardArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *排放标准：1:国2, 2:国3, 3:国4, 4:国5, 5:欧3, 6:欧4, 7:欧5, 8:京5, 9:OBD   ---  20150629  用0,1设置搜索条件，如“0,0,0,1,0,0,0,0,1” 代表 “国5或OBD”
     * </pre>
     *
     * <code>repeated int32 EnvirStandardArray = 149;</code>
     */
    public Builder addEnvirStandardArray(int value) {
      ensureEnvirStandardArrayIsMutable();
      envirStandardArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *排放标准：1:国2, 2:国3, 3:国4, 4:国5, 5:欧3, 6:欧4, 7:欧5, 8:京5, 9:OBD   ---  20150629  用0,1设置搜索条件，如“0,0,0,1,0,0,0,0,1” 代表 “国5或OBD”
     * </pre>
     *
     * <code>repeated int32 EnvirStandardArray = 149;</code>
     */
    public Builder addAllEnvirStandardArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureEnvirStandardArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, envirStandardArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *排放标准：1:国2, 2:国3, 3:国4, 4:国5, 5:欧3, 6:欧4, 7:欧5, 8:京5, 9:OBD   ---  20150629  用0,1设置搜索条件，如“0,0,0,1,0,0,0,0,1” 代表 “国5或OBD”
     * </pre>
     *
     * <code>repeated int32 EnvirStandardArray = 149;</code>
     */
    public Builder clearEnvirStandardArray() {
      envirStandardArray_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x40000000);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Double> consumptionLowerArray_ = java.util.Collections.emptyList();
    private void ensureConsumptionLowerArrayIsMutable() {
      if (!((bitField1_ & 0x80000000) == 0x80000000)) {
        consumptionLowerArray_ = new java.util.ArrayList<java.lang.Double>(consumptionLowerArray_);
        bitField1_ |= 0x80000000;
       }
    }
    /**
     * <pre>
     *综合工况油耗&gt;范围--最低(单位"升/百公里")    ---- 20140828
     * </pre>
     *
     * <code>repeated double ConsumptionLowerArray = 150;</code>
     */
    public java.util.List<java.lang.Double>
        getConsumptionLowerArrayList() {
      return java.util.Collections.unmodifiableList(consumptionLowerArray_);
    }
    /**
     * <pre>
     *综合工况油耗&gt;范围--最低(单位"升/百公里")    ---- 20140828
     * </pre>
     *
     * <code>repeated double ConsumptionLowerArray = 150;</code>
     */
    public int getConsumptionLowerArrayCount() {
      return consumptionLowerArray_.size();
    }
    /**
     * <pre>
     *综合工况油耗&gt;范围--最低(单位"升/百公里")    ---- 20140828
     * </pre>
     *
     * <code>repeated double ConsumptionLowerArray = 150;</code>
     */
    public double getConsumptionLowerArray(int index) {
      return consumptionLowerArray_.get(index);
    }
    /**
     * <pre>
     *综合工况油耗&gt;范围--最低(单位"升/百公里")    ---- 20140828
     * </pre>
     *
     * <code>repeated double ConsumptionLowerArray = 150;</code>
     */
    public Builder setConsumptionLowerArray(
        int index, double value) {
      ensureConsumptionLowerArrayIsMutable();
      consumptionLowerArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *综合工况油耗&gt;范围--最低(单位"升/百公里")    ---- 20140828
     * </pre>
     *
     * <code>repeated double ConsumptionLowerArray = 150;</code>
     */
    public Builder addConsumptionLowerArray(double value) {
      ensureConsumptionLowerArrayIsMutable();
      consumptionLowerArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *综合工况油耗&gt;范围--最低(单位"升/百公里")    ---- 20140828
     * </pre>
     *
     * <code>repeated double ConsumptionLowerArray = 150;</code>
     */
    public Builder addAllConsumptionLowerArray(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensureConsumptionLowerArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, consumptionLowerArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *综合工况油耗&gt;范围--最低(单位"升/百公里")    ---- 20140828
     * </pre>
     *
     * <code>repeated double ConsumptionLowerArray = 150;</code>
     */
    public Builder clearConsumptionLowerArray() {
      consumptionLowerArray_ = java.util.Collections.emptyList();
      bitField1_ = (bitField1_ & ~0x80000000);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Double> consumptionHighArray_ = java.util.Collections.emptyList();
    private void ensureConsumptionHighArrayIsMutable() {
      if (!((bitField2_ & 0x00000001) == 0x00000001)) {
        consumptionHighArray_ = new java.util.ArrayList<java.lang.Double>(consumptionHighArray_);
        bitField2_ |= 0x00000001;
       }
    }
    /**
     * <pre>
     *综合工况油耗&gt;范围--最高(单位"升/百公里")    ---- 20140828
     * </pre>
     *
     * <code>repeated double ConsumptionHighArray = 151;</code>
     */
    public java.util.List<java.lang.Double>
        getConsumptionHighArrayList() {
      return java.util.Collections.unmodifiableList(consumptionHighArray_);
    }
    /**
     * <pre>
     *综合工况油耗&gt;范围--最高(单位"升/百公里")    ---- 20140828
     * </pre>
     *
     * <code>repeated double ConsumptionHighArray = 151;</code>
     */
    public int getConsumptionHighArrayCount() {
      return consumptionHighArray_.size();
    }
    /**
     * <pre>
     *综合工况油耗&gt;范围--最高(单位"升/百公里")    ---- 20140828
     * </pre>
     *
     * <code>repeated double ConsumptionHighArray = 151;</code>
     */
    public double getConsumptionHighArray(int index) {
      return consumptionHighArray_.get(index);
    }
    /**
     * <pre>
     *综合工况油耗&gt;范围--最高(单位"升/百公里")    ---- 20140828
     * </pre>
     *
     * <code>repeated double ConsumptionHighArray = 151;</code>
     */
    public Builder setConsumptionHighArray(
        int index, double value) {
      ensureConsumptionHighArrayIsMutable();
      consumptionHighArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *综合工况油耗&gt;范围--最高(单位"升/百公里")    ---- 20140828
     * </pre>
     *
     * <code>repeated double ConsumptionHighArray = 151;</code>
     */
    public Builder addConsumptionHighArray(double value) {
      ensureConsumptionHighArrayIsMutable();
      consumptionHighArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *综合工况油耗&gt;范围--最高(单位"升/百公里")    ---- 20140828
     * </pre>
     *
     * <code>repeated double ConsumptionHighArray = 151;</code>
     */
    public Builder addAllConsumptionHighArray(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensureConsumptionHighArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, consumptionHighArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *综合工况油耗&gt;范围--最高(单位"升/百公里")    ---- 20140828
     * </pre>
     *
     * <code>repeated double ConsumptionHighArray = 151;</code>
     */
    public Builder clearConsumptionHighArray() {
      consumptionHighArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00000001);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> oilTypeArray_ = java.util.Collections.emptyList();
    private void ensureOilTypeArrayIsMutable() {
      if (!((bitField2_ & 0x00000002) == 0x00000002)) {
        oilTypeArray_ = new java.util.ArrayList<java.lang.Integer>(oilTypeArray_);
        bitField2_ |= 0x00000002;
       }
    }
    /**
     * <pre>
     *能源类型：OilTypeEnum   ---  20150828
     * </pre>
     *
     * <code>repeated int32 OilTypeArray = 152;</code>
     */
    public java.util.List<java.lang.Integer>
        getOilTypeArrayList() {
      return java.util.Collections.unmodifiableList(oilTypeArray_);
    }
    /**
     * <pre>
     *能源类型：OilTypeEnum   ---  20150828
     * </pre>
     *
     * <code>repeated int32 OilTypeArray = 152;</code>
     */
    public int getOilTypeArrayCount() {
      return oilTypeArray_.size();
    }
    /**
     * <pre>
     *能源类型：OilTypeEnum   ---  20150828
     * </pre>
     *
     * <code>repeated int32 OilTypeArray = 152;</code>
     */
    public int getOilTypeArray(int index) {
      return oilTypeArray_.get(index);
    }
    /**
     * <pre>
     *能源类型：OilTypeEnum   ---  20150828
     * </pre>
     *
     * <code>repeated int32 OilTypeArray = 152;</code>
     */
    public Builder setOilTypeArray(
        int index, int value) {
      ensureOilTypeArrayIsMutable();
      oilTypeArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *能源类型：OilTypeEnum   ---  20150828
     * </pre>
     *
     * <code>repeated int32 OilTypeArray = 152;</code>
     */
    public Builder addOilTypeArray(int value) {
      ensureOilTypeArrayIsMutable();
      oilTypeArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *能源类型：OilTypeEnum   ---  20150828
     * </pre>
     *
     * <code>repeated int32 OilTypeArray = 152;</code>
     */
    public Builder addAllOilTypeArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureOilTypeArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, oilTypeArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *能源类型：OilTypeEnum   ---  20150828
     * </pre>
     *
     * <code>repeated int32 OilTypeArray = 152;</code>
     */
    public Builder clearOilTypeArray() {
      oilTypeArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00000002);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> engineLocationArray_ = java.util.Collections.emptyList();
    private void ensureEngineLocationArrayIsMutable() {
      if (!((bitField2_ & 0x00000004) == 0x00000004)) {
        engineLocationArray_ = new java.util.ArrayList<java.lang.Integer>(engineLocationArray_);
        bitField2_ |= 0x00000004;
       }
    }
    /**
     * <pre>
     *发动机位置：EngineLocationEnum   ---  20150828
     * </pre>
     *
     * <code>repeated int32 EngineLocationArray = 153;</code>
     */
    public java.util.List<java.lang.Integer>
        getEngineLocationArrayList() {
      return java.util.Collections.unmodifiableList(engineLocationArray_);
    }
    /**
     * <pre>
     *发动机位置：EngineLocationEnum   ---  20150828
     * </pre>
     *
     * <code>repeated int32 EngineLocationArray = 153;</code>
     */
    public int getEngineLocationArrayCount() {
      return engineLocationArray_.size();
    }
    /**
     * <pre>
     *发动机位置：EngineLocationEnum   ---  20150828
     * </pre>
     *
     * <code>repeated int32 EngineLocationArray = 153;</code>
     */
    public int getEngineLocationArray(int index) {
      return engineLocationArray_.get(index);
    }
    /**
     * <pre>
     *发动机位置：EngineLocationEnum   ---  20150828
     * </pre>
     *
     * <code>repeated int32 EngineLocationArray = 153;</code>
     */
    public Builder setEngineLocationArray(
        int index, int value) {
      ensureEngineLocationArrayIsMutable();
      engineLocationArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *发动机位置：EngineLocationEnum   ---  20150828
     * </pre>
     *
     * <code>repeated int32 EngineLocationArray = 153;</code>
     */
    public Builder addEngineLocationArray(int value) {
      ensureEngineLocationArrayIsMutable();
      engineLocationArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *发动机位置：EngineLocationEnum   ---  20150828
     * </pre>
     *
     * <code>repeated int32 EngineLocationArray = 153;</code>
     */
    public Builder addAllEngineLocationArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureEngineLocationArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, engineLocationArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *发动机位置：EngineLocationEnum   ---  20150828
     * </pre>
     *
     * <code>repeated int32 EngineLocationArray = 153;</code>
     */
    public Builder clearEngineLocationArray() {
      engineLocationArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00000004);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> bodyDoorsLowerArray_ = java.util.Collections.emptyList();
    private void ensureBodyDoorsLowerArrayIsMutable() {
      if (!((bitField2_ & 0x00000008) == 0x00000008)) {
        bodyDoorsLowerArray_ = new java.util.ArrayList<java.lang.Integer>(bodyDoorsLowerArray_);
        bitField2_ |= 0x00000008;
       }
    }
    /**
     * <pre>
     *车门数--最低值（单位：个）    ---  20150828
     * </pre>
     *
     * <code>repeated int32 BodyDoorsLowerArray = 154;</code>
     */
    public java.util.List<java.lang.Integer>
        getBodyDoorsLowerArrayList() {
      return java.util.Collections.unmodifiableList(bodyDoorsLowerArray_);
    }
    /**
     * <pre>
     *车门数--最低值（单位：个）    ---  20150828
     * </pre>
     *
     * <code>repeated int32 BodyDoorsLowerArray = 154;</code>
     */
    public int getBodyDoorsLowerArrayCount() {
      return bodyDoorsLowerArray_.size();
    }
    /**
     * <pre>
     *车门数--最低值（单位：个）    ---  20150828
     * </pre>
     *
     * <code>repeated int32 BodyDoorsLowerArray = 154;</code>
     */
    public int getBodyDoorsLowerArray(int index) {
      return bodyDoorsLowerArray_.get(index);
    }
    /**
     * <pre>
     *车门数--最低值（单位：个）    ---  20150828
     * </pre>
     *
     * <code>repeated int32 BodyDoorsLowerArray = 154;</code>
     */
    public Builder setBodyDoorsLowerArray(
        int index, int value) {
      ensureBodyDoorsLowerArrayIsMutable();
      bodyDoorsLowerArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车门数--最低值（单位：个）    ---  20150828
     * </pre>
     *
     * <code>repeated int32 BodyDoorsLowerArray = 154;</code>
     */
    public Builder addBodyDoorsLowerArray(int value) {
      ensureBodyDoorsLowerArrayIsMutable();
      bodyDoorsLowerArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车门数--最低值（单位：个）    ---  20150828
     * </pre>
     *
     * <code>repeated int32 BodyDoorsLowerArray = 154;</code>
     */
    public Builder addAllBodyDoorsLowerArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureBodyDoorsLowerArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, bodyDoorsLowerArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车门数--最低值（单位：个）    ---  20150828
     * </pre>
     *
     * <code>repeated int32 BodyDoorsLowerArray = 154;</code>
     */
    public Builder clearBodyDoorsLowerArray() {
      bodyDoorsLowerArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00000008);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> bodyDoorsHighArray_ = java.util.Collections.emptyList();
    private void ensureBodyDoorsHighArrayIsMutable() {
      if (!((bitField2_ & 0x00000010) == 0x00000010)) {
        bodyDoorsHighArray_ = new java.util.ArrayList<java.lang.Integer>(bodyDoorsHighArray_);
        bitField2_ |= 0x00000010;
       }
    }
    /**
     * <pre>
     *车门数--最高值（单位：个）    ---  20150828
     * </pre>
     *
     * <code>repeated int32 BodyDoorsHighArray = 155;</code>
     */
    public java.util.List<java.lang.Integer>
        getBodyDoorsHighArrayList() {
      return java.util.Collections.unmodifiableList(bodyDoorsHighArray_);
    }
    /**
     * <pre>
     *车门数--最高值（单位：个）    ---  20150828
     * </pre>
     *
     * <code>repeated int32 BodyDoorsHighArray = 155;</code>
     */
    public int getBodyDoorsHighArrayCount() {
      return bodyDoorsHighArray_.size();
    }
    /**
     * <pre>
     *车门数--最高值（单位：个）    ---  20150828
     * </pre>
     *
     * <code>repeated int32 BodyDoorsHighArray = 155;</code>
     */
    public int getBodyDoorsHighArray(int index) {
      return bodyDoorsHighArray_.get(index);
    }
    /**
     * <pre>
     *车门数--最高值（单位：个）    ---  20150828
     * </pre>
     *
     * <code>repeated int32 BodyDoorsHighArray = 155;</code>
     */
    public Builder setBodyDoorsHighArray(
        int index, int value) {
      ensureBodyDoorsHighArrayIsMutable();
      bodyDoorsHighArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车门数--最高值（单位：个）    ---  20150828
     * </pre>
     *
     * <code>repeated int32 BodyDoorsHighArray = 155;</code>
     */
    public Builder addBodyDoorsHighArray(int value) {
      ensureBodyDoorsHighArrayIsMutable();
      bodyDoorsHighArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车门数--最高值（单位：个）    ---  20150828
     * </pre>
     *
     * <code>repeated int32 BodyDoorsHighArray = 155;</code>
     */
    public Builder addAllBodyDoorsHighArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureBodyDoorsHighArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, bodyDoorsHighArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车门数--最高值（单位：个）    ---  20150828
     * </pre>
     *
     * <code>repeated int32 BodyDoorsHighArray = 155;</code>
     */
    public Builder clearBodyDoorsHighArray() {
      bodyDoorsHighArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00000010);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> seatNumLowerArray_ = java.util.Collections.emptyList();
    private void ensureSeatNumLowerArrayIsMutable() {
      if (!((bitField2_ & 0x00000020) == 0x00000020)) {
        seatNumLowerArray_ = new java.util.ArrayList<java.lang.Integer>(seatNumLowerArray_);
        bitField2_ |= 0x00000020;
       }
    }
    /**
     * <pre>
     *座位数/乘员人数--最低值（单位：个）    ---  20150828
     * </pre>
     *
     * <code>repeated int32 SeatNumLowerArray = 156;</code>
     */
    public java.util.List<java.lang.Integer>
        getSeatNumLowerArrayList() {
      return java.util.Collections.unmodifiableList(seatNumLowerArray_);
    }
    /**
     * <pre>
     *座位数/乘员人数--最低值（单位：个）    ---  20150828
     * </pre>
     *
     * <code>repeated int32 SeatNumLowerArray = 156;</code>
     */
    public int getSeatNumLowerArrayCount() {
      return seatNumLowerArray_.size();
    }
    /**
     * <pre>
     *座位数/乘员人数--最低值（单位：个）    ---  20150828
     * </pre>
     *
     * <code>repeated int32 SeatNumLowerArray = 156;</code>
     */
    public int getSeatNumLowerArray(int index) {
      return seatNumLowerArray_.get(index);
    }
    /**
     * <pre>
     *座位数/乘员人数--最低值（单位：个）    ---  20150828
     * </pre>
     *
     * <code>repeated int32 SeatNumLowerArray = 156;</code>
     */
    public Builder setSeatNumLowerArray(
        int index, int value) {
      ensureSeatNumLowerArrayIsMutable();
      seatNumLowerArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *座位数/乘员人数--最低值（单位：个）    ---  20150828
     * </pre>
     *
     * <code>repeated int32 SeatNumLowerArray = 156;</code>
     */
    public Builder addSeatNumLowerArray(int value) {
      ensureSeatNumLowerArrayIsMutable();
      seatNumLowerArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *座位数/乘员人数--最低值（单位：个）    ---  20150828
     * </pre>
     *
     * <code>repeated int32 SeatNumLowerArray = 156;</code>
     */
    public Builder addAllSeatNumLowerArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureSeatNumLowerArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, seatNumLowerArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *座位数/乘员人数--最低值（单位：个）    ---  20150828
     * </pre>
     *
     * <code>repeated int32 SeatNumLowerArray = 156;</code>
     */
    public Builder clearSeatNumLowerArray() {
      seatNumLowerArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00000020);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> seatNumHighArray_ = java.util.Collections.emptyList();
    private void ensureSeatNumHighArrayIsMutable() {
      if (!((bitField2_ & 0x00000040) == 0x00000040)) {
        seatNumHighArray_ = new java.util.ArrayList<java.lang.Integer>(seatNumHighArray_);
        bitField2_ |= 0x00000040;
       }
    }
    /**
     * <pre>
     *座位数/乘员人数--最高值（单位：个）    ---  20150828
     * </pre>
     *
     * <code>repeated int32 SeatNumHighArray = 157;</code>
     */
    public java.util.List<java.lang.Integer>
        getSeatNumHighArrayList() {
      return java.util.Collections.unmodifiableList(seatNumHighArray_);
    }
    /**
     * <pre>
     *座位数/乘员人数--最高值（单位：个）    ---  20150828
     * </pre>
     *
     * <code>repeated int32 SeatNumHighArray = 157;</code>
     */
    public int getSeatNumHighArrayCount() {
      return seatNumHighArray_.size();
    }
    /**
     * <pre>
     *座位数/乘员人数--最高值（单位：个）    ---  20150828
     * </pre>
     *
     * <code>repeated int32 SeatNumHighArray = 157;</code>
     */
    public int getSeatNumHighArray(int index) {
      return seatNumHighArray_.get(index);
    }
    /**
     * <pre>
     *座位数/乘员人数--最高值（单位：个）    ---  20150828
     * </pre>
     *
     * <code>repeated int32 SeatNumHighArray = 157;</code>
     */
    public Builder setSeatNumHighArray(
        int index, int value) {
      ensureSeatNumHighArrayIsMutable();
      seatNumHighArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *座位数/乘员人数--最高值（单位：个）    ---  20150828
     * </pre>
     *
     * <code>repeated int32 SeatNumHighArray = 157;</code>
     */
    public Builder addSeatNumHighArray(int value) {
      ensureSeatNumHighArrayIsMutable();
      seatNumHighArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *座位数/乘员人数--最高值（单位：个）    ---  20150828
     * </pre>
     *
     * <code>repeated int32 SeatNumHighArray = 157;</code>
     */
    public Builder addAllSeatNumHighArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureSeatNumHighArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, seatNumHighArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *座位数/乘员人数--最高值（单位：个）    ---  20150828
     * </pre>
     *
     * <code>repeated int32 SeatNumHighArray = 157;</code>
     */
    public Builder clearSeatNumHighArray() {
      seatNumHighArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00000040);
      onChanged();
      return this;
    }

    private int isWagon_ ;
    /**
     * <pre>
     *是否旅行版：1是    ---  20150828
     * </pre>
     *
     * <code>int32 IsWagon = 158;</code>
     */
    public int getIsWagon() {
      return isWagon_;
    }
    /**
     * <pre>
     *是否旅行版：1是    ---  20150828
     * </pre>
     *
     * <code>int32 IsWagon = 158;</code>
     */
    public Builder setIsWagon(int value) {
      
      isWagon_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *是否旅行版：1是    ---  20150828
     * </pre>
     *
     * <code>int32 IsWagon = 158;</code>
     */
    public Builder clearIsWagon() {
      
      isWagon_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> driveTypeArray_ = java.util.Collections.emptyList();
    private void ensureDriveTypeArrayIsMutable() {
      if (!((bitField2_ & 0x00000100) == 0x00000100)) {
        driveTypeArray_ = new java.util.ArrayList<java.lang.Integer>(driveTypeArray_);
        bitField2_ |= 0x00000100;
       }
    }
    /**
     * <pre>
     *驱动方式：DriveTypeEnum   ---  20150901
     * </pre>
     *
     * <code>repeated int32 DriveTypeArray = 159;</code>
     */
    public java.util.List<java.lang.Integer>
        getDriveTypeArrayList() {
      return java.util.Collections.unmodifiableList(driveTypeArray_);
    }
    /**
     * <pre>
     *驱动方式：DriveTypeEnum   ---  20150901
     * </pre>
     *
     * <code>repeated int32 DriveTypeArray = 159;</code>
     */
    public int getDriveTypeArrayCount() {
      return driveTypeArray_.size();
    }
    /**
     * <pre>
     *驱动方式：DriveTypeEnum   ---  20150901
     * </pre>
     *
     * <code>repeated int32 DriveTypeArray = 159;</code>
     */
    public int getDriveTypeArray(int index) {
      return driveTypeArray_.get(index);
    }
    /**
     * <pre>
     *驱动方式：DriveTypeEnum   ---  20150901
     * </pre>
     *
     * <code>repeated int32 DriveTypeArray = 159;</code>
     */
    public Builder setDriveTypeArray(
        int index, int value) {
      ensureDriveTypeArrayIsMutable();
      driveTypeArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *驱动方式：DriveTypeEnum   ---  20150901
     * </pre>
     *
     * <code>repeated int32 DriveTypeArray = 159;</code>
     */
    public Builder addDriveTypeArray(int value) {
      ensureDriveTypeArrayIsMutable();
      driveTypeArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *驱动方式：DriveTypeEnum   ---  20150901
     * </pre>
     *
     * <code>repeated int32 DriveTypeArray = 159;</code>
     */
    public Builder addAllDriveTypeArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureDriveTypeArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, driveTypeArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *驱动方式：DriveTypeEnum   ---  20150901
     * </pre>
     *
     * <code>repeated int32 DriveTypeArray = 159;</code>
     */
    public Builder clearDriveTypeArray() {
      driveTypeArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00000100);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> csBodyFormArray_ = java.util.Collections.emptyList();
    private void ensureCsBodyFormArrayIsMutable() {
      if (!((bitField2_ & 0x00000200) == 0x00000200)) {
        csBodyFormArray_ = new java.util.ArrayList<java.lang.Integer>(csBodyFormArray_);
        bitField2_ |= 0x00000200;
       }
    }
    /**
     * <pre>
     *车身形式：CsBodyFormEnum   ---  20150907
     * </pre>
     *
     * <code>repeated int32 CsBodyFormArray = 160;</code>
     */
    public java.util.List<java.lang.Integer>
        getCsBodyFormArrayList() {
      return java.util.Collections.unmodifiableList(csBodyFormArray_);
    }
    /**
     * <pre>
     *车身形式：CsBodyFormEnum   ---  20150907
     * </pre>
     *
     * <code>repeated int32 CsBodyFormArray = 160;</code>
     */
    public int getCsBodyFormArrayCount() {
      return csBodyFormArray_.size();
    }
    /**
     * <pre>
     *车身形式：CsBodyFormEnum   ---  20150907
     * </pre>
     *
     * <code>repeated int32 CsBodyFormArray = 160;</code>
     */
    public int getCsBodyFormArray(int index) {
      return csBodyFormArray_.get(index);
    }
    /**
     * <pre>
     *车身形式：CsBodyFormEnum   ---  20150907
     * </pre>
     *
     * <code>repeated int32 CsBodyFormArray = 160;</code>
     */
    public Builder setCsBodyFormArray(
        int index, int value) {
      ensureCsBodyFormArrayIsMutable();
      csBodyFormArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车身形式：CsBodyFormEnum   ---  20150907
     * </pre>
     *
     * <code>repeated int32 CsBodyFormArray = 160;</code>
     */
    public Builder addCsBodyFormArray(int value) {
      ensureCsBodyFormArrayIsMutable();
      csBodyFormArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车身形式：CsBodyFormEnum   ---  20150907
     * </pre>
     *
     * <code>repeated int32 CsBodyFormArray = 160;</code>
     */
    public Builder addAllCsBodyFormArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureCsBodyFormArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, csBodyFormArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车身形式：CsBodyFormEnum   ---  20150907
     * </pre>
     *
     * <code>repeated int32 CsBodyFormArray = 160;</code>
     */
    public Builder clearCsBodyFormArray() {
      csBodyFormArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00000200);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> carLevelArray_ = java.util.Collections.emptyList();
    private void ensureCarLevelArrayIsMutable() {
      if (!((bitField2_ & 0x00000400) == 0x00000400)) {
        carLevelArray_ = new java.util.ArrayList<java.lang.Integer>(carLevelArray_);
        bitField2_ |= 0x00000400;
       }
    }
    /**
     * <pre>
     *车辆类型数组(豪华车 = 1,微型车 = 2,中大型车 = 3,小型车 = 4,MPV = 5,中型车 = 6,紧凑型车 = 7,SUV = 8,跑车 = 9,其他 = 10,面包车 = 11,皮卡 = 12,概念车=13,客车=14,卡车=15)
     * </pre>
     *
     * <code>repeated int32 CarLevelArray = 161;</code>
     */
    public java.util.List<java.lang.Integer>
        getCarLevelArrayList() {
      return java.util.Collections.unmodifiableList(carLevelArray_);
    }
    /**
     * <pre>
     *车辆类型数组(豪华车 = 1,微型车 = 2,中大型车 = 3,小型车 = 4,MPV = 5,中型车 = 6,紧凑型车 = 7,SUV = 8,跑车 = 9,其他 = 10,面包车 = 11,皮卡 = 12,概念车=13,客车=14,卡车=15)
     * </pre>
     *
     * <code>repeated int32 CarLevelArray = 161;</code>
     */
    public int getCarLevelArrayCount() {
      return carLevelArray_.size();
    }
    /**
     * <pre>
     *车辆类型数组(豪华车 = 1,微型车 = 2,中大型车 = 3,小型车 = 4,MPV = 5,中型车 = 6,紧凑型车 = 7,SUV = 8,跑车 = 9,其他 = 10,面包车 = 11,皮卡 = 12,概念车=13,客车=14,卡车=15)
     * </pre>
     *
     * <code>repeated int32 CarLevelArray = 161;</code>
     */
    public int getCarLevelArray(int index) {
      return carLevelArray_.get(index);
    }
    /**
     * <pre>
     *车辆类型数组(豪华车 = 1,微型车 = 2,中大型车 = 3,小型车 = 4,MPV = 5,中型车 = 6,紧凑型车 = 7,SUV = 8,跑车 = 9,其他 = 10,面包车 = 11,皮卡 = 12,概念车=13,客车=14,卡车=15)
     * </pre>
     *
     * <code>repeated int32 CarLevelArray = 161;</code>
     */
    public Builder setCarLevelArray(
        int index, int value) {
      ensureCarLevelArrayIsMutable();
      carLevelArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车辆类型数组(豪华车 = 1,微型车 = 2,中大型车 = 3,小型车 = 4,MPV = 5,中型车 = 6,紧凑型车 = 7,SUV = 8,跑车 = 9,其他 = 10,面包车 = 11,皮卡 = 12,概念车=13,客车=14,卡车=15)
     * </pre>
     *
     * <code>repeated int32 CarLevelArray = 161;</code>
     */
    public Builder addCarLevelArray(int value) {
      ensureCarLevelArrayIsMutable();
      carLevelArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车辆类型数组(豪华车 = 1,微型车 = 2,中大型车 = 3,小型车 = 4,MPV = 5,中型车 = 6,紧凑型车 = 7,SUV = 8,跑车 = 9,其他 = 10,面包车 = 11,皮卡 = 12,概念车=13,客车=14,卡车=15)
     * </pre>
     *
     * <code>repeated int32 CarLevelArray = 161;</code>
     */
    public Builder addAllCarLevelArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureCarLevelArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, carLevelArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车辆类型数组(豪华车 = 1,微型车 = 2,中大型车 = 3,小型车 = 4,MPV = 5,中型车 = 6,紧凑型车 = 7,SUV = 8,跑车 = 9,其他 = 10,面包车 = 11,皮卡 = 12,概念车=13,客车=14,卡车=15)
     * </pre>
     *
     * <code>repeated int32 CarLevelArray = 161;</code>
     */
    public Builder clearCarLevelArray() {
      carLevelArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00000400);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> carLevelSecondArray_ = java.util.Collections.emptyList();
    private void ensureCarLevelSecondArrayIsMutable() {
      if (!((bitField2_ & 0x00000800) == 0x00000800)) {
        carLevelSecondArray_ = new java.util.ArrayList<java.lang.Integer>(carLevelSecondArray_);
        bitField2_ |= 0x00000800;
       }
    }
    /**
     * <pre>
     *车系二级级别  0:无,1:小型suv,2:紧凑型suv,3:中型suv,4:中大型suv,5:全尺寸suv,6:微客,7:小客,8:中客,9:大客,10:微卡,11:轻卡,12:中卡,13:重卡
     * </pre>
     *
     * <code>repeated int32 CarLevelSecondArray = 162;</code>
     */
    public java.util.List<java.lang.Integer>
        getCarLevelSecondArrayList() {
      return java.util.Collections.unmodifiableList(carLevelSecondArray_);
    }
    /**
     * <pre>
     *车系二级级别  0:无,1:小型suv,2:紧凑型suv,3:中型suv,4:中大型suv,5:全尺寸suv,6:微客,7:小客,8:中客,9:大客,10:微卡,11:轻卡,12:中卡,13:重卡
     * </pre>
     *
     * <code>repeated int32 CarLevelSecondArray = 162;</code>
     */
    public int getCarLevelSecondArrayCount() {
      return carLevelSecondArray_.size();
    }
    /**
     * <pre>
     *车系二级级别  0:无,1:小型suv,2:紧凑型suv,3:中型suv,4:中大型suv,5:全尺寸suv,6:微客,7:小客,8:中客,9:大客,10:微卡,11:轻卡,12:中卡,13:重卡
     * </pre>
     *
     * <code>repeated int32 CarLevelSecondArray = 162;</code>
     */
    public int getCarLevelSecondArray(int index) {
      return carLevelSecondArray_.get(index);
    }
    /**
     * <pre>
     *车系二级级别  0:无,1:小型suv,2:紧凑型suv,3:中型suv,4:中大型suv,5:全尺寸suv,6:微客,7:小客,8:中客,9:大客,10:微卡,11:轻卡,12:中卡,13:重卡
     * </pre>
     *
     * <code>repeated int32 CarLevelSecondArray = 162;</code>
     */
    public Builder setCarLevelSecondArray(
        int index, int value) {
      ensureCarLevelSecondArrayIsMutable();
      carLevelSecondArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车系二级级别  0:无,1:小型suv,2:紧凑型suv,3:中型suv,4:中大型suv,5:全尺寸suv,6:微客,7:小客,8:中客,9:大客,10:微卡,11:轻卡,12:中卡,13:重卡
     * </pre>
     *
     * <code>repeated int32 CarLevelSecondArray = 162;</code>
     */
    public Builder addCarLevelSecondArray(int value) {
      ensureCarLevelSecondArrayIsMutable();
      carLevelSecondArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车系二级级别  0:无,1:小型suv,2:紧凑型suv,3:中型suv,4:中大型suv,5:全尺寸suv,6:微客,7:小客,8:中客,9:大客,10:微卡,11:轻卡,12:中卡,13:重卡
     * </pre>
     *
     * <code>repeated int32 CarLevelSecondArray = 162;</code>
     */
    public Builder addAllCarLevelSecondArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureCarLevelSecondArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, carLevelSecondArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车系二级级别  0:无,1:小型suv,2:紧凑型suv,3:中型suv,4:中大型suv,5:全尺寸suv,6:微客,7:小客,8:中客,9:大客,10:微卡,11:轻卡,12:中卡,13:重卡
     * </pre>
     *
     * <code>repeated int32 CarLevelSecondArray = 162;</code>
     */
    public Builder clearCarLevelSecondArray() {
      carLevelSecondArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00000800);
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList carYearArray_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureCarYearArrayIsMutable() {
      if (!((bitField2_ & 0x00001000) == 0x00001000)) {
        carYearArray_ = new com.google.protobuf.LazyStringArrayList(carYearArray_);
        bitField2_ |= 0x00001000;
       }
    }
    /**
     * <pre>
     *车型年款
     * </pre>
     *
     * <code>repeated string CarYearArray = 163;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getCarYearArrayList() {
      return carYearArray_.getUnmodifiableView();
    }
    /**
     * <pre>
     *车型年款
     * </pre>
     *
     * <code>repeated string CarYearArray = 163;</code>
     */
    public int getCarYearArrayCount() {
      return carYearArray_.size();
    }
    /**
     * <pre>
     *车型年款
     * </pre>
     *
     * <code>repeated string CarYearArray = 163;</code>
     */
    public java.lang.String getCarYearArray(int index) {
      return carYearArray_.get(index);
    }
    /**
     * <pre>
     *车型年款
     * </pre>
     *
     * <code>repeated string CarYearArray = 163;</code>
     */
    public com.google.protobuf.ByteString
        getCarYearArrayBytes(int index) {
      return carYearArray_.getByteString(index);
    }
    /**
     * <pre>
     *车型年款
     * </pre>
     *
     * <code>repeated string CarYearArray = 163;</code>
     */
    public Builder setCarYearArray(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureCarYearArrayIsMutable();
      carYearArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车型年款
     * </pre>
     *
     * <code>repeated string CarYearArray = 163;</code>
     */
    public Builder addCarYearArray(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureCarYearArrayIsMutable();
      carYearArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车型年款
     * </pre>
     *
     * <code>repeated string CarYearArray = 163;</code>
     */
    public Builder addAllCarYearArray(
        java.lang.Iterable<java.lang.String> values) {
      ensureCarYearArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, carYearArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车型年款
     * </pre>
     *
     * <code>repeated string CarYearArray = 163;</code>
     */
    public Builder clearCarYearArray() {
      carYearArray_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField2_ = (bitField2_ & ~0x00001000);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车型年款
     * </pre>
     *
     * <code>repeated string CarYearArray = 163;</code>
     */
    public Builder addCarYearArrayBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureCarYearArrayIsMutable();
      carYearArray_.add(value);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> mainBrandArray_ = java.util.Collections.emptyList();
    private void ensureMainBrandArrayIsMutable() {
      if (!((bitField2_ & 0x00002000) == 0x00002000)) {
        mainBrandArray_ = new java.util.ArrayList<java.lang.Integer>(mainBrandArray_);
        bitField2_ |= 0x00002000;
       }
    }
    /**
     * <pre>
     *搜索主品牌(mainbrandid)数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 MainBrandArray = 164;</code>
     */
    public java.util.List<java.lang.Integer>
        getMainBrandArrayList() {
      return java.util.Collections.unmodifiableList(mainBrandArray_);
    }
    /**
     * <pre>
     *搜索主品牌(mainbrandid)数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 MainBrandArray = 164;</code>
     */
    public int getMainBrandArrayCount() {
      return mainBrandArray_.size();
    }
    /**
     * <pre>
     *搜索主品牌(mainbrandid)数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 MainBrandArray = 164;</code>
     */
    public int getMainBrandArray(int index) {
      return mainBrandArray_.get(index);
    }
    /**
     * <pre>
     *搜索主品牌(mainbrandid)数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 MainBrandArray = 164;</code>
     */
    public Builder setMainBrandArray(
        int index, int value) {
      ensureMainBrandArrayIsMutable();
      mainBrandArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *搜索主品牌(mainbrandid)数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 MainBrandArray = 164;</code>
     */
    public Builder addMainBrandArray(int value) {
      ensureMainBrandArrayIsMutable();
      mainBrandArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *搜索主品牌(mainbrandid)数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 MainBrandArray = 164;</code>
     */
    public Builder addAllMainBrandArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureMainBrandArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, mainBrandArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *搜索主品牌(mainbrandid)数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 MainBrandArray = 164;</code>
     */
    public Builder clearMainBrandArray() {
      mainBrandArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00002000);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> brandArray_ = java.util.Collections.emptyList();
    private void ensureBrandArrayIsMutable() {
      if (!((bitField2_ & 0x00004000) == 0x00004000)) {
        brandArray_ = new java.util.ArrayList<java.lang.Integer>(brandArray_);
        bitField2_ |= 0x00004000;
       }
    }
    /**
     * <pre>
     *搜索品牌(producerid)数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 BrandArray = 165;</code>
     */
    public java.util.List<java.lang.Integer>
        getBrandArrayList() {
      return java.util.Collections.unmodifiableList(brandArray_);
    }
    /**
     * <pre>
     *搜索品牌(producerid)数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 BrandArray = 165;</code>
     */
    public int getBrandArrayCount() {
      return brandArray_.size();
    }
    /**
     * <pre>
     *搜索品牌(producerid)数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 BrandArray = 165;</code>
     */
    public int getBrandArray(int index) {
      return brandArray_.get(index);
    }
    /**
     * <pre>
     *搜索品牌(producerid)数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 BrandArray = 165;</code>
     */
    public Builder setBrandArray(
        int index, int value) {
      ensureBrandArrayIsMutable();
      brandArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *搜索品牌(producerid)数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 BrandArray = 165;</code>
     */
    public Builder addBrandArray(int value) {
      ensureBrandArrayIsMutable();
      brandArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *搜索品牌(producerid)数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 BrandArray = 165;</code>
     */
    public Builder addAllBrandArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureBrandArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, brandArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *搜索品牌(producerid)数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 BrandArray = 165;</code>
     */
    public Builder clearBrandArray() {
      brandArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00004000);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> carSerialArray_ = java.util.Collections.emptyList();
    private void ensureCarSerialArrayIsMutable() {
      if (!((bitField2_ & 0x00008000) == 0x00008000)) {
        carSerialArray_ = new java.util.ArrayList<java.lang.Integer>(carSerialArray_);
        bitField2_ |= 0x00008000;
       }
    }
    /**
     * <pre>
     *搜索车系(brandid)数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 CarSerialArray = 166;</code>
     */
    public java.util.List<java.lang.Integer>
        getCarSerialArrayList() {
      return java.util.Collections.unmodifiableList(carSerialArray_);
    }
    /**
     * <pre>
     *搜索车系(brandid)数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 CarSerialArray = 166;</code>
     */
    public int getCarSerialArrayCount() {
      return carSerialArray_.size();
    }
    /**
     * <pre>
     *搜索车系(brandid)数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 CarSerialArray = 166;</code>
     */
    public int getCarSerialArray(int index) {
      return carSerialArray_.get(index);
    }
    /**
     * <pre>
     *搜索车系(brandid)数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 CarSerialArray = 166;</code>
     */
    public Builder setCarSerialArray(
        int index, int value) {
      ensureCarSerialArrayIsMutable();
      carSerialArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *搜索车系(brandid)数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 CarSerialArray = 166;</code>
     */
    public Builder addCarSerialArray(int value) {
      ensureCarSerialArrayIsMutable();
      carSerialArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *搜索车系(brandid)数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 CarSerialArray = 166;</code>
     */
    public Builder addAllCarSerialArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureCarSerialArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, carSerialArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *搜索车系(brandid)数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 CarSerialArray = 166;</code>
     */
    public Builder clearCarSerialArray() {
      carSerialArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00008000);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> carIDArray_ = java.util.Collections.emptyList();
    private void ensureCarIDArrayIsMutable() {
      if (!((bitField2_ & 0x00010000) == 0x00010000)) {
        carIDArray_ = new java.util.ArrayList<java.lang.Integer>(carIDArray_);
        bitField2_ |= 0x00010000;
       }
    }
    /**
     * <pre>
     *搜索车型数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 CarIDArray = 167;</code>
     */
    public java.util.List<java.lang.Integer>
        getCarIDArrayList() {
      return java.util.Collections.unmodifiableList(carIDArray_);
    }
    /**
     * <pre>
     *搜索车型数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 CarIDArray = 167;</code>
     */
    public int getCarIDArrayCount() {
      return carIDArray_.size();
    }
    /**
     * <pre>
     *搜索车型数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 CarIDArray = 167;</code>
     */
    public int getCarIDArray(int index) {
      return carIDArray_.get(index);
    }
    /**
     * <pre>
     *搜索车型数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 CarIDArray = 167;</code>
     */
    public Builder setCarIDArray(
        int index, int value) {
      ensureCarIDArrayIsMutable();
      carIDArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *搜索车型数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 CarIDArray = 167;</code>
     */
    public Builder addCarIDArray(int value) {
      ensureCarIDArrayIsMutable();
      carIDArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *搜索车型数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 CarIDArray = 167;</code>
     */
    public Builder addAllCarIDArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureCarIDArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, carIDArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *搜索车型数组【谨慎使用,控制Length】
     * </pre>
     *
     * <code>repeated int32 CarIDArray = 167;</code>
     */
    public Builder clearCarIDArray() {
      carIDArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00010000);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> gearBoxTypeArray_ = java.util.Collections.emptyList();
    private void ensureGearBoxTypeArrayIsMutable() {
      if (!((bitField2_ & 0x00020000) == 0x00020000)) {
        gearBoxTypeArray_ = new java.util.ArrayList<java.lang.Integer>(gearBoxTypeArray_);
        bitField2_ |= 0x00020000;
       }
    }
    /**
     * <pre>
     *变速箱
     * </pre>
     *
     * <code>repeated int32 GearBoxTypeArray = 168;</code>
     */
    public java.util.List<java.lang.Integer>
        getGearBoxTypeArrayList() {
      return java.util.Collections.unmodifiableList(gearBoxTypeArray_);
    }
    /**
     * <pre>
     *变速箱
     * </pre>
     *
     * <code>repeated int32 GearBoxTypeArray = 168;</code>
     */
    public int getGearBoxTypeArrayCount() {
      return gearBoxTypeArray_.size();
    }
    /**
     * <pre>
     *变速箱
     * </pre>
     *
     * <code>repeated int32 GearBoxTypeArray = 168;</code>
     */
    public int getGearBoxTypeArray(int index) {
      return gearBoxTypeArray_.get(index);
    }
    /**
     * <pre>
     *变速箱
     * </pre>
     *
     * <code>repeated int32 GearBoxTypeArray = 168;</code>
     */
    public Builder setGearBoxTypeArray(
        int index, int value) {
      ensureGearBoxTypeArrayIsMutable();
      gearBoxTypeArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *变速箱
     * </pre>
     *
     * <code>repeated int32 GearBoxTypeArray = 168;</code>
     */
    public Builder addGearBoxTypeArray(int value) {
      ensureGearBoxTypeArrayIsMutable();
      gearBoxTypeArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *变速箱
     * </pre>
     *
     * <code>repeated int32 GearBoxTypeArray = 168;</code>
     */
    public Builder addAllGearBoxTypeArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureGearBoxTypeArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, gearBoxTypeArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *变速箱
     * </pre>
     *
     * <code>repeated int32 GearBoxTypeArray = 168;</code>
     */
    public Builder clearGearBoxTypeArray() {
      gearBoxTypeArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00020000);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Double> exhaustLevelLowerArray_ = java.util.Collections.emptyList();
    private void ensureExhaustLevelLowerArrayIsMutable() {
      if (!((bitField2_ & 0x00040000) == 0x00040000)) {
        exhaustLevelLowerArray_ = new java.util.ArrayList<java.lang.Double>(exhaustLevelLowerArray_);
        bitField2_ |= 0x00040000;
       }
    }
    /**
     * <pre>
     *排气量--最低值(参数名称为exhaustlower)
     * </pre>
     *
     * <code>repeated double ExhaustLevelLowerArray = 169;</code>
     */
    public java.util.List<java.lang.Double>
        getExhaustLevelLowerArrayList() {
      return java.util.Collections.unmodifiableList(exhaustLevelLowerArray_);
    }
    /**
     * <pre>
     *排气量--最低值(参数名称为exhaustlower)
     * </pre>
     *
     * <code>repeated double ExhaustLevelLowerArray = 169;</code>
     */
    public int getExhaustLevelLowerArrayCount() {
      return exhaustLevelLowerArray_.size();
    }
    /**
     * <pre>
     *排气量--最低值(参数名称为exhaustlower)
     * </pre>
     *
     * <code>repeated double ExhaustLevelLowerArray = 169;</code>
     */
    public double getExhaustLevelLowerArray(int index) {
      return exhaustLevelLowerArray_.get(index);
    }
    /**
     * <pre>
     *排气量--最低值(参数名称为exhaustlower)
     * </pre>
     *
     * <code>repeated double ExhaustLevelLowerArray = 169;</code>
     */
    public Builder setExhaustLevelLowerArray(
        int index, double value) {
      ensureExhaustLevelLowerArrayIsMutable();
      exhaustLevelLowerArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *排气量--最低值(参数名称为exhaustlower)
     * </pre>
     *
     * <code>repeated double ExhaustLevelLowerArray = 169;</code>
     */
    public Builder addExhaustLevelLowerArray(double value) {
      ensureExhaustLevelLowerArrayIsMutable();
      exhaustLevelLowerArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *排气量--最低值(参数名称为exhaustlower)
     * </pre>
     *
     * <code>repeated double ExhaustLevelLowerArray = 169;</code>
     */
    public Builder addAllExhaustLevelLowerArray(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensureExhaustLevelLowerArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, exhaustLevelLowerArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *排气量--最低值(参数名称为exhaustlower)
     * </pre>
     *
     * <code>repeated double ExhaustLevelLowerArray = 169;</code>
     */
    public Builder clearExhaustLevelLowerArray() {
      exhaustLevelLowerArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00040000);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Double> exhaustLevelHighArray_ = java.util.Collections.emptyList();
    private void ensureExhaustLevelHighArrayIsMutable() {
      if (!((bitField2_ & 0x00080000) == 0x00080000)) {
        exhaustLevelHighArray_ = new java.util.ArrayList<java.lang.Double>(exhaustLevelHighArray_);
        bitField2_ |= 0x00080000;
       }
    }
    /**
     * <pre>
     *排气量--最高值
     * </pre>
     *
     * <code>repeated double ExhaustLevelHighArray = 170;</code>
     */
    public java.util.List<java.lang.Double>
        getExhaustLevelHighArrayList() {
      return java.util.Collections.unmodifiableList(exhaustLevelHighArray_);
    }
    /**
     * <pre>
     *排气量--最高值
     * </pre>
     *
     * <code>repeated double ExhaustLevelHighArray = 170;</code>
     */
    public int getExhaustLevelHighArrayCount() {
      return exhaustLevelHighArray_.size();
    }
    /**
     * <pre>
     *排气量--最高值
     * </pre>
     *
     * <code>repeated double ExhaustLevelHighArray = 170;</code>
     */
    public double getExhaustLevelHighArray(int index) {
      return exhaustLevelHighArray_.get(index);
    }
    /**
     * <pre>
     *排气量--最高值
     * </pre>
     *
     * <code>repeated double ExhaustLevelHighArray = 170;</code>
     */
    public Builder setExhaustLevelHighArray(
        int index, double value) {
      ensureExhaustLevelHighArrayIsMutable();
      exhaustLevelHighArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *排气量--最高值
     * </pre>
     *
     * <code>repeated double ExhaustLevelHighArray = 170;</code>
     */
    public Builder addExhaustLevelHighArray(double value) {
      ensureExhaustLevelHighArrayIsMutable();
      exhaustLevelHighArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *排气量--最高值
     * </pre>
     *
     * <code>repeated double ExhaustLevelHighArray = 170;</code>
     */
    public Builder addAllExhaustLevelHighArray(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensureExhaustLevelHighArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, exhaustLevelHighArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *排气量--最高值
     * </pre>
     *
     * <code>repeated double ExhaustLevelHighArray = 170;</code>
     */
    public Builder clearExhaustLevelHighArray() {
      exhaustLevelHighArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00080000);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> exhaustLevelArray_ = java.util.Collections.emptyList();
    private void ensureExhaustLevelArrayIsMutable() {
      if (!((bitField2_ & 0x00100000) == 0x00100000)) {
        exhaustLevelArray_ = new java.util.ArrayList<java.lang.Integer>(exhaustLevelArray_);
        bitField2_ |= 0x00100000;
       }
    }
    /**
     * <pre>
     *1.0升以下、1.1-1.5升、1.6-2.0升、2.1-3.0升、3.1升以上 （2014-03-03）
     * </pre>
     *
     * <code>repeated int32 ExhaustLevelArray = 171;</code>
     */
    public java.util.List<java.lang.Integer>
        getExhaustLevelArrayList() {
      return java.util.Collections.unmodifiableList(exhaustLevelArray_);
    }
    /**
     * <pre>
     *1.0升以下、1.1-1.5升、1.6-2.0升、2.1-3.0升、3.1升以上 （2014-03-03）
     * </pre>
     *
     * <code>repeated int32 ExhaustLevelArray = 171;</code>
     */
    public int getExhaustLevelArrayCount() {
      return exhaustLevelArray_.size();
    }
    /**
     * <pre>
     *1.0升以下、1.1-1.5升、1.6-2.0升、2.1-3.0升、3.1升以上 （2014-03-03）
     * </pre>
     *
     * <code>repeated int32 ExhaustLevelArray = 171;</code>
     */
    public int getExhaustLevelArray(int index) {
      return exhaustLevelArray_.get(index);
    }
    /**
     * <pre>
     *1.0升以下、1.1-1.5升、1.6-2.0升、2.1-3.0升、3.1升以上 （2014-03-03）
     * </pre>
     *
     * <code>repeated int32 ExhaustLevelArray = 171;</code>
     */
    public Builder setExhaustLevelArray(
        int index, int value) {
      ensureExhaustLevelArrayIsMutable();
      exhaustLevelArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *1.0升以下、1.1-1.5升、1.6-2.0升、2.1-3.0升、3.1升以上 （2014-03-03）
     * </pre>
     *
     * <code>repeated int32 ExhaustLevelArray = 171;</code>
     */
    public Builder addExhaustLevelArray(int value) {
      ensureExhaustLevelArrayIsMutable();
      exhaustLevelArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *1.0升以下、1.1-1.5升、1.6-2.0升、2.1-3.0升、3.1升以上 （2014-03-03）
     * </pre>
     *
     * <code>repeated int32 ExhaustLevelArray = 171;</code>
     */
    public Builder addAllExhaustLevelArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureExhaustLevelArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, exhaustLevelArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *1.0升以下、1.1-1.5升、1.6-2.0升、2.1-3.0升、3.1升以上 （2014-03-03）
     * </pre>
     *
     * <code>repeated int32 ExhaustLevelArray = 171;</code>
     */
    public Builder clearExhaustLevelArray() {
      exhaustLevelArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00100000);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> countryArray_ = java.util.Collections.emptyList();
    private void ensureCountryArrayIsMutable() {
      if (!((bitField2_ & 0x00200000) == 0x00200000)) {
        countryArray_ = new java.util.ArrayList<java.lang.Integer>(countryArray_);
        bitField2_ |= 0x00200000;
       }
    }
    /**
     * <pre>
     *品牌国别(参数名称为country)按枚举值进行检索：澳大利亚 = 1, 德国 = 2, 法国 = 3, 韩国 = 4,荷兰 = 5, 捷克 = 6, 美国 = 7, 日本 = 8, 瑞典 = 9, 西班牙 = 10, 意大利 = 11, 英国 = 12, 中国 = 13
     * </pre>
     *
     * <code>repeated int32 CountryArray = 172;</code>
     */
    public java.util.List<java.lang.Integer>
        getCountryArrayList() {
      return java.util.Collections.unmodifiableList(countryArray_);
    }
    /**
     * <pre>
     *品牌国别(参数名称为country)按枚举值进行检索：澳大利亚 = 1, 德国 = 2, 法国 = 3, 韩国 = 4,荷兰 = 5, 捷克 = 6, 美国 = 7, 日本 = 8, 瑞典 = 9, 西班牙 = 10, 意大利 = 11, 英国 = 12, 中国 = 13
     * </pre>
     *
     * <code>repeated int32 CountryArray = 172;</code>
     */
    public int getCountryArrayCount() {
      return countryArray_.size();
    }
    /**
     * <pre>
     *品牌国别(参数名称为country)按枚举值进行检索：澳大利亚 = 1, 德国 = 2, 法国 = 3, 韩国 = 4,荷兰 = 5, 捷克 = 6, 美国 = 7, 日本 = 8, 瑞典 = 9, 西班牙 = 10, 意大利 = 11, 英国 = 12, 中国 = 13
     * </pre>
     *
     * <code>repeated int32 CountryArray = 172;</code>
     */
    public int getCountryArray(int index) {
      return countryArray_.get(index);
    }
    /**
     * <pre>
     *品牌国别(参数名称为country)按枚举值进行检索：澳大利亚 = 1, 德国 = 2, 法国 = 3, 韩国 = 4,荷兰 = 5, 捷克 = 6, 美国 = 7, 日本 = 8, 瑞典 = 9, 西班牙 = 10, 意大利 = 11, 英国 = 12, 中国 = 13
     * </pre>
     *
     * <code>repeated int32 CountryArray = 172;</code>
     */
    public Builder setCountryArray(
        int index, int value) {
      ensureCountryArrayIsMutable();
      countryArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *品牌国别(参数名称为country)按枚举值进行检索：澳大利亚 = 1, 德国 = 2, 法国 = 3, 韩国 = 4,荷兰 = 5, 捷克 = 6, 美国 = 7, 日本 = 8, 瑞典 = 9, 西班牙 = 10, 意大利 = 11, 英国 = 12, 中国 = 13
     * </pre>
     *
     * <code>repeated int32 CountryArray = 172;</code>
     */
    public Builder addCountryArray(int value) {
      ensureCountryArrayIsMutable();
      countryArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *品牌国别(参数名称为country)按枚举值进行检索：澳大利亚 = 1, 德国 = 2, 法国 = 3, 韩国 = 4,荷兰 = 5, 捷克 = 6, 美国 = 7, 日本 = 8, 瑞典 = 9, 西班牙 = 10, 意大利 = 11, 英国 = 12, 中国 = 13
     * </pre>
     *
     * <code>repeated int32 CountryArray = 172;</code>
     */
    public Builder addAllCountryArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureCountryArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, countryArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *品牌国别(参数名称为country)按枚举值进行检索：澳大利亚 = 1, 德国 = 2, 法国 = 3, 韩国 = 4,荷兰 = 5, 捷克 = 6, 美国 = 7, 日本 = 8, 瑞典 = 9, 西班牙 = 10, 意大利 = 11, 英国 = 12, 中国 = 13
     * </pre>
     *
     * <code>repeated int32 CountryArray = 172;</code>
     */
    public Builder clearCountryArray() {
      countryArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00200000);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> brandAttrArray_ = java.util.Collections.emptyList();
    private void ensureBrandAttrArrayIsMutable() {
      if (!((bitField2_ & 0x00400000) == 0x00400000)) {
        brandAttrArray_ = new java.util.ArrayList<java.lang.Integer>(brandAttrArray_);
        bitField2_ |= 0x00400000;
       }
    }
    /**
     * <pre>
     * 品牌属性(自主 = 1, 合资 = 2, 进口 = 3)
     * </pre>
     *
     * <code>repeated int32 BrandAttrArray = 173;</code>
     */
    public java.util.List<java.lang.Integer>
        getBrandAttrArrayList() {
      return java.util.Collections.unmodifiableList(brandAttrArray_);
    }
    /**
     * <pre>
     * 品牌属性(自主 = 1, 合资 = 2, 进口 = 3)
     * </pre>
     *
     * <code>repeated int32 BrandAttrArray = 173;</code>
     */
    public int getBrandAttrArrayCount() {
      return brandAttrArray_.size();
    }
    /**
     * <pre>
     * 品牌属性(自主 = 1, 合资 = 2, 进口 = 3)
     * </pre>
     *
     * <code>repeated int32 BrandAttrArray = 173;</code>
     */
    public int getBrandAttrArray(int index) {
      return brandAttrArray_.get(index);
    }
    /**
     * <pre>
     * 品牌属性(自主 = 1, 合资 = 2, 进口 = 3)
     * </pre>
     *
     * <code>repeated int32 BrandAttrArray = 173;</code>
     */
    public Builder setBrandAttrArray(
        int index, int value) {
      ensureBrandAttrArrayIsMutable();
      brandAttrArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 品牌属性(自主 = 1, 合资 = 2, 进口 = 3)
     * </pre>
     *
     * <code>repeated int32 BrandAttrArray = 173;</code>
     */
    public Builder addBrandAttrArray(int value) {
      ensureBrandAttrArrayIsMutable();
      brandAttrArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 品牌属性(自主 = 1, 合资 = 2, 进口 = 3)
     * </pre>
     *
     * <code>repeated int32 BrandAttrArray = 173;</code>
     */
    public Builder addAllBrandAttrArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureBrandAttrArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, brandAttrArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 品牌属性(自主 = 1, 合资 = 2, 进口 = 3)
     * </pre>
     *
     * <code>repeated int32 BrandAttrArray = 173;</code>
     */
    public Builder clearBrandAttrArray() {
      brandAttrArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x00400000);
      onChanged();
      return this;
    }

    private int adCity_ ;
    /**
     * <pre>
     *精准广告投放城市
     * </pre>
     *
     * <code>int32 AdCity = 174;</code>
     */
    public int getAdCity() {
      return adCity_;
    }
    /**
     * <pre>
     *精准广告投放城市
     * </pre>
     *
     * <code>int32 AdCity = 174;</code>
     */
    public Builder setAdCity(int value) {
      
      adCity_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *精准广告投放城市
     * </pre>
     *
     * <code>int32 AdCity = 174;</code>
     */
    public Builder clearAdCity() {
      
      adCity_ = 0;
      onChanged();
      return this;
    }

    private int adCondition_ ;
    /**
     * <pre>
     *精准广告投放条件
     * </pre>
     *
     * <code>int32 AdCondition = 175;</code>
     */
    public int getAdCondition() {
      return adCondition_;
    }
    /**
     * <pre>
     *精准广告投放条件
     * </pre>
     *
     * <code>int32 AdCondition = 175;</code>
     */
    public Builder setAdCondition(int value) {
      
      adCondition_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *精准广告投放条件
     * </pre>
     *
     * <code>int32 AdCondition = 175;</code>
     */
    public Builder clearAdCondition() {
      
      adCondition_ = 0;
      onChanged();
      return this;
    }

    private double carBenefitRateLower_ ;
    /**
     * <pre>
     *车源优惠超值系数--最低值
     * </pre>
     *
     * <code>double CarBenefitRateLower = 176;</code>
     */
    public double getCarBenefitRateLower() {
      return carBenefitRateLower_;
    }
    /**
     * <pre>
     *车源优惠超值系数--最低值
     * </pre>
     *
     * <code>double CarBenefitRateLower = 176;</code>
     */
    public Builder setCarBenefitRateLower(double value) {
      
      carBenefitRateLower_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车源优惠超值系数--最低值
     * </pre>
     *
     * <code>double CarBenefitRateLower = 176;</code>
     */
    public Builder clearCarBenefitRateLower() {
      
      carBenefitRateLower_ = 0D;
      onChanged();
      return this;
    }

    private double carBenefitRateHigh_ ;
    /**
     * <pre>
     *车源优惠超值系数--最高值 
     * </pre>
     *
     * <code>double CarBenefitRateHigh = 177;</code>
     */
    public double getCarBenefitRateHigh() {
      return carBenefitRateHigh_;
    }
    /**
     * <pre>
     *车源优惠超值系数--最高值 
     * </pre>
     *
     * <code>double CarBenefitRateHigh = 177;</code>
     */
    public Builder setCarBenefitRateHigh(double value) {
      
      carBenefitRateHigh_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车源优惠超值系数--最高值 
     * </pre>
     *
     * <code>double CarBenefitRateHigh = 177;</code>
     */
    public Builder clearCarBenefitRateHigh() {
      
      carBenefitRateHigh_ = 0D;
      onChanged();
      return this;
    }

    private double callConnectRateLower_ ;
    /**
     * <pre>
     *商家7天内电话接通率--最低    ---- 20170329
     * </pre>
     *
     * <code>double CallConnectRateLower = 178;</code>
     */
    public double getCallConnectRateLower() {
      return callConnectRateLower_;
    }
    /**
     * <pre>
     *商家7天内电话接通率--最低    ---- 20170329
     * </pre>
     *
     * <code>double CallConnectRateLower = 178;</code>
     */
    public Builder setCallConnectRateLower(double value) {
      
      callConnectRateLower_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *商家7天内电话接通率--最低    ---- 20170329
     * </pre>
     *
     * <code>double CallConnectRateLower = 178;</code>
     */
    public Builder clearCallConnectRateLower() {
      
      callConnectRateLower_ = 0D;
      onChanged();
      return this;
    }

    private double callConnectRateHigh_ ;
    /**
     * <pre>
     *商家7天内电话接通率--最高    ---- 20170329
     * </pre>
     *
     * <code>double CallConnectRateHigh = 179;</code>
     */
    public double getCallConnectRateHigh() {
      return callConnectRateHigh_;
    }
    /**
     * <pre>
     *商家7天内电话接通率--最高    ---- 20170329
     * </pre>
     *
     * <code>double CallConnectRateHigh = 179;</code>
     */
    public Builder setCallConnectRateHigh(double value) {
      
      callConnectRateHigh_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *商家7天内电话接通率--最高    ---- 20170329
     * </pre>
     *
     * <code>double CallConnectRateHigh = 179;</code>
     */
    public Builder clearCallConnectRateHigh() {
      
      callConnectRateHigh_ = 0D;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList vinCodeArray_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureVinCodeArrayIsMutable() {
      if (!((bitField2_ & 0x20000000) == 0x20000000)) {
        vinCodeArray_ = new com.google.protobuf.LazyStringArrayList(vinCodeArray_);
        bitField2_ |= 0x20000000;
       }
    }
    /**
     * <pre>
     *VIN码查询  --20170329
     * </pre>
     *
     * <code>repeated string VinCodeArray = 180;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getVinCodeArrayList() {
      return vinCodeArray_.getUnmodifiableView();
    }
    /**
     * <pre>
     *VIN码查询  --20170329
     * </pre>
     *
     * <code>repeated string VinCodeArray = 180;</code>
     */
    public int getVinCodeArrayCount() {
      return vinCodeArray_.size();
    }
    /**
     * <pre>
     *VIN码查询  --20170329
     * </pre>
     *
     * <code>repeated string VinCodeArray = 180;</code>
     */
    public java.lang.String getVinCodeArray(int index) {
      return vinCodeArray_.get(index);
    }
    /**
     * <pre>
     *VIN码查询  --20170329
     * </pre>
     *
     * <code>repeated string VinCodeArray = 180;</code>
     */
    public com.google.protobuf.ByteString
        getVinCodeArrayBytes(int index) {
      return vinCodeArray_.getByteString(index);
    }
    /**
     * <pre>
     *VIN码查询  --20170329
     * </pre>
     *
     * <code>repeated string VinCodeArray = 180;</code>
     */
    public Builder setVinCodeArray(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureVinCodeArrayIsMutable();
      vinCodeArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *VIN码查询  --20170329
     * </pre>
     *
     * <code>repeated string VinCodeArray = 180;</code>
     */
    public Builder addVinCodeArray(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureVinCodeArrayIsMutable();
      vinCodeArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *VIN码查询  --20170329
     * </pre>
     *
     * <code>repeated string VinCodeArray = 180;</code>
     */
    public Builder addAllVinCodeArray(
        java.lang.Iterable<java.lang.String> values) {
      ensureVinCodeArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, vinCodeArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *VIN码查询  --20170329
     * </pre>
     *
     * <code>repeated string VinCodeArray = 180;</code>
     */
    public Builder clearVinCodeArray() {
      vinCodeArray_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField2_ = (bitField2_ & ~0x20000000);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *VIN码查询  --20170329
     * </pre>
     *
     * <code>repeated string VinCodeArray = 180;</code>
     */
    public Builder addVinCodeArrayBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureVinCodeArrayIsMutable();
      vinCodeArray_.add(value);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> licenseProvinceIdArray_ = java.util.Collections.emptyList();
    private void ensureLicenseProvinceIdArrayIsMutable() {
      if (!((bitField2_ & 0x40000000) == 0x40000000)) {
        licenseProvinceIdArray_ = new java.util.ArrayList<java.lang.Integer>(licenseProvinceIdArray_);
        bitField2_ |= 0x40000000;
       }
    }
    /**
     * <pre>
     *车牌所在地--省份ID ,注意只有LicenseCityIdArray为空时才生效
     * </pre>
     *
     * <code>repeated int32 LicenseProvinceIdArray = 181;</code>
     */
    public java.util.List<java.lang.Integer>
        getLicenseProvinceIdArrayList() {
      return java.util.Collections.unmodifiableList(licenseProvinceIdArray_);
    }
    /**
     * <pre>
     *车牌所在地--省份ID ,注意只有LicenseCityIdArray为空时才生效
     * </pre>
     *
     * <code>repeated int32 LicenseProvinceIdArray = 181;</code>
     */
    public int getLicenseProvinceIdArrayCount() {
      return licenseProvinceIdArray_.size();
    }
    /**
     * <pre>
     *车牌所在地--省份ID ,注意只有LicenseCityIdArray为空时才生效
     * </pre>
     *
     * <code>repeated int32 LicenseProvinceIdArray = 181;</code>
     */
    public int getLicenseProvinceIdArray(int index) {
      return licenseProvinceIdArray_.get(index);
    }
    /**
     * <pre>
     *车牌所在地--省份ID ,注意只有LicenseCityIdArray为空时才生效
     * </pre>
     *
     * <code>repeated int32 LicenseProvinceIdArray = 181;</code>
     */
    public Builder setLicenseProvinceIdArray(
        int index, int value) {
      ensureLicenseProvinceIdArrayIsMutable();
      licenseProvinceIdArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车牌所在地--省份ID ,注意只有LicenseCityIdArray为空时才生效
     * </pre>
     *
     * <code>repeated int32 LicenseProvinceIdArray = 181;</code>
     */
    public Builder addLicenseProvinceIdArray(int value) {
      ensureLicenseProvinceIdArrayIsMutable();
      licenseProvinceIdArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车牌所在地--省份ID ,注意只有LicenseCityIdArray为空时才生效
     * </pre>
     *
     * <code>repeated int32 LicenseProvinceIdArray = 181;</code>
     */
    public Builder addAllLicenseProvinceIdArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureLicenseProvinceIdArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, licenseProvinceIdArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车牌所在地--省份ID ,注意只有LicenseCityIdArray为空时才生效
     * </pre>
     *
     * <code>repeated int32 LicenseProvinceIdArray = 181;</code>
     */
    public Builder clearLicenseProvinceIdArray() {
      licenseProvinceIdArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x40000000);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> licenseCityIdArray_ = java.util.Collections.emptyList();
    private void ensureLicenseCityIdArrayIsMutable() {
      if (!((bitField2_ & 0x80000000) == 0x80000000)) {
        licenseCityIdArray_ = new java.util.ArrayList<java.lang.Integer>(licenseCityIdArray_);
        bitField2_ |= 0x80000000;
       }
    }
    /**
     * <pre>
     *车牌所在城市ID  2017-04-10
     * </pre>
     *
     * <code>repeated int32 LicenseCityIdArray = 182;</code>
     */
    public java.util.List<java.lang.Integer>
        getLicenseCityIdArrayList() {
      return java.util.Collections.unmodifiableList(licenseCityIdArray_);
    }
    /**
     * <pre>
     *车牌所在城市ID  2017-04-10
     * </pre>
     *
     * <code>repeated int32 LicenseCityIdArray = 182;</code>
     */
    public int getLicenseCityIdArrayCount() {
      return licenseCityIdArray_.size();
    }
    /**
     * <pre>
     *车牌所在城市ID  2017-04-10
     * </pre>
     *
     * <code>repeated int32 LicenseCityIdArray = 182;</code>
     */
    public int getLicenseCityIdArray(int index) {
      return licenseCityIdArray_.get(index);
    }
    /**
     * <pre>
     *车牌所在城市ID  2017-04-10
     * </pre>
     *
     * <code>repeated int32 LicenseCityIdArray = 182;</code>
     */
    public Builder setLicenseCityIdArray(
        int index, int value) {
      ensureLicenseCityIdArrayIsMutable();
      licenseCityIdArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车牌所在城市ID  2017-04-10
     * </pre>
     *
     * <code>repeated int32 LicenseCityIdArray = 182;</code>
     */
    public Builder addLicenseCityIdArray(int value) {
      ensureLicenseCityIdArrayIsMutable();
      licenseCityIdArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车牌所在城市ID  2017-04-10
     * </pre>
     *
     * <code>repeated int32 LicenseCityIdArray = 182;</code>
     */
    public Builder addAllLicenseCityIdArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureLicenseCityIdArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, licenseCityIdArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车牌所在城市ID  2017-04-10
     * </pre>
     *
     * <code>repeated int32 LicenseCityIdArray = 182;</code>
     */
    public Builder clearLicenseCityIdArray() {
      licenseCityIdArray_ = java.util.Collections.emptyList();
      bitField2_ = (bitField2_ & ~0x80000000);
      onChanged();
      return this;
    }

    private int isLicensed_ ;
    /**
     * <pre>
     *是否上牌：1:已上牌,-1:未上牌,0:不参与查询
     * </pre>
     *
     * <code>int32 IsLicensed = 183;</code>
     */
    public int getIsLicensed() {
      return isLicensed_;
    }
    /**
     * <pre>
     *是否上牌：1:已上牌,-1:未上牌,0:不参与查询
     * </pre>
     *
     * <code>int32 IsLicensed = 183;</code>
     */
    public Builder setIsLicensed(int value) {
      
      isLicensed_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *是否上牌：1:已上牌,-1:未上牌,0:不参与查询
     * </pre>
     *
     * <code>int32 IsLicensed = 183;</code>
     */
    public Builder clearIsLicensed() {
      
      isLicensed_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> noCrmCustomerIdArray_ = java.util.Collections.emptyList();
    private void ensureNoCrmCustomerIdArrayIsMutable() {
      if (!((bitField3_ & 0x00000002) == 0x00000002)) {
        noCrmCustomerIdArray_ = new java.util.ArrayList<java.lang.Integer>(noCrmCustomerIdArray_);
        bitField3_ |= 0x00000002;
       }
    }
    /**
     * <pre>
     *排除客户编号数组检索
     * </pre>
     *
     * <code>repeated int32 NoCrmCustomerIdArray = 184;</code>
     */
    public java.util.List<java.lang.Integer>
        getNoCrmCustomerIdArrayList() {
      return java.util.Collections.unmodifiableList(noCrmCustomerIdArray_);
    }
    /**
     * <pre>
     *排除客户编号数组检索
     * </pre>
     *
     * <code>repeated int32 NoCrmCustomerIdArray = 184;</code>
     */
    public int getNoCrmCustomerIdArrayCount() {
      return noCrmCustomerIdArray_.size();
    }
    /**
     * <pre>
     *排除客户编号数组检索
     * </pre>
     *
     * <code>repeated int32 NoCrmCustomerIdArray = 184;</code>
     */
    public int getNoCrmCustomerIdArray(int index) {
      return noCrmCustomerIdArray_.get(index);
    }
    /**
     * <pre>
     *排除客户编号数组检索
     * </pre>
     *
     * <code>repeated int32 NoCrmCustomerIdArray = 184;</code>
     */
    public Builder setNoCrmCustomerIdArray(
        int index, int value) {
      ensureNoCrmCustomerIdArrayIsMutable();
      noCrmCustomerIdArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *排除客户编号数组检索
     * </pre>
     *
     * <code>repeated int32 NoCrmCustomerIdArray = 184;</code>
     */
    public Builder addNoCrmCustomerIdArray(int value) {
      ensureNoCrmCustomerIdArrayIsMutable();
      noCrmCustomerIdArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *排除客户编号数组检索
     * </pre>
     *
     * <code>repeated int32 NoCrmCustomerIdArray = 184;</code>
     */
    public Builder addAllNoCrmCustomerIdArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureNoCrmCustomerIdArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, noCrmCustomerIdArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *排除客户编号数组检索
     * </pre>
     *
     * <code>repeated int32 NoCrmCustomerIdArray = 184;</code>
     */
    public Builder clearNoCrmCustomerIdArray() {
      noCrmCustomerIdArray_ = java.util.Collections.emptyList();
      bitField3_ = (bitField3_ & ~0x00000002);
      onChanged();
      return this;
    }

    private int carPvMin_ ;
    /**
     * <pre>
     *车源前7天最小PV数
     * </pre>
     *
     * <code>int32 CarPvMin = 185;</code>
     */
    public int getCarPvMin() {
      return carPvMin_;
    }
    /**
     * <pre>
     *车源前7天最小PV数
     * </pre>
     *
     * <code>int32 CarPvMin = 185;</code>
     */
    public Builder setCarPvMin(int value) {
      
      carPvMin_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车源前7天最小PV数
     * </pre>
     *
     * <code>int32 CarPvMin = 185;</code>
     */
    public Builder clearCarPvMin() {
      
      carPvMin_ = 0;
      onChanged();
      return this;
    }

    private int carPvMax_ ;
    /**
     * <pre>
     *车源前7天最大PV数
     * </pre>
     *
     * <code>int32 CarPvMax = 186;</code>
     */
    public int getCarPvMax() {
      return carPvMax_;
    }
    /**
     * <pre>
     *车源前7天最大PV数
     * </pre>
     *
     * <code>int32 CarPvMax = 186;</code>
     */
    public Builder setCarPvMax(int value) {
      
      carPvMax_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车源前7天最大PV数
     * </pre>
     *
     * <code>int32 CarPvMax = 186;</code>
     */
    public Builder clearCarPvMax() {
      
      carPvMax_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> noSuperiorIdArray_ = java.util.Collections.emptyList();
    private void ensureNoSuperiorIdArrayIsMutable() {
      if (!((bitField3_ & 0x00000010) == 0x00000010)) {
        noSuperiorIdArray_ = new java.util.ArrayList<java.lang.Integer>(noSuperiorIdArray_);
        bitField3_ |= 0x00000010;
       }
    }
    /**
     * <pre>
     *排除经销商上级公司ID（即厂商ID）(针对商家车源)
     * </pre>
     *
     * <code>repeated int32 NoSuperiorIdArray = 187;</code>
     */
    public java.util.List<java.lang.Integer>
        getNoSuperiorIdArrayList() {
      return java.util.Collections.unmodifiableList(noSuperiorIdArray_);
    }
    /**
     * <pre>
     *排除经销商上级公司ID（即厂商ID）(针对商家车源)
     * </pre>
     *
     * <code>repeated int32 NoSuperiorIdArray = 187;</code>
     */
    public int getNoSuperiorIdArrayCount() {
      return noSuperiorIdArray_.size();
    }
    /**
     * <pre>
     *排除经销商上级公司ID（即厂商ID）(针对商家车源)
     * </pre>
     *
     * <code>repeated int32 NoSuperiorIdArray = 187;</code>
     */
    public int getNoSuperiorIdArray(int index) {
      return noSuperiorIdArray_.get(index);
    }
    /**
     * <pre>
     *排除经销商上级公司ID（即厂商ID）(针对商家车源)
     * </pre>
     *
     * <code>repeated int32 NoSuperiorIdArray = 187;</code>
     */
    public Builder setNoSuperiorIdArray(
        int index, int value) {
      ensureNoSuperiorIdArrayIsMutable();
      noSuperiorIdArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *排除经销商上级公司ID（即厂商ID）(针对商家车源)
     * </pre>
     *
     * <code>repeated int32 NoSuperiorIdArray = 187;</code>
     */
    public Builder addNoSuperiorIdArray(int value) {
      ensureNoSuperiorIdArrayIsMutable();
      noSuperiorIdArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *排除经销商上级公司ID（即厂商ID）(针对商家车源)
     * </pre>
     *
     * <code>repeated int32 NoSuperiorIdArray = 187;</code>
     */
    public Builder addAllNoSuperiorIdArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureNoSuperiorIdArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, noSuperiorIdArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *排除经销商上级公司ID（即厂商ID）(针对商家车源)
     * </pre>
     *
     * <code>repeated int32 NoSuperiorIdArray = 187;</code>
     */
    public Builder clearNoSuperiorIdArray() {
      noSuperiorIdArray_ = java.util.Collections.emptyList();
      bitField3_ = (bitField3_ & ~0x00000010);
      onChanged();
      return this;
    }

    private int isDealerAuthorized_ ;
    /**
     * <pre>
     *是否淘车认证车：1为是，-1为否，0为不限制
     * </pre>
     *
     * <code>int32 IsDealerAuthorized = 188;</code>
     */
    public int getIsDealerAuthorized() {
      return isDealerAuthorized_;
    }
    /**
     * <pre>
     *是否淘车认证车：1为是，-1为否，0为不限制
     * </pre>
     *
     * <code>int32 IsDealerAuthorized = 188;</code>
     */
    public Builder setIsDealerAuthorized(int value) {
      
      isDealerAuthorized_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *是否淘车认证车：1为是，-1为否，0为不限制
     * </pre>
     *
     * <code>int32 IsDealerAuthorized = 188;</code>
     */
    public Builder clearIsDealerAuthorized() {
      
      isDealerAuthorized_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Double> loanFirstPayLowerArray_ = java.util.Collections.emptyList();
    private void ensureLoanFirstPayLowerArrayIsMutable() {
      if (!((bitField3_ & 0x00000040) == 0x00000040)) {
        loanFirstPayLowerArray_ = new java.util.ArrayList<java.lang.Double>(loanFirstPayLowerArray_);
        bitField3_ |= 0x00000040;
       }
    }
    /**
     * <pre>
     *首付款金额范围--最低价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanFirstPayLowerArray = 189;</code>
     */
    public java.util.List<java.lang.Double>
        getLoanFirstPayLowerArrayList() {
      return java.util.Collections.unmodifiableList(loanFirstPayLowerArray_);
    }
    /**
     * <pre>
     *首付款金额范围--最低价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanFirstPayLowerArray = 189;</code>
     */
    public int getLoanFirstPayLowerArrayCount() {
      return loanFirstPayLowerArray_.size();
    }
    /**
     * <pre>
     *首付款金额范围--最低价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanFirstPayLowerArray = 189;</code>
     */
    public double getLoanFirstPayLowerArray(int index) {
      return loanFirstPayLowerArray_.get(index);
    }
    /**
     * <pre>
     *首付款金额范围--最低价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanFirstPayLowerArray = 189;</code>
     */
    public Builder setLoanFirstPayLowerArray(
        int index, double value) {
      ensureLoanFirstPayLowerArrayIsMutable();
      loanFirstPayLowerArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *首付款金额范围--最低价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanFirstPayLowerArray = 189;</code>
     */
    public Builder addLoanFirstPayLowerArray(double value) {
      ensureLoanFirstPayLowerArrayIsMutable();
      loanFirstPayLowerArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *首付款金额范围--最低价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanFirstPayLowerArray = 189;</code>
     */
    public Builder addAllLoanFirstPayLowerArray(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensureLoanFirstPayLowerArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, loanFirstPayLowerArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *首付款金额范围--最低价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanFirstPayLowerArray = 189;</code>
     */
    public Builder clearLoanFirstPayLowerArray() {
      loanFirstPayLowerArray_ = java.util.Collections.emptyList();
      bitField3_ = (bitField3_ & ~0x00000040);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Double> loanFirstPayHighArray_ = java.util.Collections.emptyList();
    private void ensureLoanFirstPayHighArrayIsMutable() {
      if (!((bitField3_ & 0x00000080) == 0x00000080)) {
        loanFirstPayHighArray_ = new java.util.ArrayList<java.lang.Double>(loanFirstPayHighArray_);
        bitField3_ |= 0x00000080;
       }
    }
    /**
     * <pre>
     *首付款金额范围--最高价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanFirstPayHighArray = 190;</code>
     */
    public java.util.List<java.lang.Double>
        getLoanFirstPayHighArrayList() {
      return java.util.Collections.unmodifiableList(loanFirstPayHighArray_);
    }
    /**
     * <pre>
     *首付款金额范围--最高价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanFirstPayHighArray = 190;</code>
     */
    public int getLoanFirstPayHighArrayCount() {
      return loanFirstPayHighArray_.size();
    }
    /**
     * <pre>
     *首付款金额范围--最高价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanFirstPayHighArray = 190;</code>
     */
    public double getLoanFirstPayHighArray(int index) {
      return loanFirstPayHighArray_.get(index);
    }
    /**
     * <pre>
     *首付款金额范围--最高价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanFirstPayHighArray = 190;</code>
     */
    public Builder setLoanFirstPayHighArray(
        int index, double value) {
      ensureLoanFirstPayHighArrayIsMutable();
      loanFirstPayHighArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *首付款金额范围--最高价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanFirstPayHighArray = 190;</code>
     */
    public Builder addLoanFirstPayHighArray(double value) {
      ensureLoanFirstPayHighArrayIsMutable();
      loanFirstPayHighArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *首付款金额范围--最高价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanFirstPayHighArray = 190;</code>
     */
    public Builder addAllLoanFirstPayHighArray(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensureLoanFirstPayHighArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, loanFirstPayHighArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *首付款金额范围--最高价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanFirstPayHighArray = 190;</code>
     */
    public Builder clearLoanFirstPayHighArray() {
      loanFirstPayHighArray_ = java.util.Collections.emptyList();
      bitField3_ = (bitField3_ & ~0x00000080);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Double> loanDailyPayLowerArray_ = java.util.Collections.emptyList();
    private void ensureLoanDailyPayLowerArrayIsMutable() {
      if (!((bitField3_ & 0x00000100) == 0x00000100)) {
        loanDailyPayLowerArray_ = new java.util.ArrayList<java.lang.Double>(loanDailyPayLowerArray_);
        bitField3_ |= 0x00000100;
       }
    }
    /**
     * <pre>
     *日还款金额范围--最低价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanDailyPayLowerArray = 191;</code>
     */
    public java.util.List<java.lang.Double>
        getLoanDailyPayLowerArrayList() {
      return java.util.Collections.unmodifiableList(loanDailyPayLowerArray_);
    }
    /**
     * <pre>
     *日还款金额范围--最低价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanDailyPayLowerArray = 191;</code>
     */
    public int getLoanDailyPayLowerArrayCount() {
      return loanDailyPayLowerArray_.size();
    }
    /**
     * <pre>
     *日还款金额范围--最低价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanDailyPayLowerArray = 191;</code>
     */
    public double getLoanDailyPayLowerArray(int index) {
      return loanDailyPayLowerArray_.get(index);
    }
    /**
     * <pre>
     *日还款金额范围--最低价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanDailyPayLowerArray = 191;</code>
     */
    public Builder setLoanDailyPayLowerArray(
        int index, double value) {
      ensureLoanDailyPayLowerArrayIsMutable();
      loanDailyPayLowerArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *日还款金额范围--最低价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanDailyPayLowerArray = 191;</code>
     */
    public Builder addLoanDailyPayLowerArray(double value) {
      ensureLoanDailyPayLowerArrayIsMutable();
      loanDailyPayLowerArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *日还款金额范围--最低价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanDailyPayLowerArray = 191;</code>
     */
    public Builder addAllLoanDailyPayLowerArray(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensureLoanDailyPayLowerArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, loanDailyPayLowerArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *日还款金额范围--最低价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanDailyPayLowerArray = 191;</code>
     */
    public Builder clearLoanDailyPayLowerArray() {
      loanDailyPayLowerArray_ = java.util.Collections.emptyList();
      bitField3_ = (bitField3_ & ~0x00000100);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Double> loanDailyPayHighArray_ = java.util.Collections.emptyList();
    private void ensureLoanDailyPayHighArrayIsMutable() {
      if (!((bitField3_ & 0x00000200) == 0x00000200)) {
        loanDailyPayHighArray_ = new java.util.ArrayList<java.lang.Double>(loanDailyPayHighArray_);
        bitField3_ |= 0x00000200;
       }
    }
    /**
     * <pre>
     *日还款金额范围--最高价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanDailyPayHighArray = 192;</code>
     */
    public java.util.List<java.lang.Double>
        getLoanDailyPayHighArrayList() {
      return java.util.Collections.unmodifiableList(loanDailyPayHighArray_);
    }
    /**
     * <pre>
     *日还款金额范围--最高价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanDailyPayHighArray = 192;</code>
     */
    public int getLoanDailyPayHighArrayCount() {
      return loanDailyPayHighArray_.size();
    }
    /**
     * <pre>
     *日还款金额范围--最高价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanDailyPayHighArray = 192;</code>
     */
    public double getLoanDailyPayHighArray(int index) {
      return loanDailyPayHighArray_.get(index);
    }
    /**
     * <pre>
     *日还款金额范围--最高价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanDailyPayHighArray = 192;</code>
     */
    public Builder setLoanDailyPayHighArray(
        int index, double value) {
      ensureLoanDailyPayHighArrayIsMutable();
      loanDailyPayHighArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *日还款金额范围--最高价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanDailyPayHighArray = 192;</code>
     */
    public Builder addLoanDailyPayHighArray(double value) {
      ensureLoanDailyPayHighArrayIsMutable();
      loanDailyPayHighArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *日还款金额范围--最高价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanDailyPayHighArray = 192;</code>
     */
    public Builder addAllLoanDailyPayHighArray(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensureLoanDailyPayHighArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, loanDailyPayHighArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *日还款金额范围--最高价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanDailyPayHighArray = 192;</code>
     */
    public Builder clearLoanDailyPayHighArray() {
      loanDailyPayHighArray_ = java.util.Collections.emptyList();
      bitField3_ = (bitField3_ & ~0x00000200);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Double> loanMonthPayLowerArray_ = java.util.Collections.emptyList();
    private void ensureLoanMonthPayLowerArrayIsMutable() {
      if (!((bitField3_ & 0x00000400) == 0x00000400)) {
        loanMonthPayLowerArray_ = new java.util.ArrayList<java.lang.Double>(loanMonthPayLowerArray_);
        bitField3_ |= 0x00000400;
       }
    }
    /**
     * <pre>
     *月还款金额范围--最低价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanMonthPayLowerArray = 193;</code>
     */
    public java.util.List<java.lang.Double>
        getLoanMonthPayLowerArrayList() {
      return java.util.Collections.unmodifiableList(loanMonthPayLowerArray_);
    }
    /**
     * <pre>
     *月还款金额范围--最低价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanMonthPayLowerArray = 193;</code>
     */
    public int getLoanMonthPayLowerArrayCount() {
      return loanMonthPayLowerArray_.size();
    }
    /**
     * <pre>
     *月还款金额范围--最低价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanMonthPayLowerArray = 193;</code>
     */
    public double getLoanMonthPayLowerArray(int index) {
      return loanMonthPayLowerArray_.get(index);
    }
    /**
     * <pre>
     *月还款金额范围--最低价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanMonthPayLowerArray = 193;</code>
     */
    public Builder setLoanMonthPayLowerArray(
        int index, double value) {
      ensureLoanMonthPayLowerArrayIsMutable();
      loanMonthPayLowerArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *月还款金额范围--最低价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanMonthPayLowerArray = 193;</code>
     */
    public Builder addLoanMonthPayLowerArray(double value) {
      ensureLoanMonthPayLowerArrayIsMutable();
      loanMonthPayLowerArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *月还款金额范围--最低价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanMonthPayLowerArray = 193;</code>
     */
    public Builder addAllLoanMonthPayLowerArray(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensureLoanMonthPayLowerArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, loanMonthPayLowerArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *月还款金额范围--最低价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanMonthPayLowerArray = 193;</code>
     */
    public Builder clearLoanMonthPayLowerArray() {
      loanMonthPayLowerArray_ = java.util.Collections.emptyList();
      bitField3_ = (bitField3_ & ~0x00000400);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Double> loanMonthPayHighArray_ = java.util.Collections.emptyList();
    private void ensureLoanMonthPayHighArrayIsMutable() {
      if (!((bitField3_ & 0x00000800) == 0x00000800)) {
        loanMonthPayHighArray_ = new java.util.ArrayList<java.lang.Double>(loanMonthPayHighArray_);
        bitField3_ |= 0x00000800;
       }
    }
    /**
     * <pre>
     *月还款金额范围--最高价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanMonthPayHighArray = 194;</code>
     */
    public java.util.List<java.lang.Double>
        getLoanMonthPayHighArrayList() {
      return java.util.Collections.unmodifiableList(loanMonthPayHighArray_);
    }
    /**
     * <pre>
     *月还款金额范围--最高价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanMonthPayHighArray = 194;</code>
     */
    public int getLoanMonthPayHighArrayCount() {
      return loanMonthPayHighArray_.size();
    }
    /**
     * <pre>
     *月还款金额范围--最高价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanMonthPayHighArray = 194;</code>
     */
    public double getLoanMonthPayHighArray(int index) {
      return loanMonthPayHighArray_.get(index);
    }
    /**
     * <pre>
     *月还款金额范围--最高价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanMonthPayHighArray = 194;</code>
     */
    public Builder setLoanMonthPayHighArray(
        int index, double value) {
      ensureLoanMonthPayHighArrayIsMutable();
      loanMonthPayHighArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *月还款金额范围--最高价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanMonthPayHighArray = 194;</code>
     */
    public Builder addLoanMonthPayHighArray(double value) {
      ensureLoanMonthPayHighArrayIsMutable();
      loanMonthPayHighArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *月还款金额范围--最高价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanMonthPayHighArray = 194;</code>
     */
    public Builder addAllLoanMonthPayHighArray(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensureLoanMonthPayHighArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, loanMonthPayHighArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *月还款金额范围--最高价(单位"元") 
     * </pre>
     *
     * <code>repeated double LoanMonthPayHighArray = 194;</code>
     */
    public Builder clearLoanMonthPayHighArray() {
      loanMonthPayHighArray_ = java.util.Collections.emptyList();
      bitField3_ = (bitField3_ & ~0x00000800);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> districtIdArray_ = java.util.Collections.emptyList();
    private void ensureDistrictIdArrayIsMutable() {
      if (!((bitField3_ & 0x00001000) == 0x00001000)) {
        districtIdArray_ = new java.util.ArrayList<java.lang.Integer>(districtIdArray_);
        bitField3_ |= 0x00001000;
       }
    }
    /**
     * <pre>
     *车源所在区县Id 20170825
     * </pre>
     *
     * <code>repeated int32 DistrictIdArray = 195;</code>
     */
    public java.util.List<java.lang.Integer>
        getDistrictIdArrayList() {
      return java.util.Collections.unmodifiableList(districtIdArray_);
    }
    /**
     * <pre>
     *车源所在区县Id 20170825
     * </pre>
     *
     * <code>repeated int32 DistrictIdArray = 195;</code>
     */
    public int getDistrictIdArrayCount() {
      return districtIdArray_.size();
    }
    /**
     * <pre>
     *车源所在区县Id 20170825
     * </pre>
     *
     * <code>repeated int32 DistrictIdArray = 195;</code>
     */
    public int getDistrictIdArray(int index) {
      return districtIdArray_.get(index);
    }
    /**
     * <pre>
     *车源所在区县Id 20170825
     * </pre>
     *
     * <code>repeated int32 DistrictIdArray = 195;</code>
     */
    public Builder setDistrictIdArray(
        int index, int value) {
      ensureDistrictIdArrayIsMutable();
      districtIdArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车源所在区县Id 20170825
     * </pre>
     *
     * <code>repeated int32 DistrictIdArray = 195;</code>
     */
    public Builder addDistrictIdArray(int value) {
      ensureDistrictIdArrayIsMutable();
      districtIdArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车源所在区县Id 20170825
     * </pre>
     *
     * <code>repeated int32 DistrictIdArray = 195;</code>
     */
    public Builder addAllDistrictIdArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureDistrictIdArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, districtIdArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车源所在区县Id 20170825
     * </pre>
     *
     * <code>repeated int32 DistrictIdArray = 195;</code>
     */
    public Builder clearDistrictIdArray() {
      districtIdArray_ = java.util.Collections.emptyList();
      bitField3_ = (bitField3_ & ~0x00001000);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> inhaleTypeArray_ = java.util.Collections.emptyList();
    private void ensureInhaleTypeArrayIsMutable() {
      if (!((bitField3_ & 0x00002000) == 0x00002000)) {
        inhaleTypeArray_ = new java.util.ArrayList<java.lang.Integer>(inhaleTypeArray_);
        bitField3_ |= 0x00002000;
       }
    }
    /**
     * <pre>
     *进气方式Id 20170825
     * </pre>
     *
     * <code>repeated int32 InhaleTypeArray = 196;</code>
     */
    public java.util.List<java.lang.Integer>
        getInhaleTypeArrayList() {
      return java.util.Collections.unmodifiableList(inhaleTypeArray_);
    }
    /**
     * <pre>
     *进气方式Id 20170825
     * </pre>
     *
     * <code>repeated int32 InhaleTypeArray = 196;</code>
     */
    public int getInhaleTypeArrayCount() {
      return inhaleTypeArray_.size();
    }
    /**
     * <pre>
     *进气方式Id 20170825
     * </pre>
     *
     * <code>repeated int32 InhaleTypeArray = 196;</code>
     */
    public int getInhaleTypeArray(int index) {
      return inhaleTypeArray_.get(index);
    }
    /**
     * <pre>
     *进气方式Id 20170825
     * </pre>
     *
     * <code>repeated int32 InhaleTypeArray = 196;</code>
     */
    public Builder setInhaleTypeArray(
        int index, int value) {
      ensureInhaleTypeArrayIsMutable();
      inhaleTypeArray_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *进气方式Id 20170825
     * </pre>
     *
     * <code>repeated int32 InhaleTypeArray = 196;</code>
     */
    public Builder addInhaleTypeArray(int value) {
      ensureInhaleTypeArrayIsMutable();
      inhaleTypeArray_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *进气方式Id 20170825
     * </pre>
     *
     * <code>repeated int32 InhaleTypeArray = 196;</code>
     */
    public Builder addAllInhaleTypeArray(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureInhaleTypeArrayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, inhaleTypeArray_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *进气方式Id 20170825
     * </pre>
     *
     * <code>repeated int32 InhaleTypeArray = 196;</code>
     */
    public Builder clearInhaleTypeArray() {
      inhaleTypeArray_ = java.util.Collections.emptyList();
      bitField3_ = (bitField3_ & ~0x00002000);
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:TaocheES.SearchCondition)
  }

  // @@protoc_insertion_point(class_scope:TaocheES.SearchCondition)
  private static final TaocheES.SearchCondition DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new TaocheES.SearchCondition();
  }

  public static TaocheES.SearchCondition getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SearchCondition>
      PARSER = new com.google.protobuf.AbstractParser<SearchCondition>() {
    public SearchCondition parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new SearchCondition(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SearchCondition> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SearchCondition> getParserForType() {
    return PARSER;
  }

  public TaocheES.SearchCondition getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

